// REVIEW DAY 1
let dayOneInput = [1864, 1880, 1300, 1961, 1577, 1900, 1307, 1818, 1736, 1846, 1417, 1372, 1351, 1860, 1738, 1525, 1798, 1218, 1723, 1936, 1725, 1998, 1466, 1922, 1782, 1947, 1717, 1914, 1843, 1732, 1918, 814, 1771, 1712, 1804, 1213, 1859, 1820, 1793, 1870, 1993, 1787, 1824, 1849, 1646, 1489, 1348, 1978, 1628, 1781, 2002, 1297, 1829, 1596, 1819, 1313, 1413, 1726, 1449, 1810, 1295, 1679, 1358, 1949, 1644, 1825, 1891, 490, 1962, 1939, 1228, 1889, 1977, 1980, 1763, 1752, 1983, 1785, 1678, 2000, 1857, 1658, 1863, 1330, 1380, 1799, 1789, 1633, 1663, 296, 1985, 1117, 1239, 1854, 1960, 2004, 1940, 1876, 1739, 1858, 1283, 1423, 1982, 1836, 1451, 1840, 1347, 1652, 1695, 1210, 1861, 1199, 1346, 1786, 1814, 1958, 1853, 1974, 1917, 1308, 654, 1743, 1847, 1367, 1559, 1614, 1897, 2003, 1886, 1885, 1682, 1204, 1986, 1816, 1994, 1817, 1751, 1701, 1619, 1970, 816, 1852, 1832, 1631, 703, 1604, 1444, 1842, 1984, 1259, 1948, 1620, 1681, 1822, 1865, 1521, 1741, 1455, 1909, 1764, 261, 1464, 1905, 1325, 1766, 1749, 1292, 1874, 1267, 1269, 1969, 1991, 1219, 1345, 1976, 1369, 1942, 1388, 1776, 1629, 1987, 1684, 1813, 1203, 1965, 1729, 1930, 1609, 1801, 1402, 121, 1833, 1898, 1957, 1051, 1430, 1893, 1784, 1800, 1910]


function day1part1(input, date) {
  let answer = 0
  for (let i = 0; i < input.length; i++) {
    for (let j = 0; j < input.length; j++) {
      let num1 = input[i]
      let num2 = input[j]
      if (num1 + num2 == date) {
        return num1 * num2
      }
    }
  }
}

function day1part2(input, date) {
  for (let i = 0; i < input.length; i++) {
    for (let j = 0; j < input.length; j++) {
      for (let k = 0; k < input.length; k++) {
        let num1 = input[i]
        let num2 = input[j]
        let num3 = input[k]
        if (num1 + num2 + num3 == date) {
          return num1 * num2 * num3
        }
      }
    }
  }
}

// function day1part1(input, date) {
//   let dict = {}
//   let answer = 0
//   input.forEach((num1, i) => {
//     for (let key in dict) {
//       let num2 = dict[key]
//       if (num1 + num2 == date) {
//         answer = (num1 * num2)
//       }
//     }
//     dict[i] = num1
//   })
//   if (answer != 0) {
//     return answer
//   }
// }

// console.log(day1part1(dayOneInput, 2020))
// console.log(day1part2(dayOneInput, 2020))

// REVIEW DAY 2

let day2Input = ['3-5 f: fgfff', '6-20 n: qlzsnnnndwnlhwnxhvjn', '6-7 j: jjjjjwrj', '8-10 g: gggggggggg', '5-6 t: ttttttft', '6-11 h: khmchszhmzm', '4-6 q: qqbjqqqj', '6-8 j: gtkwwjjj', '13-14 w: lwgwrwczwwhkww', '2-4 p: vcnptzdppvpdzp', '4-6 n: pmlnzwrnbnxnpmwmhbnz', '4-9 w: wwprdwwwx', '13-20 b: rbbcbbbbbbbbsbbbbbmj', '1-3 r: zwhrnvr', '4-6 f: fmfgfcf', '13-15 z: zxzzzzzzzzvxkplvzzz', '12-18 r: phjqccgmgzmdwxgtrtb', '5-19 s: ssssssssssssssssssss', '6-7 d: pddqmdd', '7-9 p: pwrlpvlhpfpppzp', '4-5 m: mpmmmm', '9-10 s: ssxsssssrj', '6-9 p: lpjrvpppp', '6-13 r: rrrzvtrgrhqxqrvrvwzr', '1-3 p: dpjp', '6-7 w: wkjnmww', '1-5 r: cfqhhr', '5-9 m: wmmlpgmqmmrm', '12-13 x: sxgnwxxkjwrxr', '6-8 n: lnnrnnnnn', '10-11 q: kqqqzqqfqqqqq', '12-17 k: kkkkkkkkkkpkkhgvnjhk', '12-13 v: vvvvvvvvvvvvvv', '12-15 h: hhhhhhhjkhhhhhth', '6-7 l: hmqtlllnllnlmtqnn', '6-9 m: mcmmmdnmh', '3-5 k: kkhtn', '2-4 n: tnfjmnnn', '5-6 j: cjwlmn', '4-11 b: bcbbkrlgcbbc', '5-10 r: rcrcgrrrzwrrxgpzwrcm', '3-4 n: znnn', '11-14 s: sssjsssssssssss', '6-7 d: rwdddddmdddddkdd', '1-4 s: gssssskssss', '4-5 j: jjjjzj', '11-12 j: cjjjgpjxnjjk', '3-6 z: zzkdzzz', '7-9 d: mkddddqdhddgdd', '1-9 d: rxwqcdrswdg', '2-4 m: gmmmn', '2-4 k: kkkmk', '15-16 r: rrrrrrrrlrrrrrrr', '1-11 g: grgggcgggcggp', '7-8 q: qqqjqqgq', '13-14 c: cxccccgccvcpccccc', '2-5 j: txvwlls', '3-13 w: plwqwhbwdgxcwfmwjl', '9-11 g: ggggggggggggggggdgg', '3-12 g: ggsggggggpgm', '3-11 g: bcgqgxmbjpwm', '8-9 z: zxvzrzzzzzdvzzgz', '17-18 z: zzzxzzzzzzzzzzzzsw', '9-10 t: ftrmtttktttttdtmdk', '15-17 r: rjrrprrrrrrrrrrfrrrr', '7-8 k: kkkkkkkkk', '6-13 n: nnnvnfgntnnnjnnxh', '17-19 l: llllflllllllllllqlrl', '11-13 d: hdlddddddhxddddkd', '13-17 h: hhhhhhhhhhhhnhhhjhhh', '1-12 c: ncccczwcnctcwcc', '4-5 w: wgwkl', '12-13 w: wwwwwwwwwwwwfwww', '3-12 s: scssgwshsspsss', '15-17 w: wwwwwcwxmhwwwwwwwww', '1-3 x: xxxxw', '8-9 p: mpppppppzptp', '11-12 n: nntnbnnnnnmx', '2-10 x: xrspbmkcthqsdxrdxwx', '13-14 l: lllllllpllllll', '5-10 x: xxxxjxjdrx', '7-8 k: kkkkkkjk', '9-11 k: vkkkkkkvkkzddbzr', '3-8 r: lbrrcwbdf', '6-14 l: lgwllrgllllllgllll', '6-9 q: nqqkhqqtqgqc', '2-4 g: ggxggggggg', '12-13 k: kkkkkjkkkkkvf', '5-9 b: scvbbpzbbbzbfb', '16-17 d: mdddddddddddddcttd', '4-10 l: lllflllllllllllllll', '3-6 q: qqqqqtqqqq', '1-3 n: pblsghl', '9-11 v: bvvvmvfvvgtvfpv', '4-5 s: ssshq', '5-8 g: ggwgnggp', '1-4 f: ffmr', '4-5 g: ggwzs', '4-5 h: fhhqs', '10-17 l: clhlllhslxpgljpvlrkl', '7-9 m: pnswhtmvmsrmjwrbfz', '6-16 v: vvvvqcvvvdzvjvldvv', '5-6 c: cntcrl', '12-13 n: nnnnnnnnnnnnln', '2-4 w: wwww', '2-13 w: swrqssmmwrxtw', '15-16 z: zzzzzzzzzzzzzzgqzzz', '6-8 c: cctvkbdcwcbvhc', '1-2 w: wwzdwjtm', '1-3 z: mzzh', '6-13 t: fttttdwtttttkht', '3-9 g: cggfjgqngwmj', '1-5 k: pkkkkkkrk', '1-5 q: qknqd', '7-11 t: tttttckttkb', '6-7 q: qqqqqbl', '16-17 c: ccccccccccccccctc', '2-5 v: vfcnvlvvvxvrnvvvvvv', '1-5 w: nwtwnnwwhtwwdwwww', '2-10 v: ftvxxbjzlqctp', '5-7 d: nddddgddjdbk', '8-11 s: wxqjwkcsflssm', '17-20 v: vvvvvvvvpvgvvvvvvvvv', '6-8 w: wwlwwwqfw', '13-14 r: rrrrgrrrrrrrrr', '5-6 t: ttttzq', '13-14 c: cccccccccccccc', '11-12 k: kwzkkkbdkjkk', '10-11 t: ttttpttttrwwtttt', '3-4 w: ljwwww', '7-8 q: ggqzdvqqw', '1-3 z: zzsg', '1-2 c: crjvdhgwckszmzpcjmr', '10-11 n: nngnntnnnqn', '7-16 w: bwdgwwwgwwnnqtcwc', '4-16 v: vfkvqvvsvnjhfvvv', '10-11 p: fgbhpzqvkmn', '10-11 w: wswgwqwszwwhwnwww', '15-16 t: stwtfxttthptttttt', '1-3 v: vlvsdmrv', '5-8 z: zzzzfzzz', '14-15 t: ttpvtrlqtlcdrlv', '2-6 b: qwfnbkc', '6-9 p: jppjpspplm', '3-4 s: brgqssz', '2-6 q: cqwqlq', '13-14 d: rrdljqdddddcxzdc', '8-13 s: tsnssssssssrcssrssq', '7-8 d: dwddddgl', '9-15 b: gspmhlgbbzbbbrbt', '3-4 h: khhh', '3-4 c: nkccpmcct', '6-7 g: ggggggg', '17-18 p: ppppppppppppppppjnp', '2-6 f: rfjxtff', '3-4 g: ggvg', '7-9 k: kkkkkkkkkkk', '11-16 f: fjdffrtfffjfdffcln', '4-8 w: lhpdwbnfssswwfswwwrw', '5-9 l: lvlllflll', '5-6 t: wtrtlr', '4-8 m: mnmmjgqtgs', '5-11 n: nnrngbnntnk', '5-8 s: ssssfssss', '7-14 m: hrnbhsfcvdmxbmvzfvnq', '1-5 x: xxxxxxxxwxxdg', '1-10 v: vcjvvjvvvv', '5-10 l: vvdmhskmprszklvvl', '3-17 d: dsddkddddddqddddfjdd', '9-13 p: pppppppptpppqp', '12-13 h: hhhhhhhhhhjhh', '1-4 z: mrvlzlzhzlp', '3-4 h: hhmc', '7-17 w: wwwwwwwwwwwwwwwwww', '6-8 z: cgzxzznzzdhcvwh', '4-5 g: mgggg', '7-8 t: ttrthtdkjtgtts', '8-9 w: wwwwwwwpw', '9-15 k: kkkkkkkkkkkkkkk', '8-14 q: qqqqqqqqnqqqqq', '14-19 w: jkwbwwlwdcmwmmwwrwr', '4-5 m: hsxgkdmz', '2-4 v: vsvqvcv', '4-9 h: grhnhhmhhxhlh', '6-14 t: tmttrjbtjtfttc', '1-4 d: pjdbrb', '15-16 r: rrrrrblrrrrrrrxwr', '16-18 p: pppjpppppptpplpppppp', '4-7 x: mxtngxnpsx', '9-10 b: bbbdbqvmrgbzbbbb', '4-5 w: wwwwj', '1-2 d: dgws', '3-10 l: lglsphlbgfmgdtw', '10-11 h: hhhhhfhhhpdhh', '5-9 x: xxxxqgxxjf', '11-19 m: bfmxmmfgzzhqwsmgwmlr', '10-14 x: xxxrxkxxqrlxmpxbdx', '3-8 l: lxlxvwlllznlptfv', '5-9 h: hhthhhhshdq', '1-5 q: sqqqqqqq', '9-14 j: jxfcjpjfjjgjjjjjjjhj', '1-7 g: gvdgjgsvvgnd', '2-5 t: tmttpttttt', '17-19 c: ccccclcccccccccccccc', '10-13 d: mdvddtsddrxtx', '11-12 g: gggggggwggzgp', '3-5 k: hzxnpkq', '9-11 q: qqqqqsqqqqq', '8-9 x: btrkbxngx', '3-5 g: jpkchcxcxhzfhsggqkg', '7-13 s: ssssssssscssssn', '13-15 p: pppppppnppppppp', '5-15 f: ffffjfffffffffgf', '2-4 p: zqphp', '1-4 r: wrrr', '3-9 b: jsjcbrkkczkzmjbg', '1-2 k: kkkkl', '2-3 n: dlnxjwzstsdxns', '7-14 v: fvvvvzhhvpsvvckdvv', '2-8 r: rrrrwrhrrrr', '5-8 n: nnxdnnnnnn', '5-12 c: scmcdscccccmcc', '9-10 v: vvvvvvvvjm', '14-15 w: lwppdwwwwdmrrww', '6-7 c: qcgcvxdrcccpxchrnlq', '8-10 x: hbrqsksxwxxttz', '18-19 w: jnftgwpwmwfdgrcpkww', '3-4 k: ffkj', '5-9 f: flffsvffsff', '3-4 k: kkkkk', '1-3 l: dlglkll', '10-16 f: bfffjzfffnfffffxhfff', '11-20 d: ddbdqsddddddddddfddd', '6-20 l: vmjltmkclbmqrflzgdzl', '5-19 f: ffffffffffffffffffff', '5-10 n: nnnnmnnfnz', '4-13 f: kmrfrfkvjxdbftvhnsdm', '10-11 k: kkkkkkkkskk', '12-13 k: kkkkkkkkkkkhj', '7-8 p: ppppppnhw', '5-8 l: gtpllwklh', '13-14 h: hhhhhhhhzhhwsrh', '7-15 h: hhhhhhthhhhhthqgfh', '1-3 f: mfdmhv', '15-16 f: fffffflfffffffbqf', '12-13 c: cccmcccccccxn', '2-12 q: nqltxqfdcrxqvt', '8-10 d: dddddddddvdddd', '2-9 g: mdrwnvtsd', '12-13 l: lllllllllllll', '2-3 m: mnrgmdm', '6-9 v: hvvvvvvvv', '4-7 q: bqqqrqcqqqq', '8-11 v: vvvvdvvvvvr', '3-4 n: cnnw', '2-12 r: rrrklfrrrksrr', '2-12 p: pxppklhsppwdxwcpzvm', '10-11 n: nnnnnnnnnnn', '5-6 w: wfwwww', '3-5 p: pppppp', '3-8 g: ggggggggggggggg', '1-4 x: xxxxx', '11-16 d: ngcdkglddtppbddgdrd', '11-12 k: kkkkkkkkkkhr', '12-13 c: hgxxchcvxpdlsrt', '1-3 m: vmmm', '4-6 z: kvzgzzzp', '11-12 d: dzddzlcbvdxk', '10-11 g: ggsgggggggggdz', '6-8 q: xfhgpqltbfbdzqg', '4-7 v: vvvlvcxmvvxq', '5-7 v: vkkgvgvnpvvlpgkv', '6-7 b: bbkvnwbqblbvbb', '2-4 l: wmll', '6-9 j: djqjcxxljm', '3-4 j: nmzcsnlnjjjdms', '3-8 w: wnwwsvww', '9-20 m: wbntxzztwmblxmsmltmg', '7-8 r: rprrrtrf', '1-3 r: lnrfxfswmhgvf', '5-12 k: zlkdlktsrqjt', '13-14 v: vvvvvvvvvvvvvbv', '11-12 d: ddddddddddgc', '9-11 c: mdwpjjcdcrc', '5-6 m: mmmmnl', '5-6 l: lblldn', '13-14 c: sccfcxsnsclccc', '4-5 q: qqkkq', '5-8 m: mmmmmmmm', '5-8 z: tzhzzttzvwfcv', '12-15 b: bbbbbbbbbbbtdfb', '7-10 b: bbnplbbxxbh', '1-7 x: zxxxxxvx', '6-17 b: kbnbbbbbptbbrbbbb', '1-3 l: llllll', '13-15 c: ccccccccccccqcz', '1-8 s: sssssssb', '12-19 x: xxxxxxxxpxxcxxxxxxq', '12-13 x: xxxxxxxxxxxxxx', '14-18 w: wwwwwwwwwwwwwlwmbk', '7-8 q: mzwqblqqz', '1-7 p: hrppppgdzp', '2-7 n: qmvpmsjncgkgpbb', '8-10 x: xxxxxxxwxx', '2-4 v: rfcpmpvsswsrjkxpdrxh', '14-16 k: kkkkkkkkkkkhkkskkt', '14-15 d: ddddddkdddddrqdd', '4-16 m: njmqmmmjfmmxhmwgdbc', '12-13 h: hdmdfhhhzhkdhr', '3-14 n: nbntrsmnmrcwbf', '6-8 h: hhwhhlhnhh', '18-19 v: vvvvvvvvvvvvjvvvvvp', '11-20 l: ldllllbvllmqllmlllfl', '2-3 d: dcddd', '4-6 n: bsnncn', '3-6 f: dwlfqfzgs', '8-12 d: xdddddfhnddfddd', '5-13 l: llllqlllllmllll', '10-14 m: mnmzrmmmmwmmqm', '3-12 c: qjchcclnbccccpc', '7-16 j: jjjjjjwjjjjjjrjnjj', '1-10 v: svvdvvgmgpkfkvhvv', '2-4 b: gbpbczblbbv', '7-9 w: drwwbwtgwswwww', '2-8 h: fhkprhplz', '1-6 m: mmmmwm', '3-4 g: gggp', '1-3 q: qqqqj', '10-11 h: htfrdwrnkzntnfpdmkhq', '5-6 x: nxxxxxxxj', '7-8 w: wwwcwwww', '1-5 h: lhhhhh', '7-8 f: ffjfftff', '3-5 g: kdgfgjgbghggp', '2-11 p: flgpvfbhpzxmmntw', '12-13 z: zzzzzzhzzzzgzzqz', '12-13 j: ttmhmdfjpdpnj', '5-7 h: hhhhvhh', '9-13 x: xhxbxxsxxqwxxvxxxx', '1-3 c: ccchcc', '2-5 h: hhrsh', '1-3 q: rqqq', '2-8 x: sxrxbcxx', '12-15 b: bbbbnbbrbcbtbbb', '14-18 m: hmmmmmmmkmmmmmmmmrmm', '1-4 v: vvvv', '5-11 h: brnzvqhrrwh', '4-10 f: dbtfdvlfnffqmwp', '3-16 r: krrrvmrwrrrtrrrrkrwr', '11-15 c: gxbccccccccccbh', '13-18 z: zzrzzzzzzzzzzzzzzzz', '1-3 l: lkvxtrthfvmdzn', '7-9 p: vpppmpppppp', '3-4 w: wwwwwwww', '8-11 z: vlzzzlzvzzmzzz', '2-4 v: vqfv', '10-11 s: sssssslssgss', '4-5 z: zzzww', '11-19 p: zpbpdjfjpdfgnpphhpg', '1-8 f: fftlxmfl', '9-10 p: phlpqzppxpxp', '5-7 q: kbqjqqq', '3-6 m: jcblmv', '9-10 l: llllllllll', '13-14 w: wbwhwwwwhwqwmswwmjwf', '6-11 j: jjjjvtjwjbdjj', '4-8 j: jljjjvgj', '3-4 r: lrhvrzrr', '2-4 p: plpfkphpq', '2-6 b: bbbbrbvwbbgh', '2-11 t: mmjmcwcdcbtztxfbtst', '7-15 r: grsrrjrrtrgvrtrrr', '6-17 d: dddddgddpddzddddddd', '3-10 t: qpnbrnmmjtjxtdg', '6-7 v: vvvvvhb', '5-20 j: vxmkjnssjdtldsdwltlg', '7-10 r: rrrrrrrrrrr', '2-4 r: rrpl', '3-4 m: mmzg', '1-8 h: fshhjrhm', '5-8 m: mmmvmmvmmnmdxnjcjpn', '8-10 m: mmmmmmmlmzmm', '14-15 q: qqqqqqqqqqqqqqb', '6-16 q: qhkdtqnzqqqjgjrqrkbq', '3-9 b: gtbbfgfhbs', '14-16 h: hhhhdhhhmhhhhmhhh', '9-10 n: nnnndnnnvjnl', '11-12 p: pqpppppppppppp', '7-9 d: ddpwfdtdd', '6-10 z: qzzzzjzzmz', '9-14 q: qqdjqdqqrqqwqnqqp', '6-7 k: kkkkkbkk', '7-14 j: hjvjmzkhgltffljjvjj', '4-5 z: znhzz', '11-16 r: rrrrbxdrrqrrsrrb', '5-8 v: vvhvvvvvwvlvhlqg', '4-10 n: wvnnjnndcnk', '5-6 g: ggkggk', '8-9 w: wwwwwwwww', '5-9 r: mrwrrrrrx', '4-6 r: jcfrjrrrg', '6-9 w: wkwwsxwgfcwqb', '5-6 x: grxjxnrb', '2-7 s: nsmldnsszdk', '5-9 j: gjjzkjvjwjcjbj', '6-11 r: jtrgcvwccrrrfmj', '7-12 j: jfjjmjjjjxjqzdjjxq', '1-2 n: nnwqcnr', '5-16 l: lllpclllllllblllll', '5-6 j: wjgdjcdpjxfjxnjj', '3-16 s: klstwqksfclmcbbcn', '17-18 t: ttttdtttttthtttttttt', '9-13 p: ppppppvpvhhqp', '1-2 n: tsnnn', '3-4 p: jpqpjmpplpw', '4-6 t: dtfthsxtfpd', '2-6 m: zhszctkm', '1-13 p: dppmkpbprgppxcpvhrpz', '2-7 m: gvmmflp', '9-16 c: rcdsppjbcwdxnfbc', '5-15 p: pppxpppqnhpptpppz', '10-13 q: xfhqhkqkjqjwqqcfrgl', '14-15 t: tttttttttttttdvtttt', '5-8 q: qqqbqvqzqqn', '1-7 v: cvgvvbcgjv', '6-9 r: rrrrrrrdr', '2-11 j: wjjgxngswkj', '11-13 d: dddddddddddddm', '5-8 p: pzppppppkjp', '15-16 c: cccccccccccccctc', '1-7 c: vsvkccbc', '2-5 h: hhhhchhhhhhhhhh', '9-11 n: nnnnnnnnnnnnn', '11-12 q: mdmfmkxcxzjq', '6-11 m: mmkgnjdhfbc', '1-4 d: dgrdwbdfdkdrmthsj', '12-14 k: kkkkkkkkkrjkkkkk', '2-4 d: hdrvdzd', '2-3 s: sxmsssssssssssssssss', '13-15 z: zzzzzzlzzlzztzzz', '3-8 r: lxrrrnvrtrgnmkrr', '6-7 w: wwlbrwwww', '4-7 r: zlnmmkpnrkkcrrxrmfq', '2-6 v: zgvvjjvvjhjv', '8-11 l: llllllllllcl', '8-14 m: mlmldmmgnqzmmmm', '7-10 z: wzzzzhtzdqzznzz', '4-7 k: mvgwkkk', '5-9 p: pdpltvdpptpppg', '4-15 q: qqqfqbzqlqqqqqpqfqs', '5-7 q: qqqcxqqm', '14-17 x: rltjxxbxxxllsxwcx', '1-13 w: gwggwwwwwwbsbwkwwd', '8-14 k: kkbkkkkhkkkxjzblgk', '5-8 p: cppnpprp', '6-7 k: jrnvhkkgkkb', '12-14 h: hhhhhhhhhhhhhn', '10-20 j: gjwjjjpjjljjjjjsjjjj', '16-17 n: nnnnnnnnnnnnknnnnn', '5-6 f: cdpppf', '12-13 z: bvpzqzzlwzccfszt', '1-9 k: wdkkvtrprltkkltz', '9-16 x: xxxjxdxhtzjxgxsbx', '17-18 j: jjjjjjjjjjjjjjjjlrxj', '2-5 x: xkknmxxxn', '3-9 f: tfffhfffffff', '11-16 r: rrlgrrqmrrprcrrrvjr', '9-12 m: nrlmgmxvgkmpmqvntx', '4-7 r: hrrrzrrnm', '3-15 g: stgjgbgggvdljcgdgfg', '6-9 j: jjjzbpjjjjjj', '2-3 p: ppjp', '9-10 t: tttttttttt', '10-12 w: wwwfwvwvnkwdwww', '11-14 d: nvljddddftrndzx', '6-7 r: rlrrrbqcrqr', '2-4 c: xbdl', '11-18 c: ccccccccccvcccccccc', '5-6 j: gjjjjjj', '3-7 w: xwhnqlhnpfrvlkqqrp', '6-19 q: qqqfxdglhqqkqqqjnhdq', '8-9 d: ddsdddqsv', '14-16 g: gggggggggggggggt', '3-5 b: bbbnh', '11-14 t: mtttwttfttttltq', '8-10 x: xxxcxxxfxq', '8-11 l: lfgvnlzrfcllnxss', '1-3 t: gtttttttwgtptt', '1-20 j: jjgjlqjjcjcjjjsjgjlj', '8-14 v: dqgmngvvqnswvvrrvc', '2-8 m: gmpkmmsmmmmm', '5-6 m: mmmmtm', '6-7 z: zfzrxzxz', '4-15 k: wmwkhhskgwzqpnk', '2-6 d: hddddfzdsdtvg', '9-10 g: gggsggggggrgggqg', '11-12 m: mmmmmmmmmmmm', '5-7 w: wwhqqhwwwwd', '4-9 k: gtkrkkkdfk', '1-4 g: kgtvg', '7-11 r: rhdbzjrwrcr', '9-18 f: fjffffffdffkfffffvf', '3-5 t: ttttt', '13-14 q: qqqqqqqqqqqqcqqq', '1-8 n: vnnnnwnqlbln', '3-5 s: ssmss', '2-4 q: qqqbkvqxh', '3-4 n: nshscq', '10-18 s: sssssssssnsssssssgs', '9-10 v: vvvvvglvzddvvjv', '5-16 s: sspssssrssssslss', '4-7 t: ttptxtt', '2-4 r: rrrrrxdrr', '8-9 b: xqvbbbbbh', '3-4 b: bbbbc', '1-13 v: qhvvvvlvvvvvdv', '4-8 l: lhkllblwllll', '3-4 q: qhjgq', '8-9 p: rpbpppshdpp', '13-18 k: kkkkkkkkkkkkkkkkkx', '8-9 r: rrrrrrrrr', '5-10 f: bjfwwqvjwffpnl', '1-3 l: pbhl', '4-6 g: mggfgv', '1-4 t: tttttt', '5-10 t: llqrtccxtttntxjcdczk', '13-14 q: qqqqmqqqdqqfqgqqqq', '6-10 w: wpwmwwrgwwk', '13-16 q: qqshgkqkqvscqtqq', '4-5 t: qttdt', '2-12 h: fpbbxgpskzjpkvtr', '10-12 z: zrszvzzzzrzkznpzw', '1-4 z: tgzz', '3-6 c: cdwccvgm', '1-15 q: jqqxkqrqmtfqpvbpq', '4-6 v: vjvlvvv', '1-7 l: hjlllwj', '6-13 s: lrspslfwsgjks', '3-4 p: dpvk', '4-8 h: hsjjhhff', '1-18 k: pkkkkkkkkkkkkkkkkkk', '6-8 n: nvcnxqnnrnnn', '7-8 p: ppppppvzp', '12-17 h: hhhhhzhhhhhkhhhhph', '13-17 p: ppmpppnppppplpbvcppp', '8-14 m: tmmcjvmmjgcfmmnj', '1-3 t: tttth', '3-4 x: zxxx', '1-3 d: kpwhxpctcgdbdkb', '5-6 z: knnlzzzzxjrghzb', '9-10 w: wwmwwwwxgww', '9-11 b: bqbbfbbwbbqbb', '2-3 d: ddxp', '10-12 g: gggvgsgtgggggbg', '3-4 b: gbbb', '8-20 c: jccqcxjcqfncfcbccgcc', '4-9 z: zzzztzzzzzb', '2-12 x: gmfmzzrxsqbx', '10-12 x: xxxzbxxjxxxkxb', '3-4 v: szpvbvlvr', '2-5 r: grqqr', '4-8 q: mqqnvqvqqq', '6-10 v: vdbvnvvxvvvnvvvvv', '4-10 d: dddtdddddjd', '3-4 l: klmc', '10-13 k: kkbkkkvkhkvkkkkkl', '1-3 v: vvkz', '13-14 h: pkgffgcszgsghbcdtpm', '11-16 c: dgccccccctchxbfm', '8-9 b: bbbbbbbbbtb', '1-9 h: hrnhhlphhh', '17-18 s: ssssssssssssssssst', '5-10 h: hhhhhzhhhhhx', '2-7 k: dlrncbkkwp', '3-5 k: kfqkk', '4-8 d: ddddddddd', '10-15 m: mmmmrmmmlpmmmrgmkmx', '2-4 g: gsgggkm', '7-9 l: llsllllvrzlxlrgglk', '2-9 f: fzfbvfkff', '13-14 p: pxppppppppppvf', '15-17 z: nbkxkjtszptcndzdl', '3-6 z: zzxzzhz', '12-13 t: tttttttttttttt', '5-10 s: pssbfsbsssnssvsb', '9-18 c: ccxthchscjjdccvcncl', '3-5 f: fndfqffffff', '2-4 m: clwvcdjmz', '7-8 b: bbbpbjbb', '2-3 r: rbxx', '3-8 j: jjjjjjjjj', '5-10 v: zrwnvbrvmm', '4-6 h: hhghhhhh', '6-8 f: fnffzfwfgffpfc', '5-6 q: qvqqqqkqqq', '3-5 v: vgwvrgqc', '9-10 p: pppphbbpphppb', '10-12 l: rdjrcxkgflll', '9-14 h: qwwxnhfhnfhhbhhjr', '9-10 d: ddddpddddd', '4-13 w: wwwwwwwwwwwwwwww', '8-16 x: xrxxxxxxxdlxxxxxxx', '6-10 p: pplppkpzwb', '5-7 j: wpjjjgjjvjqjrgj', '4-13 w: cwwswwwwwjwwdvw', '5-6 j: jjjsjjj', '4-5 c: ccfccqdqctllbm', '7-13 c: bcccccccccccccc', '4-5 p: pgptw', '1-4 p: qpwmp', '3-5 f: fftfff', '2-6 m: mmhbpmjlx', '9-13 r: zrrczrlrzqxrszrrlrr', '2-9 w: xrszwwwdkww', '6-14 g: qlwswsgjdlgmzvwg', '6-8 z: zzzzzzfz', '6-7 w: xwzsjjr', '2-13 f: fxmfdnfffkpggz', '1-7 d: rdnlqdplfddjdd', '11-14 j: kjjvjjjxpjjjjjzjjjz', '12-14 p: gpppwvmqpfpptpfppkpc', '6-11 k: kkkkkhkknkkkkkgk', '2-6 m: swpgmf', '1-3 x: sxzqnxxv', '12-18 n: nnnnlnnnnnnnnnnjnxnn', '3-4 p: pppq', '8-9 v: vvvvvvvpv', '6-9 l: ltsldwtlhll', '11-14 x: xxxxlxxhdtxxxxxsxx', '4-5 q: qsqvqvq', '5-6 b: sbbbbt', '10-13 l: lllllslllrllll', '1-5 m: zmmmmmmm', '2-10 s: ssssssssss', '5-8 r: qqcsbjcrljvksc', '11-15 n: bndcnknnxnnnnnbn', '14-15 v: tvvvvvvvvhqwvvv', '2-3 s: jsvcsb', '12-15 d: mddddfddddlxddddd', '12-18 w: wwznwcgwwwwwwhwwgwgw', '2-9 v: dxlvvlvqg', '2-5 h: njpsxr', '11-13 m: rmmmmmmqmmzmtmm', '4-8 m: smmmmmmm', '3-10 j: ngwtkjfrjjtrxfnvj', '2-3 p: ppwwpp', '3-5 c: cbmcncnqc', '11-13 m: mmmmmmmmmmcmm', '4-14 g: gggggggggggggxg', '2-4 b: bbfb', '16-19 p: ppppppppcppdpppmppwp', '10-12 g: gghgxgkvggrggrg', '1-8 b: wjjqktjbbfkdz', '8-11 c: cqccdcncfcccnc', '2-10 z: qzvlqltzns', '3-7 p: kgpmpzpbx', '1-6 m: mxmdmlmmzmmmmmmmmm', '1-7 r: rrrrrrrrrrrc', '8-10 h: whhhqhhhjjhnch', '6-10 x: xwxxxxkpxdkdnxvh', '10-12 z: zzzzzzkzzpzzzzz', '1-12 s: dssssssssssds', '4-7 f: fvzbfcf', '5-6 w: fwwxfwmswxkd', '14-15 g: gggggggzgggggfhg', '6-7 j: jjjjjnb', '1-6 v: vcgksvnrbgsvkrwsc', '6-15 w: wkvwwwpqwwwbtwxvhw', '8-9 m: smmmmmmmmm', '14-15 r: rrjrlrrrrrrrrzbr', '3-8 w: tjqncxsnqkdpwzm', '4-5 k: kkkkk', '8-11 z: zzzzzzpzzxzzkzglzrz', '5-6 k: kkkktzk', '18-20 w: wwwscwwwwwwwwwwwwgws', '1-12 z: dsfxzctdzzjxbt', '14-15 q: qqqqqdqqqqqqqqq', '7-10 r: rrxrrqrrxcbr', '1-13 d: fmgjzgqhdhddd', '4-6 g: mnggxttn', '6-7 v: gwtmscl', '11-14 g: gggnmgggggjggcgggrgg', '17-18 k: gcslskskkkwkwkklkk', '14-16 r: rrrrrrrrrrrrrbbrr', '13-15 s: sjsxszssgfssdgwsbbsp', '1-9 d: dddddddddddd', '1-13 j: mnjjzckxzjjdj', '1-2 j: hwrqjxxcj', '6-7 z: fzzzwxnnrg', '2-10 x: wxnqjddpxxpxw', '3-10 s: srvvssdcvzfn', '3-11 w: gwwwmwvwwww', '3-4 q: qnqs', '11-12 d: dddqdddzdrddddd', '2-15 l: wldlltxhrwzzlhz', '4-7 g: vgsgkfgmc', '7-9 t: jdsltcgttdttd', '9-10 q: xvqjqqqwqqqqqpqq', '6-9 b: bbkbnbgbbb', '2-5 t: ttcjtbkb', '7-8 r: rdrrqrnrrrrrvp', '2-4 f: pnfqfffvpfffffhbffv', '10-12 z: kzzzzzzzzrzpzszz', '4-5 m: tmmgxlm', '3-4 k: kwhhk', '1-11 h: hhhndhhfhvhchmmqhz', '6-9 m: lmmmmmmmtmmm', '1-5 d: dwdkd', '5-6 d: dddddq', '7-9 j: jjjvgvmjdjbjj', '3-6 w: gwzhpjwkg', '10-11 h: hhlmftlhkhhnh', '8-20 h: hhgnchpthzhhhhqqwhcz', '6-7 s: sssssgfs', '3-11 g: jfgqgbvqppjn', '5-6 d: ddqkmbd', '14-15 h: hhhhhhhhhhhhhphhh', '12-13 l: fwkwphdlwmfwg', '3-4 z: pmbncwz', '3-4 w: lgwv', '3-4 s: sshs', '2-7 z: zzflznzzzlzl', '1-2 k: klbjvbwpkkptb', '17-18 r: rrrrrrrrrrrrrrrrlrr', '7-8 l: mlqgltml', '9-14 l: llljlllxllllvl', '5-13 b: bbbbtbbbbbbbfbbbg', '7-10 d: cddlddgdqkld', '4-6 q: kqqqqq', '5-11 r: rrrvrrrsrjrr', '7-10 t: tttgtltttbt', '13-14 h: hhhhhqhhhhhhndh', '3-4 s: dsss', '6-12 w: jwwtxwwwkkwbw', '7-8 v: cvvgnvvv', '12-16 q: qqqqqqqqxvqqqrqqqq', '6-11 z: zzkvzvzzzxzzzz', '4-9 s: lcrvsssmfs', '6-13 c: ccccpdcbcbcgdcccgdcc', '7-9 q: qpqqqqqqhq', '1-10 k: kwfkkxrkwhtmkwknkx', '9-20 x: dxzrxxxsxxxjxxsxdczx', '15-16 c: ckcccdccccccgccdcccn', '2-7 s: sscxswskxhchxpfs', '2-3 h: hhlh', '2-6 p: ppppppp', '6-8 r: ztmrsjqtrk', '1-2 r: drsdvpmzdn', '6-7 v: vqvvvgp', '5-6 g: gggggg', '3-7 d: tfkddmjzjgdxzlkd', '16-17 b: bbwbbbbbbbbbbbwbt', '2-11 b: hbrwqqhkcrbbvmx', '5-11 f: ffffqfffffffff', '2-5 n: nnwhn', '8-11 j: jxjsjjmjkjkjhjx', '1-3 h: hhhh', '5-12 t: pttttszttwvlt', '7-8 q: mqqqqqqqtkq', '7-10 z: xzzzzzdzzzzzzzz', '6-7 l: ljzqklhmm', '3-5 k: bkkkrk', '6-8 x: xxxxxlxcxxxbx', '6-7 j: jjqjcpjfjj', '8-9 l: cwmllhslwv', '14-15 z: zzzzzzzzrzzzzcz', '11-12 f: sfccmxxffsfg', '5-6 q: qqqqqqqq', '12-15 t: tttttttttttttttt', '7-12 q: pqwsnhqfzdtqxd', '4-5 b: fbcbb', '5-7 t: tttstft', '2-4 h: vjmr', '4-6 r: rrfrprr', '18-19 x: xxkxxxxxxxxxxxxxxxxx', '2-4 k: qklkc', '3-6 s: svjsrs', '14-15 j: pjjjhjjjjjjdjgj', '2-15 l: lhllllllllllllwlll', '2-7 q: qvqqgsq', '2-6 z: zzlzzzn', '8-15 p: pppppppspppzppgp', '3-4 l: kfzbl', '9-12 w: hqjwwtdwwlwwmw', '3-4 k: lghgg', '3-5 k: khgzkk', '2-10 r: rrsjlmrsrr', '2-5 j: jjjjj', '10-12 j: jfgzbdbjwhjjjf', '1-4 f: ffff', '9-10 j: jjjwjjwzgtcjzj', '1-6 m: mmmmmq', '5-6 h: hhwhph', '3-6 w: wwpwwz', '5-6 q: qqqkcb', '8-9 f: ffffffxrff', '13-14 m: lqvpbrhgmxmkgj', '4-6 q: pqqxqk', '7-11 b: mbbnsvbbjbbmb', '17-18 q: qqqqqqqqqqhqqqqqqqq', '3-12 w: qzcwxswwzvwzb', '10-11 l: llllllllxxs', '1-4 c: bvcch', '11-13 s: svssqfvssshst', '6-7 l: lllllrl', '5-8 n: nhqkfnggnpkbhpgntlht', '1-14 g: pgrdgjggggpggc', '12-16 n: hlnhkxpnnsfctsnq', '6-8 c: cccftqcfqc', '1-5 f: fbfff', '1-15 t: mttptftctttptttt', '6-11 t: cxtttnnfttt', '7-11 h: hsrfjswhhhhhhhhc', '12-13 b: bbbbbbbbbbbnfbvb', '12-13 x: lzvxjxxxcxxxq', '12-13 p: ltwhhhqvdjptbsw', '7-9 z: zzzzzztzn', '4-5 g: ggqlgg', '8-10 r: rbqxwzfhlzt', '3-5 g: grhgk', '14-19 z: zrzzbzztszpzvzbdfzm', '7-11 d: tdjbcdpdddb', '3-7 j: jpqjjjj', '1-2 m: mcxklcmmws', '7-8 r: drqlcrfqrgrrxrrg', '1-5 g: kgngw', '8-10 r: wrrbfrrrpntjrrrgrr', '1-4 s: sstf', '3-7 b: fnjnpmfjlwb', '2-5 s: pwjkj', '9-11 t: tbtbtrsrfzntwqq', '13-16 m: mmmmmmmmmmmmmmmmm', '13-18 b: bbbbbbbpqlbbbtbtpxb', '9-11 w: wclwwwrwwwkhww', '7-13 b: bbbbbbbwbbbbb', '8-12 t: sxlwtttttnhn', '4-7 q: kmdqxcqswqw', '3-4 r: rjrr', '4-6 m: mdmdmmmm', '6-17 h: kjrkchhnfhqqcrmhhhdh', '6-9 j: vjjgcjjjpdj', '7-9 x: xxxxsxxxxx', '8-16 j: jjjjjgjnjjjjjjjczd', '6-8 t: tttttttd', '7-17 s: ssmsspvsssspssssfssl', '3-10 f: cgffsqxhdmrvdf', '1-3 f: wfpf', '11-12 k: kkkkkkkkkkfqk', '12-15 s: cxghswzsbttmvpscr', '3-4 n: nnkn', '7-17 w: wwlwnxwxwwswwwwwg', '3-10 h: hhvhhhrhhhfghhcn', '10-11 l: lllxlllllllsl', '5-7 d: ddbddtddv', '5-15 g: ggtggqggggzggggwggv', '2-10 r: mrpdmtrzsrngstsr', '9-15 t: bsbptttttqwzmmtgbgm', '8-10 q: qqqqqqqqqqq', '6-9 h: hlrbcsnhh', '12-17 f: ffkjfffffffnftfmf', '11-12 s: ssssssssssss', '9-15 k: hpkskfkkfkkkkbkk', '8-18 b: bbbbbbdbbbbbbjbbjw', '2-14 p: nppppkkppppppw', '11-12 s: sxhtlrtnbgss', '8-10 q: lnwqqqqqqsqhgqgbq', '2-3 l: llll', '14-17 d: gdddtlfmrdscgsqcmkm', '5-8 w: tmmskwpq', '16-17 b: cbbbpzbbrrbnkbbbbgj', '14-17 b: bbbjbbbbbbbxbvbdszbb', '9-10 q: qqqqqtqqqqr', '5-6 t: ctgttztrtn', '2-3 f: gcfgw', '3-8 d: ddzddddsddddddd', '15-16 g: ggggggjggggggggg', '4-10 m: mcmmmmmmmmmvmmmm', '11-15 p: ptppxjppppmkgpvdp', '12-13 n: nnnnnnnfnnnrn', '1-7 t: tnbwtttmtt', '1-14 c: ndncvjbkcmcjplcp', '1-2 f: fffh', '14-17 t: llzkwltkmdntwndqs', '4-7 w: bffzzwdwtkwwv', '4-8 p: zpbpqpppxpb', '8-14 n: fdnnznhnnlhmtn', '7-14 l: vltrjnzhplkshlt', '1-2 d: ddbhsjtv', '2-10 d: dddddbzrdrdd', '4-10 p: pkppshsfmp', '10-11 g: gmgggzvzmgjgggzqxggd', '2-4 j: fjvjjqf', '5-19 h: cstkhhrctkxhhsfzpph', '6-16 s: sssssssssssssssks', '17-18 v: vvvvvvvvsvvvvvvvtv', '2-5 j: zjjjjj', '2-3 r: xrrrqlxl', '17-19 c: cccrcccgcwcchccccdcc', '7-14 l: lllllllllllllcsl', '12-14 p: jlmhpjgdzjkpnbmnbk', '17-18 n: nnnnnnnnnnnnnnnnqv', '8-10 b: lqzrtbzbrb', '8-11 x: xgxxfxxxxkxx', '5-9 x: xxxsnxnxk', '2-11 t: stxbxwssmgthttx', '6-13 t: ktbktrtqcnlrgtvtwt', '10-12 q: qqqqqqqqqrqq', '14-15 q: znptzmgllrfrqrf', '2-13 f: ffffffcffffff', '9-10 h: hrbhnhhhhhhhh', '8-14 k: lskskkkfzkkkkmkkm', '1-3 g: kbmswhmghvwvnwxzzk', '2-4 v: vttv', '2-3 h: qhhmhghbh', '6-13 t: ttgtttttktttdttt', '7-9 v: vvrrvvvvvv', '5-6 z: hcfwdr', '5-13 g: sgmgggcggggggjrggggk', '10-14 k: kzkkkkkkdskkktkkk', '1-2 j: ptjj', '4-11 b: xnbbbbnbbbb', '14-16 b: bbbbbbbbbbbbbkbc', '4-12 w: mwrwrcpwkpzwxrj', '5-6 l: qlndzlcvw', '1-2 s: ksxk', '4-5 p: spgwql', '7-10 j: ljjjjvxjhzjjjjrj', '6-14 f: ffffffffffffff', '11-15 d: ddddddddddzdpdn', '3-5 t: ttmtz', '6-7 x: kxvxxxx', '3-6 m: mhmklm', '4-8 h: bnhjhphgqxphpnthh', '3-4 w: gwpq', '10-13 t: ttvttjhttcttrtthtb', '1-5 f: ffffg', '6-14 v: rtjjvpbvnvjwlvktvvf', '8-9 n: nnknnnxmnnn', '9-10 v: vvsvvsvvqcvvpp', '9-11 x: xxxxxxxxxwl', '3-6 h: bwqxnrhkhhwhhh', '4-8 l: lvllrlcf', '1-2 m: gtrm', '2-4 z: zzzz', '6-7 j: jjjjjjj', '15-16 g: sggggggggqgclgggmggw', '7-9 v: dvmskjsczkvjcpsv', '3-11 d: hmdrdfdqrddzdddjdd', '7-9 m: mmmwfmmmtmm', '6-8 x: lxsbxmlx', '3-5 q: qqqxq', '5-10 n: nnnnznnnnrn', '4-6 m: zmmbzg', '10-11 c: cpdndvlfltc', '2-4 k: kzkkk', '1-14 m: jmmmmmzmqtmsmmnmm', '3-13 h: gwhhrlbstldmh', '2-5 l: rrlhdqkzst', '1-6 s: sqgsjs', '3-4 h: hhgpb', '11-16 l: llllllllllllllwkllll', '7-11 j: gjjjtvhjjpj', '14-15 h: hjjvmbhfjhhxkbh', '1-2 t: rwxgz', '13-18 p: pppppppppppppppppppp', '1-14 x: xxrxxjxhxxxxxxbxxx', '4-6 b: fbzsbpbbb', '12-16 j: fjjgmnjwbvhjzzzs', '6-7 m: mmmmmtq', '12-16 n: nnmnnpnnnnnknqxkjnjn', '5-8 w: wmwwwwpwlwllzwkcw', '7-10 q: gbpsnqwqfm', '10-13 x: vxxxxxxxxxdqnxx', '7-12 q: qqqqqqqqqqqqqqq', '1-2 n: snnn', '6-10 l: lljllklllwp', '3-4 b: bsnjzbb', '13-14 g: tggztfgdggngmglgg', '6-16 l: bkcwjlwcnfwthlll', '8-11 s: sssssssvsss', '3-4 k: xmthtrcx', '7-8 h: wpmjhbgg', '4-5 p: pcpkvp', '14-15 s: ssrssssssssssjs', '14-15 x: xxxzxxgxxtxxxxqx', '6-7 m: nwmfmxmm', '6-8 k: hsknkmvhkgkkfzkjf', '4-5 s: sssms', '7-9 g: gfgqldxgxdjzglcgg', '10-11 k: ckkthkzpdrfv', '1-14 p: jptppkcppjpppppppp', '10-11 x: pxkccxpxdsq', '2-8 x: xsgxxxxvgxxk', '6-14 j: jjjjjzjjjjjjjtjjjj', '7-10 x: rxxnxrzgxxd', '6-12 g: dmgggpgggwczggghggm', '3-6 h: hdhjhhhhchh', '11-12 r: zrrkcrrrrrlh', '7-9 v: vhqvlvwvzqwqvrxvjnf', '1-5 r: rvmjr']

function day2part1(input) {
  let answer = 0
  for (let i = 0; i < input.length; i++) {
    let element = input[i]
    let ruleMin = element.split(' ')[0].split('-')[0]
    let ruleMax = element.split(' ')[0].split('-')[1]
    let char = element.split(' ')[1]
    let password = element.split(' ')[2]
    let count = 0
    for (let j = 0; j < password.length; j++) {
      let letter = password[j]
      if (letter + ':' == char) {
        count++
      }
    }
    if (count <= ruleMax && count >= ruleMin) {
      answer++
    }
  }
  return answer
}

function day2part2(input) {
  let answer = 0
  for (let i = 0; i < input.length; i++) {
    let element = input[i]
    let ruleMin = element.split(' ')[0].split('-')[0]
    let ruleMax = element.split(' ')[0].split('-')[1]
    let char = element.split(' ')[1]
    let password = element.split(' ')[2]
    let count = 0
    for (let j = 0; j < password.length; j++) {
      let letter = password[j]
      if (letter + ':' == char && (j + 1 == ruleMin || j + 1 == ruleMax)) {
        count++
      }
    }
    if (count == 1) {
      answer++
    }
  }
  return answer
}
// console.time()
// console.log(day2part1(day2Input))
// console.timeEnd()
// console.time()
// console.log(day2part2(day2Input))
// console.timeEnd()

// REVIEW DAY 3

let day3input


function day3part1(map) {
  let x = 0
  let trees = 0
  for (let i = 1; i < map.length; i++) {
    let line = map[i]
    x += 3
    if (x >= line.length) {
      x = x - line.length
    }
    if (line[x] == '#') {
      trees++
    }
  }
  return trees
}

// function day3part2(map, col, row) {
//   let x = 0
//   let trees = 0
//   for (let i = row; i < map.length; i += row) {
//     let line = map[i]
//     x += col
//     if (x >= line.length) {
//       x = x - line.length
//     }
//     if (line[x] == '#') {
//       trees++
//     }
//   }
//   return trees
// }

function day3part2(map, corArr) {
  let trees = []
  corArr.forEach(element => {
    let x = element[0]
    let y = element[1]
    let count = 0
    let col = 0
    for (let i = y; i < map.length; i += y) {
      let line = map[i]
      col += x
      if (col >= line.length) {
        col = col - line.length
      }
      if (line[col] == '#') {
        count++
      }
    }
    trees.push(count)
  });
  let mult = 1
  trees.forEach(tree => {
    mult *= tree
  })
  return mult
}

// console.log(day3part1(day3input))
// console.log(day3part2(day3input, [[1, 1], [3, 1], [5, 1], [7, 1], [1, 2]]))
// console.log(day3part2(day3input, 1, 1))
// console.log(day3part2(day3input, 3, 1))
// console.log(day3part2(day3input, 5, 1))
// console.log(day3part2(day3input, 7, 1))
// console.log(day3part2(day3input, 1, 2))

// REVIEW DAY 4

let input4 = ['iyr:2010 ecl:gry hgt:181cm pid:591597745 byr:1920 hcl:#6b5442 eyr:2029 cid:123', 'cid:223 byr:1927 hgt:177cm hcl:#602927 iyr:2016 pid:404183620 ecl:amb eyr:2020', 'byr:1998 ecl:hzl cid:178 hcl:#a97842 iyr:2014 hgt:166cm pid:594143498 eyr:2030', 'ecl:hzl pid:795349208 iyr:2018 eyr:2024 hcl:#de745c hgt:157cm', 'hgt:159cm pid:364060467 eyr:2025 byr:1978 iyr:2018 cid:117 ecl:hzl hcl:#18171d', 'hcl:#cfa07d ecl:amb iyr:2012 hgt:182cm cid:338 eyr:2020 pid:374679609 byr:1925', 'eyr:2021 byr:1981 hcl:#623a2f cid:195 iyr:2010 pid:579769934 ecl:grn hgt:192cm', 'byr:1970 ecl:oth eyr:2025 pid:409994798 iyr:2018 hgt:189cm', 'hgt:153cm pid:817651329 iyr:2019 eyr:2029 hcl:#623a2f byr:1920 ecl:gry', 'iyr:2011 ecl:amb hcl:#a97842 byr:1965 pid:648375525 eyr:2028 hgt:177cm cid:287', 'iyr:2012 pid:369979235 hcl:#c0946f ecl:amb hgt:178cm', 'byr:1927 ecl:brn hgt:178cm eyr:2026 hcl:#efcc98 iyr:2011 pid:770851101', 'eyr:2028 ecl:oth cid:298 byr:1943 hgt:168cm iyr:2018 hcl:#ceb3a1 pid:116783406', 'eyr:2027 hgt:175cm hcl:#733820 ecl:gry cid:349 iyr:2017 byr:1960 pid:257797292', 'cid:66 ecl:amb eyr:2030 iyr:2026 byr:2024 hcl:a22966 hgt:179cm pid:155cm', 'eyr:2023 hcl:#c0946f pid:081232570 ecl:hzl iyr:2010 hgt:158cm byr:1969', 'byr:1958 ecl:grn hcl:#ceb3a1 hgt:173cm pid:600039004 cid:107 iyr:2012 eyr:2027', 'ecl:amb pid:021066381 hcl:#ceb3a1 byr:1982 iyr:2017 hgt:167cm eyr:2025 cid:61', 'hcl:#341e13 cid:268 pid:358390884 hgt:188cm byr:1961 iyr:2014 eyr:2027 ecl:blu', 'ecl:brn eyr:2020 pid:607203641 hcl:#fffffd iyr:2011 byr:1962 hgt:156cm', 'iyr:2018 hcl:#b6652a byr:1942 ecl:blu eyr:2029 hgt:154cm pid:649263319', 'ecl:oth hgt:73in iyr:2012 hcl:#888785 eyr:2020 pid:147939289 byr:1961', 'ecl:oth iyr:2015 hgt:189cm hcl:#341e13 pid:686943691 eyr:2023 byr:1987', 'pid:568844323 eyr:2023 byr:1921 hgt:167cm cid:154 hcl:#b6652a ecl:gry iyr:2020', 'eyr:2023 byr:1994 iyr:1937 hgt:177cm hcl:#c0946f pid:686240814 cid:231 ecl:#a8ba32', 'hcl:#b6652a byr:1946 pid:543383899 iyr:2013 hgt:153cm ecl:hzl cid:238 eyr:2023', 'eyr:2028 ecl:blu hgt:154cm cid:252 pid:196374590 byr:1987 iyr:2011 hcl:#7d3b0c', 'iyr:2013 ecl:amb cid:187 hgt:187cm pid:593027548 byr:1963 eyr:2024 hcl:#fffffd', 'pid:588211492 hgt:156cm iyr:2021 eyr:2021 ecl:gry hcl:z byr:1928', 'ecl:amb hcl:#888785 hgt:180cm eyr:2022 byr:1923 pid:490291639 cid:173 iyr:2015', 'iyr:2014 cid:211 pid:404157420 hcl:#602927 ecl:oth byr:1946 eyr:2030 hgt:175cm', 'hcl:z byr:2026 pid:61805448 hgt:125 iyr:2025', 'eyr:2028 hgt:156cm hcl:#341e13 cid:103 ecl:amb iyr:2017 byr:1937 pid:320691739', 'hgt:185cm pid:440489464 byr:1929 ecl:amb iyr:2011 eyr:2021 cid:327 hcl:#341e13', 'byr:1988 ecl:grn pid:062728732 iyr:2013 hgt:181cm hcl:#18171d eyr:2026', 'pid:000647617 eyr:2029 byr:1937 ecl:gry hcl:#e8eff3 hgt:164cm cid:151 iyr:2016', 'hgt:179cm byr:1949 eyr:2029 pid:459190453 ecl:grn iyr:2020 hcl:#c0946f', 'hgt:160cm pid:476613532 cid:190 iyr:2016 hcl:#4657e5 byr:1929 eyr:2028', 'ecl:grn eyr:2027 byr:1982 hcl:#18171d pid:630408328 cid:65 iyr:2020 hgt:161cm', 'pid:752776254 hcl:#888785 hgt:189cm eyr:2027 iyr:2020 ecl:hzl cid:194 byr:1934', 'iyr:2015 hgt:167cm byr:1977 eyr:2021 hcl:#14564f pid:504471386 ecl:oth', 'hgt:84 pid:168cm hcl:8532fb eyr:2023 iyr:2012 ecl:xry byr:2008 cid:288', 'cid:323 eyr:2024 iyr:2019 pid:495737304 byr:1966 hcl:#7d3b0c ecl:hzl hgt:73in', 'iyr:2020 byr:1953 ecl:hzl hcl:#efcc98 hgt:174cm eyr:2026 pid:546906638', 'pid:839249028 hcl:z byr:2024 hgt:145 eyr:2034 iyr:2021 ecl:#891c47', 'eyr:2036 ecl:#89d2ae cid:183 byr:2014 hcl:b3af0f pid:12086913 iyr:1981 hgt:61cm', 'ecl:brn eyr:2030 pid:083487445 byr:1929 hcl:z iyr:2021 hgt:182 cid:318', 'eyr:2020 pid:188609216 hcl:#341e13 iyr:2012 hgt:179cm', 'eyr:2029 hcl:#888785 pid:704026565 hgt:173cm iyr:2020 ecl:blu byr:1950 cid:237', 'ecl:grn eyr:2030 byr:1961 pid:695808266 iyr:2012 cid:56 hgt:155cm', 'iyr:2011 ecl:amb byr:1986 pid:243061330 hgt:163cm eyr:2021', 'eyr:2030 hcl:#623a2f hgt:170cm ecl:hzl pid:694575319 iyr:2011 byr:1939', 'iyr:2014 pid:184152121 hcl:#c0946f hgt:163cm eyr:2028 byr:1992 cid:114', 'ecl:hzl hgt:75in cid:233 hcl:#866857 pid:269157261 iyr:2020 byr:1973 eyr:2029', 'hgt:174cm hcl:#f86751 iyr:2016 pid:904779190 ecl:brn eyr:2024 byr:1950', 'cid:123 iyr:2019 eyr:2030 pid:402585706 ecl:brn byr:1995 hcl:#4ff7fa hgt:65in', 'ecl:grn eyr:2029 pid:083364259 iyr:2013 cid:50 byr:1938 hgt:187cm hcl:#a97842', 'hcl:#6b5442 cid:101 iyr:2011 ecl:amb eyr:2029 byr:1963 pid:664573740', 'eyr:2025 hcl:#602927 hgt:188cm iyr:2019 pid:521514539 byr:1940 ecl:gry', 'hcl:dc0449 eyr:1981 pid:188cm cid:151 iyr:1979 hgt:61cm ecl:dne byr:2028', 'iyr:2017 byr:1924 hgt:163cm eyr:2024 hcl:#ceb3a1 pid:424127124 ecl:amb', 'eyr:2039 pid:7837217107 hcl:z byr:2005 iyr:1989 ecl:#d95f4d hgt:190in', 'ecl:#329eb1 cid:178 hgt:192 eyr:2020 iyr:2012 hcl:#602927 byr:2028 pid:7175349420', 'ecl:gry byr:1931 hgt:162cm iyr:2014 eyr:2030 cid:50 hcl:#cfa07d pid:653585396', 'eyr:2025 hgt:177cm ecl:gry hcl:#efcc98 iyr:2015 byr:1942 pid:388475446', 'hcl:#efcc98 ecl:grn hgt:185cm byr:1921 pid:253592171 eyr:2031 cid:220 iyr:2024', 'byr:1950 hgt:158cm ecl:gry iyr:2015 hcl:#18171d eyr:2023 pid:151cm', 'byr:1957 hcl:z eyr:2026 ecl:grn iyr:1971 hgt:192in pid:5479810865', 'hgt:161cm pid:473851111 iyr:2018 ecl:brn byr:1982 eyr:2029', 'pid:136216608 byr:1958 cid:226 eyr:2023 hcl:#866857 iyr:2017 ecl:hzl hgt:159cm', 'byr:1993 hcl:#866857 hgt:169cm pid:488392920 cid:109 iyr:2017 ecl:oth eyr:2029', 'cid:248 ecl:amb eyr:2025 iyr:2017 byr:1951 hcl:#ceb3a1 pid:731763175 hgt:162cm', 'hcl:#835e79 eyr:2021 ecl:oth pid:617055193 byr:1997 iyr:2010 hgt:173cm', 'eyr:2024 pid:257895944 hcl:#ceb3a1 hgt:165cm ecl:oth iyr:2020 byr:1958', 'pid:438580092 ecl:grt byr:2025 hcl:z iyr:2000 eyr:1952 cid:271 hgt:170in', 'iyr:2010 hcl:#6b5442 hgt:156cm eyr:2026 ecl:grn pid:409793041 byr:1941', 'pid:076486440 hgt:177cm hcl:#888785 ecl:blu iyr:2017 eyr:2029', 'eyr:2028 ecl:amb hgt:186cm hcl:#1d5836 pid:563307670 iyr:2019 byr:1950', 'byr:1939 ecl:hzl hgt:193cm pid:329759796 hcl:#cfa07d eyr:2025 iyr:2011 cid:73', 'byr:1995 hgt:188cm eyr:2028 ecl:blu iyr:2016 hcl:#888785 pid:459613739 cid:115', 'hcl:#623a2f eyr:2021 cid:197 hgt:187cm ecl:oth byr:1969 iyr:2010 pid:385660251', 'hgt:192cm cid:143 byr:1995 hcl:#fffffd iyr:2017 ecl:oth eyr:2020 pid:087661720', 'ecl:oth byr:1994 hgt:183cm eyr:2020 iyr:2020 pid:448389966 cid:92 hcl:#866857', 'pid:088166852 hgt:155cm cid:307 byr:1940 hcl:#7d3b0c ecl:#af542f eyr:2023 iyr:2014', 'byr:2026 eyr:2039 hcl:5449b3 ecl:hzl hgt:176in iyr:1962 pid:177cm', 'iyr:2020 ecl:amb hgt:164cm hcl:#c0946f pid:931543453 eyr:2024 byr:2001', 'iyr:2010 eyr:2023 hgt:188cm hcl:#866857 ecl:hzl pid:866631112 byr:1997', 'byr:1958 hgt:184cm cid:117 hcl:#7d3b0c iyr:2019 pid:615734013 eyr:2028 ecl:gry', 'hgt:86 iyr:1935 ecl:grt pid:#af8e67 eyr:2031 byr:2018 hcl:6a2940', 'hgt:73in eyr:2022 pid:580461358 byr:1962 cid:129 iyr:2015 hcl:#7d3b0c', 'iyr:2019 hcl:#b6652a hgt:172cm ecl:blu pid:077121198 eyr:2021 byr:1995', 'hcl:#ceb3a1 cid:253 iyr:2015 hgt:177cm byr:1973 ecl:hzl pid:311289324 eyr:2025', 'iyr:2017 hcl:#efcc98 cid:57 byr:1940 ecl:blu eyr:2025 hgt:157cm pid:827480048', 'eyr:2028 hgt:189cm iyr:2016 byr:1978 ecl:hzl pid:127497651 cid:87 hcl:#623a2f', 'hcl:#341e13 byr:2015 ecl:brn hgt:187in pid:82075551 eyr:1936 cid:200 iyr:1939', 'ecl:grn byr:1962 iyr:2011 hgt:169cm pid:661559147 hcl:#623a2f eyr:2023', 'ecl:gry hcl:#efcc98 eyr:2009 byr:2028 hgt:170in cid:129 pid:161cm iyr:2018', 'pid:098090405 hcl:#623a2f byr:1943 ecl:hzl hgt:152cm iyr:2013 eyr:2029', 'pid:495271053 iyr:2011 ecl:gry hcl:#623a2f cid:285 byr:1925 eyr:2024 hgt:187cm', 'cid:306 hgt:73in iyr:2010 hcl:#448fd7 byr:1946 ecl:grn pid:137146932 eyr:2021', 'eyr:2020 hgt:159cm cid:90 iyr:2010 ecl:brn hcl:#341e13 byr:1955', 'hcl:#18171d iyr:2017 ecl:amb pid:168517472 eyr:2021 hgt:181cm byr:1942', 'cid:325 eyr:2022 pid:947158470 byr:1994 iyr:2019 ecl:grn hgt:172cm hcl:#ec63ce', 'iyr:2011 pid:243339529 ecl:amb hgt:169cm byr:1967 eyr:2025 hcl:#b6652a', 'pid:664966826 eyr:2036 iyr:2015 byr:1972 hgt:68in hcl:z ecl:#038105', 'eyr:2021 pid:236054221 hgt:179cm hcl:#b6652a iyr:2020 ecl:blu', 'ecl:grn iyr:2010 pid:870519416 byr:1945 hcl:#a97842 hgt:176cm eyr:2030', 'hcl:#3318db eyr:2022 byr:1966 ecl:grn iyr:2013 cid:349 hgt:168cm pid:827688488', 'pid:124116963 hcl:#866857 eyr:2026 iyr:2013 ecl:grn byr:1983 hgt:183cm', 'iyr:2017 byr:1993 hcl:#18171d ecl:utc hgt:68in cid:168 eyr:2030 pid:#2fd9f2', 'ecl:blu cid:134 eyr:2025 pid:588957573 iyr:2017 hgt:151cm byr:1942 hcl:#4280c1', 'hcl:#51b593 iyr:2013 ecl:amb pid:668244584 cid:282 byr:1936 eyr:1985 hgt:161cm', 'pid:494051052 hgt:185cm byr:1996 eyr:2028 iyr:2018 ecl:amb hcl:#efcc98', 'ecl:brn eyr:2025 iyr:2011 hgt:163cm hcl:#a97842 byr:1989 pid:557549000', 'pid:828235468 cid:55 iyr:2010 byr:1926 eyr:2029 hgt:153cm hcl:#cfa07d ecl:blu', 'hgt:158cm iyr:2015 pid:957913612 ecl:grn eyr:2020 byr:1984 cid:76 hcl:#6b5442', 'ecl:amb eyr:2020 pid:596116320 byr:1936 hcl:#cfa07d hgt:165cm cid:86 iyr:2014', 'iyr:2012 cid:278 hcl:#602927 eyr:2020 ecl:hzl hgt:176cm byr:1987 pid:594817909', 'iyr:2011 byr:1929 pid:073211525 eyr:2022 hgt:188cm ecl:blu hcl:#733820', 'hcl:#602927 hgt:187cm pid:706155322 cid:203 ecl:brn byr:1952 iyr:2017 eyr:2020', 'hcl:bcb5f7 byr:2002 eyr:2029 pid:850069752 iyr:2019 ecl:hzl hgt:167cm', 'hcl:#b6652a hgt:72in iyr:2013 ecl:grn eyr:2024 byr:1920 cid:114 pid:983486664', 'byr:1931 iyr:2020 pid:182737852 hgt:162cm ecl:grn hcl:#888785 eyr:2028', 'eyr:2035 byr:1962 iyr:2012 cid:120 ecl:xry hgt:61cm hcl:ce89a8 pid:335540582', 'pid:#05153d iyr:1990 eyr:1927 hgt:71cm byr:2019 cid:346 ecl:#e38688 hcl:c6abd9', 'ecl:#cd58d8 pid:166cm iyr:2012 hcl:0d1b02 hgt:68 eyr:1958', 'pid:976419172 byr:1922 cid:345 hcl:#6b5442 iyr:2010 eyr:2026 ecl:grn hgt:155cm', 'ecl:gry hcl:#1bbadc hgt:168cm eyr:2028 byr:1984 cid:179 iyr:2013 pid:706186218', 'ecl:blu hgt:188cm pid:764775319 byr:1936 hcl:#7d3b0c iyr:2020', 'hcl:#623a2f iyr:2012 pid:382832140 ecl:gry eyr:2026 cid:350 hgt:165cm byr:1968', 'hcl:0b87a1 byr:2020 pid:4365879329 cid:110 ecl:grn eyr:2032 hgt:155cm iyr:2018', 'hgt:193cm eyr:2029 hcl:#733820 pid:081071142 byr:1929 ecl:oth', 'ecl:brn eyr:2023 pid:876924536 cid:165 hcl:#efcc98 hgt:151cm byr:1972 iyr:2020', 'hgt:186cm eyr:2022 ecl:grn byr:1972 pid:997639611 hcl:#ceb3a1 iyr:2013', 'byr:1926 pid:808460262 iyr:2012 eyr:2031 hcl:#a97842 ecl:amb hgt:190cm', 'hgt:163cm hcl:#ceb3a1 eyr:2028 ecl:grn byr:1944 pid:381144425 iyr:2012', 'hcl:#95a232 pid:015229624 byr:1947 iyr:2013 hgt:66cm ecl:gry eyr:2027', 'hcl:z byr:1965 iyr:2013 hgt:157cm ecl:#8b12fb cid:246 pid:283039791 eyr:2023', 'ecl:gry byr:1950 hcl:#623a2f cid:276 iyr:2013 eyr:2030 pid:798610943 hgt:189in', 'eyr:2030 cid:52 hcl:#fffffd pid:041625574 ecl:amb iyr:2016 byr:1944 hgt:191cm', 'byr:1995 iyr:2015 cid:221 pid:279080024 eyr:2022 hgt:181cm ecl:brn hcl:#888785', 'hcl:z ecl:blu iyr:1970 eyr:2022 hgt:193cm pid:#540e31 cid:95 byr:1952', 'hcl:z eyr:2024 ecl:hzl byr:2028 cid:323 pid:1949331457 hgt:69', 'eyr:2030 hcl:#866857 cid:173 iyr:2017 hgt:190cm byr:1941 ecl:blu pid:269015932', 'hcl:#b6652a iyr:2018 eyr:2022 ecl:brn hgt:185cm pid:456195468', 'hcl:#6b5442 hgt:188cm iyr:2019 byr:1966 cid:298 pid:050653473 ecl:gry eyr:2028', 'cid:208 ecl:amb eyr:2023 hgt:176cm byr:1971 hcl:#7d3b0c pid:650190272 iyr:2018', 'hgt:68in pid:615309584 iyr:2011 byr:1950 hcl:#efcc98 ecl:oth eyr:2024', 'eyr:2022 iyr:2011 hcl:#623a2f ecl:amb byr:1955 hgt:190cm pid:244918527', 'iyr:2013 hcl:#ceb3a1 eyr:2029 hgt:164cm ecl:oth byr:1928 pid:337615663', 'hcl:#ceb3a1 pid:#ae7eea byr:2027 cid:254 hgt:125 iyr:1940 ecl:zzz', 'pid:033663619 iyr:2012 byr:1989 eyr:2030 ecl:hzl hcl:#b6652a hgt:154cm', 'hgt:175cm byr:1929 pid:100788192 ecl:#92b14c iyr:1940 hcl:#ceb3a1 eyr:2033', 'eyr:2029 pid:357835141 ecl:oth iyr:2019 hcl:#866857 hgt:154cm byr:1954', 'pid:895992818 byr:1965 iyr:2017 hcl:#efcc98 ecl:amb hgt:153cm eyr:2025', 'byr:1928 ecl:amb hgt:168cm pid:346938111 eyr:2025 iyr:2014 hcl:#cfa07d', 'hcl:#b6652a pid:825661608 eyr:2020 iyr:2019 byr:1974 hgt:180cm ecl:amb', 'byr:1970 hgt:159cm hcl:#733820 pid:101838832 iyr:2015 eyr:2027 ecl:blu', 'byr:1941 ecl:amb eyr:2024 pid:015890498 hgt:175cm iyr:2018 hcl:#cfa07d', 'hgt:67in pid:404983369 eyr:2023 iyr:2018 byr:1974 hcl:#602927 ecl:blu', 'byr:1957 hcl:#fcc940 pid:615831236 iyr:2018 eyr:2020 ecl:brn hgt:181cm cid:218', 'hcl:#fffffd ecl:grn pid:271614109 eyr:2028 hgt:184cm byr:1974 iyr:2015', 'ecl:#e45ee0 pid:151cm cid:127 iyr:2014 byr:2022 hcl:973bc1 eyr:2033 hgt:181in', 'hcl:#6b5442 pid:502739402 eyr:2020 byr:1926 ecl:brn iyr:2010', 'ecl:xry hgt:169cm byr:2023 iyr:1973 pid:4137668 eyr:2037 hcl:z', 'ecl:#3a8c46 hcl:43730a pid:57210146 eyr:2031 cid:117 iyr:2013 byr:2010', 'hcl:#341e13 cid:237 hgt:150cm iyr:2016 byr:1967 ecl:blu pid:674080319 eyr:2024', 'iyr:2011 hcl:#866857 pid:111247018 byr:1920 hgt:192in ecl:#8bf268 eyr:2021', 'iyr:2022 hcl:z ecl:gry hgt:159cm pid:#88e8df byr:2026 eyr:2032 cid:221', 'hgt:156cm eyr:2026 ecl:blu hcl:#192dea cid:280 pid:788808021 byr:1980 iyr:2013', 'hgt:156in byr:2024 hcl:4e4dd6 eyr:2030 iyr:2028 pid:35683378 ecl:#3a9fba', 'pid:081236370 cid:150 hcl:d15b43 byr:2029 hgt:118 iyr:2026 eyr:2038 ecl:grt', 'eyr:2034 pid:186cm ecl:utc cid:300 iyr:2009 byr:2018 hcl:163913 hgt:74cm', 'ecl:hzl pid:249858519 byr:1936 hgt:182cm cid:343 iyr:2013 eyr:2030 hcl:#7d3b0c', 'cid:168 ecl:hzl hgt:174cm iyr:2020 pid:446135799 hcl:#888785 eyr:2024 byr:1998', 'pid:545342162 hcl:#5cd3bd cid:126 eyr:2024 iyr:2012 ecl:grn', 'pid:104835585 byr:1989 hcl:#733820 ecl:oth eyr:2024 iyr:2017 hgt:180cm', 'hgt:184cm byr:2001 pid:199216567 ecl:gry eyr:2022 cid:185 hcl:#7d3b0c iyr:2019', 'byr:1996 eyr:2022 pid:503963080 ecl:grn iyr:2010 hcl:#fffffd', 'eyr:2030 iyr:2017 pid:472300557 hcl:#a97842 ecl:grn hgt:190cm byr:1994', 'ecl:#2a8a59 eyr:2027 iyr:2015 byr:2021 hgt:158cm pid:365979521 hcl:z cid:242', 'ecl:gry iyr:2020 hcl:#866857 pid:363851353 cid:319 hgt:154cm eyr:2027 byr:1953', 'ecl:grn hgt:165cm eyr:2026 pid:443722683 hcl:#341e13 iyr:2018 byr:1923', 'byr:1920 ecl:blu cid:193 hgt:153cm hcl:#341e13 iyr:2010 pid:934896568 eyr:2021', 'eyr:2025 pid:524699651 cid:92 hcl:#602927 byr:1999 iyr:2011 ecl:brn hgt:164cm', 'eyr:2030 pid:739947771 iyr:2018 byr:1990 hgt:185cm hcl:#602927 ecl:gry', 'byr:1967 ecl:amb iyr:2020 hcl:#341e13 hgt:165cm pid:681478012 eyr:2028', 'pid:807715479 ecl:blu byr:1955 eyr:1972 iyr:2018 hcl:#a97842 hgt:151', 'pid:635008585 cid:97 hgt:186cm hcl:#b6652a iyr:2015 eyr:2020 ecl:gry byr:1959', 'iyr:2017 cid:155 byr:1999 pid:550276277 hcl:#18171d eyr:2020 hgt:164cm ecl:amb', 'byr:1977 hcl:#6b5442 ecl:grn iyr:2012 hgt:156cm eyr:2028 pid:125635376', 'hgt:65in pid:042700658 byr:1962 iyr:2020 hcl:#888785 eyr:2021 ecl:gry', 'ecl:blu iyr:2017 hcl:#efcc98 pid:447451869 hgt:176cm byr:1958 eyr:2024', 'ecl:amb hgt:155cm eyr:2022 hcl:#efcc98 pid:614496034 byr:1957 iyr:2016', 'cid:99 eyr:2020 ecl:amb iyr:2017 hgt:163cm pid:128207503 byr:1977 hcl:#866857', 'ecl:amb cid:342 eyr:2026 hgt:172cm pid:317675262 byr:1942 hcl:#a97842 iyr:2010', 'ecl:grn pid:077163993 hgt:187cm hcl:#341e13 iyr:2012 byr:1934 eyr:2024', 'pid:423538706 hgt:156cm ecl:oth hcl:#341e13 iyr:2016 eyr:2028', 'iyr:2030 ecl:#faff64 byr:2012 pid:734434105 hgt:164in hcl:z eyr:2023', 'hgt:150in iyr:2016 pid:173cm hcl:db675a cid:219 eyr:2032 byr:1958 ecl:xry', 'pid:087437383 eyr:2025 hgt:178cm ecl:gry byr:1954 cid:227 hcl:#fffffd iyr:2018', 'pid:152cm iyr:2030 eyr:2030 byr:2010 hcl:z hgt:155cm ecl:amb', 'byr:1934 hcl:#341e13 hgt:167cm pid:#7356dd ecl:amb iyr:2011 eyr:2030 cid:123', 'eyr:2027 byr:2005 hgt:173cm cid:174 hcl:#ceb3a1 iyr:2018 ecl:amb pid:179cm', 'iyr:2019 ecl:grn eyr:2023 hgt:162cm pid:649681621 hcl:#4ee6d2 byr:1955', 'hgt:165cm byr:1929 ecl:blu pid:839016251 iyr:2017 hcl:#c0946f eyr:2020', 'eyr:2020 iyr:2017 hcl:#c7ed42 ecl:blu byr:1928 hgt:74in pid:112604496', 'eyr:2026 hgt:184 cid:113 byr:1933 pid:952646285 iyr:2019 hcl:#fffffd ecl:gry', 'pid:455008820 byr:1982 eyr:2030 ecl:gry iyr:2020 cid:103 hcl:#733820 hgt:184cm', 'hcl:#733820 iyr:2020 hgt:182cm ecl:grn cid:226 pid:081011361 eyr:2022 byr:1995', 'iyr:1999 hcl:#18171d pid:9252198900 ecl:amb byr:1999 hgt:175cm eyr:2021', 'iyr:2020 hgt:165cm ecl:blu eyr:2023 pid:760213482 byr:1968 hcl:#c0946f', 'pid:242381670 ecl:amb hgt:172cm byr:1980 eyr:2020 iyr:2014 hcl:#866857', 'byr:2021 pid:#a94a22 hcl:#cfa07d iyr:1969 eyr:2030 ecl:zzz hgt:76cm', 'ecl:oth cid:168 byr:1954 pid:079481919 eyr:2025 hcl:#c0946f hgt:172cm', 'hgt:171cm eyr:2030 byr:1969 cid:170 pid:164128658 ecl:amb hcl:#c2265e iyr:2019', 'byr:1983 cid:163 eyr:2020 pid:232659795 iyr:2013 hcl:#888785 hgt:162cm ecl:blu', 'ecl:gry hcl:#7d3b0c pid:001171231 eyr:2020 byr:1935 hgt:160cm iyr:2011', 'iyr:2012 hcl:#a97842 eyr:2029 pid:809880438 hgt:164cm cid:83 byr:1961 ecl:hzl', 'cid:288 eyr:2027 hgt:181cm byr:1955 iyr:2020 ecl:oth pid:754135833 hcl:#c0946f', 'iyr:2012 pid:053980893 cid:54 byr:1961 ecl:gry hcl:#602927 eyr:2020 hgt:167cm', 'iyr:2013 eyr:2025 hgt:176cm pid:169006156 cid:270 ecl:oth byr:2001', 'cid:244 pid:914067457 iyr:2017 byr:1926 hcl:#733820 ecl:brn hgt:187cm eyr:2030', 'ecl:oth byr:1942 hgt:176cm iyr:2020 eyr:2027 hcl:#efcc98 pid:688816242', 'hgt:177cm hcl:#efcc98 eyr:2030 pid:888703414 iyr:2010 byr:1973 ecl:gry', 'cid:257 eyr:2030 ecl:brn pid:359774824 byr:1988 hcl:#6b5442 iyr:2013 hgt:187cm', 'iyr:2011 hgt:173cm cid:290 byr:2000 ecl:gry hcl:#7d3b0c pid:743371399 eyr:2029', 'cid:162 eyr:1920 byr:2010 pid:#69d6ba hgt:74 hcl:z ecl:#d256f3 iyr:1933', 'pid:435518624 byr:1938 eyr:2027 iyr:2016 hcl:#18171d hgt:161cm ecl:gry', 'ecl:gry eyr:2027 hcl:#7d3b0c hgt:170cm pid:928345976 iyr:2020', 'hcl:#5f4023 ecl:blu pid:024527693 eyr:1932 iyr:2023 hgt:154cm byr:1948', 'cid:284 iyr:2011 byr:1920 eyr:2024 ecl:blu hgt:153cm hcl:#602927 pid:005741906', 'iyr:2029 hgt:108 byr:2029 hcl:c8b25d pid:522512400 eyr:2038 ecl:zzz cid:163', 'pid:371295649 eyr:2022 ecl:hzl iyr:2019 hgt:153cm byr:1961 hcl:z', 'eyr:2027 iyr:2020 pid:619653661 byr:1968 hcl:#b6652a cid:62 ecl:hzl hgt:186cm', 'iyr:1931 pid:565552342 ecl:#af97bb hcl:c92cd6 eyr:1931 byr:2025 hgt:184in', 'hgt:187cm ecl:grn byr:1954 cid:145 iyr:2016 hcl:#efcc98 eyr:2030 pid:202254357', 'cid:177 iyr:2013 byr:1926 hcl:#efcc98 pid:298693475 hgt:181cm eyr:2023 ecl:dne', 'byr:2014 cid:255 iyr:1951 hgt:72in hcl:#efcc98 eyr:2039 pid:135688013 ecl:grn', 'byr:2019 eyr:1971 pid:#a95cb4 hcl:#ceb3a1 ecl:#6f919c hgt:193cm iyr:2012', 'pid:497726268 ecl:grn eyr:2025 hcl:#efcc98 iyr:2019 hgt:170cm byr:1970', 'byr:1939 hcl:#18171d cid:250 iyr:2011 ecl:blu pid:216607711 hgt:158cm eyr:2029', 'byr:1937 eyr:1931 hcl:#5ee898 pid:#876b1a hgt:190cm cid:277 ecl:#5f0f80 iyr:2013', 'ecl:oth hgt:191cm eyr:2025 byr:1978 pid:271136754 hcl:#888785 iyr:2012', 'hcl:#6b5442 iyr:2015 byr:1958 pid:510020331 hgt:158cm eyr:2024 ecl:blu', 'byr:1998 cid:142 eyr:2026 iyr:2015 hcl:#733820 pid:671943334 hgt:186cm ecl:oth', 'eyr:2025 ecl:brn hcl:#7d3b0c pid:000803215 byr:1947 iyr:2017 hgt:168cm cid:230', 'pid:612432109 hgt:186cm byr:1963 ecl:hzl iyr:2019 eyr:2027 hcl:#efcc98 cid:148', 'hcl:#c0946f pid:846986027 eyr:2025 byr:1941 cid:154 hgt:158cm iyr:2012 ecl:brn', 'ecl:gry hgt:186cm iyr:2015 hcl:#602927 byr:1923 eyr:2023 pid:48544569', 'pid:857428120 hgt:158cm hcl:#e4a267 iyr:2014 eyr:2020 byr:1975 ecl:blu', 'ecl:blu pid:559783197 byr:1935 cid:119 iyr:2017 hgt:157cm hcl:#6b5442 eyr:2020', 'ecl:oth pid:724332293 hcl:#602927 cid:77 iyr:2019 byr:2001 hgt:192cm eyr:2024', 'ecl:hzl eyr:2031 hcl:#efcc98 byr:2011 cid:280 iyr:2017 pid:377875085 hgt:172cm', 'byr:1947 hgt:174cm ecl:amb iyr:2018 cid:94 hcl:#a97842 eyr:2026 pid:286225332', 'hgt:85 ecl:xry eyr:2033 iyr:1952 pid:92902290 hcl:a6f86d byr:2013', 'byr:1935 hcl:#c0946f pid:368741489 ecl:blu eyr:2020 hgt:164cm iyr:2018 cid:196', 'pid:718568707 ecl:oth byr:2003 hcl:#a97842 iyr:2010 hgt:168cm eyr:2025 cid:261', 'hcl:#6b5442 pid:675429853 hgt:62in ecl:grn iyr:2016 eyr:2027 byr:1932', 'byr:1978 pid:080846464 hcl:#ceb3a1 ecl:gry iyr:2015 hgt:190cm eyr:2029', 'pid:1756319674 iyr:2010 byr:1998 hcl:#866857 cid:259 eyr:2025 hgt:73in ecl:hzl', 'eyr:2035 hcl:z hgt:61cm pid:3267812127 cid:230 byr:2029 iyr:2028 ecl:lzr', 'hgt:161cm ecl:hzl byr:1934 iyr:2011 eyr:2025 hcl:#cfa07d pid:354474868', 'pid:727482965 hcl:#623a2f iyr:2010 hgt:156cm eyr:2020 cid:68 ecl:grn byr:1950', 'pid:040800697 hgt:186cm hcl:#341e13 iyr:2030 ecl:hzl byr:1937 eyr:2020', 'iyr:2013 byr:1928 pid:752644096 eyr:2030 hgt:191cm ecl:hzl cid:93 hcl:#a97842', 'pid:022267155 hcl:#cfa07d eyr:2026 ecl:hzl hgt:187cm iyr:2014 cid:347', 'hgt:73in eyr:2021 pid:054367702 ecl:amb hcl:#18171d byr:1965 iyr:2020 cid:267', 'eyr:2022 cid:140 pid:189859171 byr:1984 iyr:2020 ecl:brn hgt:166cm hcl:#623a2f', 'byr:1971 iyr:2015 hgt:168cm eyr:2020 pid:650970816 hcl:#341e13 ecl:grn cid:168', 'hcl:#c0946f byr:1948 hgt:189cm pid:868785851 cid:194 ecl:amb eyr:2024 iyr:2011', 'eyr:2040 byr:2030 hcl:afde59 hgt:172cm pid:72468598 iyr:1990 cid:165 ecl:#896a8e', 'iyr:2009 hcl:#6b5442 eyr:2028 cid:53 ecl:hzl hgt:165cm byr:1999 pid:844037301', 'cid:281 eyr:2022 iyr:2020 byr:1976 hgt:176cm hcl:#6b5442 ecl:amb pid:755280305', 'hgt:154cm iyr:2013 pid:059284139 byr:1992 cid:215 ecl:blu eyr:2025 hcl:#b6652a', 'ecl:grn cid:308 hgt:187cm pid:009080324 eyr:2027 iyr:2012 byr:1955', 'pid:083241291 hcl:#7c1810 eyr:2030 iyr:2019 byr:1950 ecl:brn hgt:72in', 'cid:148 byr:1953 hcl:#623a2f pid:076848285 hgt:175cm iyr:2017 eyr:2022 ecl:oth', 'iyr:2020 hgt:160cm eyr:2028 cid:312 ecl:brn hcl:#888785 pid:681067688 byr:1986', 'iyr:1972 cid:170 eyr:2023 pid:21811501 ecl:#17c6e8 hgt:158in byr:2015 hcl:5b7956', 'pid:720571739 cid:304 byr:1951 hgt:191cm eyr:2025 hcl:#341e13 iyr:2011', 'eyr:2020 ecl:blu hcl:#cfa07d pid:097863725 hgt:150cm byr:1951 cid:143 iyr:2013', 'eyr:2027 iyr:2019 ecl:#a0eeca hcl:#c0946f pid:724783488 byr:1943 cid:282 hgt:124', 'byr:2012 iyr:2013 eyr:2036 hcl:z hgt:97 pid:#677847 ecl:dne', 'pid:341708492 hgt:190cm byr:1988 hcl:#888785 ecl:hzl iyr:2015 eyr:2029', 'iyr:2020 byr:1968 ecl:gry eyr:2030 hcl:#1976b0 cid:127 pid:701862616 hgt:161cm']


let testinput4good = ['pid:087499704 hgt:74in ecl:grn iyr:2012 eyr:2030 byr:1980 hcl:#623a2f',
  'eyr:2029 ecl:blu cid:129 byr:1989 iyr:2014 pid:896056539 hcl:#a97842 hgt:165cm',
  'hcl:#888785 hgt:164cm byr:2001 iyr:2015 cid:88 pid:545766238 ecl:hzl eyr:2022',
  'iyr:2010 hgt:158cm hcl:#b6652a ecl:blu byr:1944 eyr:2021 pid:093154719']
let testinput4badd = ['eyr:1972 cid:100 hcl:#18171d ecl:amb hgt:170 pid:186cm iyr:2018 byr:1926',
  'iyr: 2019 hcl:#602927 eyr: 1967 hgt: 170cm ecl: grn pid: 012533040 byr: 1946',
  'hcl: dab227 iyr: 2012 ecl: brn hgt: 182cm pid: 021572410 eyr: 2020 byr: 1992 cid: 277',
  'hgt: 59cm ecl: zzz eyr: 2038 hcl: 74454a iyr: 2023 pid: 3556412378 byr: 2007']

function day4part1(input) {
  let valid = 0
  let passports = []
  for (let i = 0; i < input.length; i++) {
    let dataArr = input[i].split(' ')
    let pass = {}
    dataArr.forEach(element => {
      let key = element.split(':')[0]
      let value = element.split(':')[1]
      pass[key] = value
    });
    passports.push(pass)
  }
  for (let k in passports) {
    let pass = passports[k]
    if (pass['byr'] && pass['iyr'] && pass['eyr'] && pass['hgt'] && pass['hcl'] && pass['ecl'] && pass['pid']) {
      valid++
    }
  }
  return valid
}

function day4part2(input) {
  let valid = 0
  let passports = []
  let bads = []
  let fields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid']
  for (let i = 0; i < input.length; i++) {
    let dataArr = input[i].split(' ')
    let pass = {}
    let passKeys = []
    let v = true
    dataArr.forEach(element => {
      let key = element.split(':')[0]
      let value = element.split(':')[1]
      pass[key] = value
      passKeys.push(key)
    });
    fields.forEach(
      f => {
        if (!passKeys.includes(f)) {
          v = false
        }
      }
    )
    v ? passports.push(pass) : "bads.push(pass)"
  }
  console.log(passports.length)
  for (let k = 0; k < passports.length; k++) {
    let pass = passports[k]
    // debugger
    // if (+pass['byr'] >= 1920 && +pass['byr'] <= 2002) {
    //   if (+pass['iyr'] >= 2010 && +pass['iyr'] <= 2020) {
    //     if (+pass['eyr'] >= 2020 && +pass['eyr'] <= 2030) {
    //       if (pass['hgt'].includes('c') || pass['hgt'].includes('i')) {
    //         if ((+pass['hgt'].split('c')[0] >= 150 && +pass['hgt'].split('c')[0] <= 193) || (+pass['hgt'].split('i')[0] >= 59 && +pass['hgt'].split('i')[0] <= 76)) {
    //           if (pass['ecl'] == 'amb' || pass['ecl'] == 'brn' || pass['ecl'] == 'blu' || pass['ecl'] == 'gry' || pass['ecl'] == 'grn' || pass['ecl'] == 'hzl' || pass['ecl'] == 'oth') {
    //             if (pass['pid'].match(/[0-9]/g).length == 9) {
    //               if (pass['hcl'][0] == '#') {
    //                 if (pass['hcl'].match(/[#,a-f, 0-9]/g).length == 7) {
    //                   valid++;
    //                 } else { bads.push(pass) }
    //               } else { bads.push(pass) }
    //             } else { bads.push(pass) }
    //           } else { bads.push(pass) }
    //         } else { bads.push(pass) }
    //       } else { bads.push(pass) }
    //     } else { bads.push(pass) }
    //   } else { bads.push(pass) }
    // } else { bads.push(pass) }

    switch (false) {
      case (+pass['byr'] >= 1920 && +pass['byr'] <= 2002):
      case (+pass['iyr'] >= 2010 && +pass['iyr'] <= 2020):
      case (+pass['eyr'] >= 2020 && +pass['eyr'] <= 2030):
      case (pass['hgt'].includes('c') || pass['hgt'].includes('i')):
      case ((+pass['hgt'].split('c')[0] >= 150 && +pass['hgt'].split('c')[0] <= 193) || (+pass['hgt'].split('i')[0] >= 59 && +pass['hgt'].split('i')[0] <= 76)):
      case (pass['ecl'] == 'amb' || pass['ecl'] == 'brn' || pass['ecl'] == 'blu' || pass['ecl'] == 'gry' || pass['ecl'] == 'grn' || pass['ecl'] == 'hzl' || pass['ecl'] == 'oth'):
      case (pass['pid'].match(/[0-9]/g).length == 9):
      case (pass['hcl'][0] == '#'):
      case (pass['hcl'].match(/[#,a-f, 0-9]/g).length == 7):
        break;
      default:
        valid++
        break;
    }
  }
  return valid
}


// console.log(day4part2(testinput4good))
// console.log(day4part2(testinput4badd))
// console.log(day4part1(input4))
// console.log(day4part2(input4))

// REVIEW day 5

let input5 = ['FBFBBFBRRL', 'BBFFBFFRLR', 'FBBFFBBLLL', 'FBFBFBFRRR', 'FBBBFFFLLL', 'FFBFBBFLLR', 'BFBBBFBLRR', 'BFBBBFFRLL', 'FBFFBFFLLL', 'BFBFBFFRLR', 'FBFBFFBLLL', 'FBFFBBFLLR', 'FBFBBBBLRR', 'BFFBBBFLLL', 'BFBBFBBLLL', 'FBFFFFBLRL', 'BFBFFFFLRR', 'BFBBFFBRRL', 'FBFFFFBLLL', 'FBBBBFFRLR', 'BFBBBFBLRL', 'BBFFBFBRRL', 'FBBFFFBRRL', 'FFBFBBFRRL', 'FFFFBBFLLR', 'FBFFFBBRLR', 'FFBBFBBRRR', 'FFBFBFFRLL', 'BFFFFFBLRL', 'FFBBBFBLLR', 'FBBFFBBLRR', 'FBBFFBBRRL', 'FFBBBFFRRL', 'FFBFFBBRLL', 'FBBFFBFLLL', 'BFBBFBBRRL', 'FFFFFBBRLR', 'FBBBFFFLRL', 'BFBBFBBRRR', 'BFBFFBFLLL', 'BFFBFBBLRL', 'FBFBFFFLRR', 'FBFBBBBLLR', 'FFFFBFFRLR', 'BFFBFBBLRR', 'BBFFBBBLRL', 'FBBFFFFLLL', 'FBFBFFFRLL', 'FFFBFBFRLL', 'BBFFFBFLRR', 'BFFBBBBLRL', 'BBFFBBFLLL', 'FBBBBBFLLR', 'BFFFFBBRRR', 'FFBBFBBRLR', 'FBFBFFFRRL', 'BFFBFBFRLL', 'FBFBFBBLRR', 'BBFFBBBRLL', 'FFBBFFFLRL', 'FFFBFBBLLR', 'BFFFBFFLLL', 'BFFFBFFLRL', 'BFFBFFBLLR', 'BFBBFBBLRL', 'FFFBFFFRRL', 'BFFFBBFLRR', 'FFBBBFFRRR', 'FBBFBBBRLR', 'FFBFBFFLRL', 'BBFFBFBRRR', 'FBBFFFBLLL', 'FBFFBBFRRR', 'BFBFFFBLLL', 'FFFFBFFLLR', 'FBFBFBFLRR', 'BFFFBBFRLL', 'BFBBBFFLRR', 'FFBBFBBLRR', 'BFFFFBBRLR', 'BFBFBBBLLR', 'BFFFFBBLLL', 'FBBFFBBRLL', 'FBFFBFBRRR', 'BFBFBFFLRR', 'FFFFBBBRRL', 'FBBBFFBRRR', 'FFFFBFFLLL', 'BFBFBFBRRR', 'FBBBBBFRRR', 'BFBBBBBRLL', 'BFBFFBBRRL', 'BFFFFFFRLL', 'BFBBBBFRLL', 'FBFFFFFLLR', 'FFFBBFBRRL', 'BFBBFBFRRL', 'FFFFBBFRLL', 'FFFFFBBRRL', 'FFBFFBFRRR', 'FFBBFBBRRL', 'BFBBFFFRLR', 'BBFFFFBRLL', 'FBFFBFBLRL', 'FBFBBBFRLR', 'BFBFBFFLRL', 'BFFFFFBLRR', 'FBFFBBFRLR', 'FBBFFBBLLR', 'BFFFBFFLLR', 'BFBFFBFRLR', 'BFBFFBBRLR', 'FBBBBFBLLL', 'BFBFBBFLLL', 'FBBFBBBLRR', 'FBBFBFBRLR', 'BFBBFBFLRR', 'BFFFFFFLLR', 'BFBFBBFLLR', 'FFBBBFBLRR', 'FFBBBBBRLR', 'FFFBBFFRRR', 'FFFFBFBLRL', 'BBFFBFBRLR', 'BBFFBFFLRL', 'BBFFFFBRRR', 'BFBBFFBRLR', 'FBBBBBBLLL', 'FFBFFFBRRL', 'FBFFBBBLRL', 'FBBFBBFRRL', 'FBBBBFBRRR', 'BFFFFFFLRR', 'BFBBBFBLLL', 'FFBBFBFLRR', 'FFFFBBFLRL', 'FBFBBFFLRL', 'FBFBBFFLLL', 'FFFBBFFLLR', 'BFBBFBFLLR', 'FFFFFBBLRR', 'FFBFFFFRLL', 'BFBFFFFLRL', 'BFFBBBBLRR', 'FBBFFFBRRR', 'FFFBBBBRLL', 'BFBFBBBRRL', 'BBFFFBFLLR', 'FBBBFBBLRR', 'FFBBBFBRRR', 'BBFFBFFRLL', 'FFFBBBFRLR', 'BBFFFBFRLR', 'FBFBBFBRRR', 'BFBFBFBLRL', 'FFFBFBFRRR', 'FFBFFFFLRR', 'FFFFBFFLRL', 'FFBBBBFRLL', 'FFFFBBBLRR', 'FBBBBBBLRL', 'BFFBBBFLLR', 'FFBBFBBLLL', 'FFFBBBBLLR', 'BFFBBBBRLL', 'FBBFBFFRRR', 'BBFFBFFRRL', 'FFBFBFFLLL', 'BFFBBFBLLR', 'FFFFBFBRRL', 'FFBFBBFLRL', 'FBBFFFFLRL', 'FBBBFFFLRR', 'BFBBBBFRRR', 'FBFBFBBRRL', 'BFFFFBFRLR', 'BFBFFBBLRR', 'FFFBBBFLRR', 'FBBBFBFRRR', 'FFFFBBBRLR', 'FFFFBFBLLR', 'BFFFBBFLLR', 'FFFBFFFLLL', 'BBFFFBFRRR', 'FFBFBBBLRR', 'FFFFBFFLRR', 'FBFFBBBLRR', 'BBFFFBBLRL', 'FBBBFBFLRR', 'BFFBBFBRRR', 'FBFFBFFRLL', 'FBFBFBBLLL', 'BBFFBFFRRR', 'BFFBFBBLLR', 'FBFBFFFRRR', 'BFBFFBBLRL', 'FFBBBFBLRL', 'BFFBBFFRLR', 'BFFFBBBLLL', 'BFFFFFFRRR', 'FBBBBFBLRL', 'BFFFFFFRRL', 'FFFBFFFLRR', 'FFBBFFFRRL', 'BFFBFBFLRL', 'FBBBFBBRLL', 'BFFBFBFRRR', 'FFBFFFFLRL', 'FBBFBFFLRL', 'FFFFBFFRRR', 'BBFFBBFLRR', 'FBBBFFFRRR', 'FFFBFFBLLL', 'FBBBFFFLLR', 'FFBFFFBLLR', 'FFBBFFBRRR', 'BBFFFBBRRL', 'FFFFBBFRLR', 'BFFBFBBLLL', 'FFFBBFFLRR', 'FBBBFFFRLL', 'FFBBBBBRRR', 'BFBBFBFLRL', 'BFBBBBBRRL', 'FBFBFBBLLR', 'FFBFFFBRLL', 'FFFFBBFLLL', 'FFFBBFBLLR', 'FFFBBBBLRL', 'BFFBFFFLLL', 'FFBFFBFRRL', 'FBBFFFBLLR', 'BBFFFFBLRL', 'BFFFBBBRLR', 'BFFBFFBLRL', 'BBFFBFBLLL', 'FBFBFBBRLL', 'FFFBBFBRLL', 'BBFFFBFRRL', 'FBBBFFFRRL', 'BFBFBFBRLL', 'BFBBFFFLRR', 'FFFFBFBRLL', 'FFBBBFBRLL', 'BFBBFFFLLL', 'BFBFFFBRRL', 'FBFBFBFRLR', 'FBFFBBBRLL', 'BBFFBFBLRL', 'BFBBBBBLLL', 'FBBFBFFRLR', 'FFFBFBFRRL', 'BFBBFBFLLL', 'BFFFFBFLLR', 'FBFBFFBLRL', 'FBFBFFBRRR', 'BFBFFFFLLR', 'BFFFFBFRRL', 'BFFFFBFLRR', 'BBFFFFFRRL', 'FFFBFFBRRR', 'BBFFBFFLLL', 'FBFFFBBLLL', 'FBBFBBFLRR', 'BFBBBBFRRL', 'BFBBBFBRLR', 'BFFFFFBRLR', 'FFBFBBBRRL', 'FBFBFFBRLL', 'BFFFBFBLRL', 'FFBFBFFRLR', 'FBFFFBBRRR', 'BFFBFFBLRR', 'BFBFBFBLRR', 'FBFFBFBLLL', 'BFBBBFBRRL', 'FBBFFBFRLL', 'FFBFBFBRLR', 'BBFFFFFLLL', 'BFBBBFBRRR', 'FFBBFBFRRR', 'BFFBFBFLRR', 'FBBBFBFRLL', 'FBBBBBBRLL', 'FBFBFBBRLR', 'BFBBBFFRLR', 'FBFBBFFLLR', 'BBFFBBBLLL', 'BFFFBFBLLR', 'FFBBBBFLLR', 'BFFBBFBRLR', 'FBFBBBFLLL', 'FFBFBFFLLR', 'FFBFFFFLLR', 'FBBFBFFRLL', 'BFFBBBFLRL', 'FFFBFFBRRL', 'FFFBFBBRRL', 'FFBFBBFRLL', 'BBFFBFBLRR', 'BBFFFBBRRR', 'FBFFFFBLRR', 'BFBFBFBRLR', 'BFBBFFBLLL', 'BFBFBFFRRL', 'BFBFFBBRRR', 'FBBFBBFRLR', 'BFBBFFFRLL', 'BFBFFFBLRR', 'FBBFFBBRLR', 'FFBFFBBRLR', 'FFBBBBFLRL', 'BFFFBFBRRL', 'BBFFBBBLLR', 'BFBFBFBLLR', 'FFFBFFFRLR', 'BFFBBBBLLR', 'BFBBFFBRRR', 'BFFFBFBLRR', 'BFBFBBBRRR', 'FBBFBBFLLR', 'FBFFFBFRLL', 'FBBBBFFLRL', 'FFBBFBFLLL', 'BFBFFBFLRR', 'FFFFBBBRLL', 'FBFFBBFLRL', 'FFBFFFFRRR', 'BFBBFBBLLR', 'FFBBFBBLRL', 'FFBBFBFRLR', 'FFFFBBBLLR', 'BFFBBFBRRL', 'FBFFBFFRRL', 'FBBFBBBRRL', 'FFBFFFBRLR', 'BBFFFBBLRR', 'BFFBBFFRRR', 'FBFFFBFRRR', 'FBBFBBFRLL', 'FFBFBFBLLR', 'BBFFBFFLRR', 'FBBFFBBLRL', 'FBFFFFFLRR', 'FFBBFBBRLL', 'FFBBBBBLRL', 'FFFBBFBRRR', 'BFBFFFBRRR', 'FFBFFFFRRL', 'BBFFFFBRLR', 'FFBFFBBLLL', 'BFBFFFFRLR', 'FBBFBBBRRR', 'FFFBFFFLRL', 'BFBFBFFLLR', 'BBFFFFFRLL', 'BFBFBFFRLL', 'BFFFBBBRLL', 'BFBFBFFRRR', 'BFFFBFFRLR', 'FFBBFFBRRL', 'FFBFFFBRRR', 'FBFFBBFLLL', 'BFBBFFFLLR', 'BFBBBFFRRR', 'FFBFBBFRRR', 'FFFBBBBRLR', 'FBFFFBBLLR', 'FBBBFBFRLR', 'FBFBBFFRLR', 'FFFBFFBLRR', 'FFBBBBFLLL', 'FBFBFBFLLL', 'BFBFFBFLLR', 'FFFBBFFLLL', 'FBFBFBFLLR', 'BFBFBBFLRR', 'FBFFBBBRRL', 'BFFBBBFRLR', 'BBFFFBFLLL', 'BFFBFFBRRL', 'BFFFFFFRLR', 'FBFFBFFRRR', 'FFFFBFFRLL', 'FFFBBFBLRL', 'BFFBBBFLRR', 'BFFFBBFLRL', 'FFBFFFFLLL', 'BFFBFFFRRL', 'BFFFFFFLLL', 'FFFBFBBLLL', 'FBBBBBBRRL', 'BFFBFBFRRL', 'BFBFFFFRLL', 'BFFFBFBLLL', 'BFBFFFBRLL', 'FFFBBBBLRR', 'BFFBFFFLRR', 'BFFBBFBRLL', 'FBFFBBBRLR', 'FBBBFFBRRL', 'FBBBBFFLRR', 'FFFFFBBRRR', 'BFBBBFFLLL', 'FFBFBFBRLL', 'FBFBBBFLLR', 'BBFFFFFLLR', 'FFBFFBFRLL', 'FFFBBBFRRL', 'FFFBBFBRLR', 'FFBFBFBRRR', 'BFFBFBFLLR', 'BFFFFBFRLL', 'BFFBBBFRRR', 'BFFBFBBRRR', 'BFFBBBBRLR', 'FFBFFBFLLR', 'FFBBFFBRLR', 'FFBFBBBRRR', 'FFBBFFBLLL', 'FFFFBFBLRR', 'BFBFFBFRRR', 'FFBFFBFLRL', 'FFBBBFFLRR', 'FFBFBBFLLL', 'FBFBBFBLRL', 'FFBBFFFRRR', 'FFBFFFBLRR', 'BFFBFFBRLL', 'FBFBBBBRRR', 'BFFFBFFLRR', 'FBBBBFFRRR', 'FFBFFFBLLL', 'BFBFBBFRLR', 'FFBFFFBLRL', 'BBFFFBBRLR', 'BFFBBBFRRL', 'FFFBFBBRRR', 'FFBBFFFRLL', 'FBFFBBFLRR', 'BFFBBBBLLL', 'FBFFFFBRRR', 'FBBFFFBRLR', 'FFFBBBFRRR', 'FBBBBBBLRR', 'FFBBBFFRLR', 'FBBBFFBRLR', 'FBBFBFBLRL', 'FBBBFBFLLR', 'FBBFFBFRLR', 'FBFFFFBRLR', 'BFBFFFFRRL', 'BFBFBFBRRL', 'BFFFFBFRRR', 'FFFBBFFRLL', 'BBFFBBFRLR', 'FFFBFBFLLL', 'FBBBFBFLRL', 'FBFBBFBRLL', 'BFFBFFFLLR', 'BFFBBBFRLL', 'BFBBBFBLLR', 'FBFBFFFLRL', 'FFBFFFFRLR', 'FFBFBBBRLR', 'BFBBBFFLLR', 'BFFFFFBLLR', 'FBBFBFFRRL', 'BFFBFBFRLR', 'FBFFBBFRRL', 'BBFFBBFRLL', 'FBFFBFBLRR', 'FBFBFBFRLL', 'FFFBBBFLLR', 'FBFBFBBRRR', 'FBFBBFBLRR', 'FFBFBBBLRL', 'FFBFBFBLLL', 'FFFBBBBRRL', 'FBBBBBBRLR', 'BBFFFFBLLL', 'FFBBBBBRLL', 'BFFFBBFRRR', 'BBFFFFBLRR', 'FBFFFFFLRL', 'BFBFFFBLRL', 'FBBBFBBRRR', 'BFFBBBBRRL', 'FBFFFBFRRL', 'BBFFBBFLRL', 'FBBFFBFLLR', 'FBFBFBBLRL', 'FBFBFFFLLR', 'BFFFBBFRRL', 'BFBFBBBRLR', 'BFFBFBBRLR', 'BFFFBFFRRR', 'BBFFFFBRRL', 'FFBFBBFLRR', 'BFFFBBBLRL', 'FBBBFBBLRL', 'FFBBBBFLRR', 'BFFFBFBRRR', 'BFFBBFFLRR', 'FBFFFBFLLL', 'BFFBFFFLRL', 'FFFFBBBLRL', 'FFBBBBBRRL', 'FBBBFFBLLR', 'BBFFFBBRLL', 'FBFFBFBRLL', 'BFFFBFBRLL', 'FBFFBFFLRL', 'FFFFFBBLRL', 'FBFBFFBLLR', 'FFFBFBBLRL', 'FBFFBBBRRR', 'FFFBBFFRRL', 'FBFBBFFLRR', 'FBBFBFFLLL', 'BFFFBFFRRL', 'FFBFFBBRRR', 'BFBBBBFLLL', 'BFFFBFFRLL', 'FBFFBFFLLR', 'BFFBBFBLLL', 'BBFFFBBLLL', 'FBFBBBBLRL', 'BBFFBFBLLR', 'BBFFBBFRRR', 'BFFBFFFRRR', 'FBBFBBFLRL', 'FFBFBFBRRL', 'FFFBFFFLLR', 'BFBFBFFLLL', 'FFFBFBBRLL', 'FFBFBFFLRR', 'BFFFFFFLRL', 'FBBFFFBRLL', 'FBBFBBBLLR', 'FBBBFFBLLL', 'BBFFBBFLLR', 'FFFFFBBLLR', 'FBBBFFFRLR', 'FBBFFFFRRR', 'BFBFFBFLRL', 'FFFBFFFRRR', 'FBFFFFFLLL', 'FFBFBBBLLL', 'FFBBFFBLRR', 'FFFFBBFRRL', 'FBFFBBBLLL', 'FFFBBFFRLR', 'BFBFBBBLRL', 'FBFFBBFRLL', 'FBFBFFFRLR', 'FFBBBFFLLL', 'FBBFFBFLRR', 'BFBFBBBRLL', 'BFFBBFFLLL', 'BFFBBFFRLL', 'FFFBFFFRLL', 'FBFBBBFRLL', 'FBBBFBBLLL', 'FBFBFFBRRL', 'FBFBBBFLRR', 'FBBBBBFLRL', 'FBBFFFBLRL', 'BFFFBBBLLR', 'FBFBBFBLLL', 'BFBBBBBLRL', 'BFBBBBBLLR', 'FFBFFBFRLR', 'BFBBBBFLLR', 'FFBBFFFLLL', 'FFBFBFBLRL', 'FFBBFFFLRR', 'FBFBBFBLLR', 'FBBFFBFRRR', 'FBBFBBFRRR', 'BFFBFBFLLL', 'FBBFBBBRLL', 'BFFFFBBLRR', 'BBFFFFFLRL', 'FFFBBFBLRR', 'BFBFBFBLLL', 'FFBBFFBRLL', 'FFBBFBFRRL', 'FFFBFFBRLL', 'FBBBFBFLLL', 'BFFBBFFRRL', 'FBFFBFFLRR', 'FFFFBFBLLL', 'BFFFBBFLLL', 'FFBBBFBRRL', 'BFFBFFFRLR', 'FBBBFFBLRL', 'FFBBFBFRLL', 'FFFBBFBLLL', 'FFBBBFBRLR', 'FFFBFBFLRL', 'FBBFBBBLLL', 'FFBFBFBLRR', 'BFFFBFBRLR', 'BFFBFFBRLR', 'BFFFBBBRRL', 'FFFFBFBRRR', 'BFFBBFFLLR', 'FFFBFFBRLR', 'FBBFBFFLRR', 'FFFFFBBLLL', 'BFFFBBBRRR', 'BFBFBBBLRR', 'FBBFFFBLRR', 'BFFFFBBLLR', 'FFFBBFFLRL', 'BFBBFBFRRR', 'FFFBFBFLRR', 'FFBFBBFRLR', 'FFBFFBFLRR', 'FFFBBBBLLL', 'BFFBBFBLRL', 'FFFBBBFRLL', 'FFBBBBFRRL', 'FFFFBFBRLR', 'FBFFFBBLRL', 'FBBBBBBLLR', 'BFFFFFBRRR', 'FBFFFFFRRR', 'FBBBFBBLLR', 'FFFBFFBLRL', 'FBBFBFBRLL', 'FBFFBFBLLR', 'FBFFFBFLLR', 'FBFBBFFRLL', 'FBFFFFBRRL', 'BFBFFFFLLL', 'FFBFFBBLRR', 'FBBFFFFRRL', 'FFBFFBBLRL', 'FFBBFBFLLR', 'FFBBBFBLLL', 'FFFBBBFLRL', 'FBFFFFFRLR', 'FBBFBBFLLL', 'FBBBBFBLLR', 'FFFBFFBLLR', 'FBBBBFFLLL', 'FBBFBBBLRL', 'FFBBFBBLLR', 'FBFBBFBRLR', 'FFFFBBFLRR', 'FBBBBBFRRL', 'FBFBBBBRRL', 'FBFFBFBRLR', 'BFBFBBFRRL', 'FBFBBBFRRR', 'BFBFFBBLLR', 'BFBFFFBRLR', 'FFBFFBBLLR', 'BBFFFBFLRL', 'FBBBBBBRRR', 'BFFFFBFLLL', 'FFBBBFFRLL', 'FBBFBFBRRL', 'FBBFFFFLLR', 'FBFFFBFLRR', 'BFBFBBFLRL', 'FBFFFFBLLR', 'BBFFFFFRRR', 'BFFFFFBRLL', 'FFFFFBBRLL', 'FBFBBBBLLL', 'BFBFFBBLLL', 'FBFFFBBRRL', 'FBBFBFBLRR', 'BFBBFFFRRL', 'FBFBBBFLRL', 'FBBFFBBRRR', 'FBBBFFBLRR', 'BFBFBBFRRR', 'FBBBBFBLRR', 'FBFFFBFRLR', 'FBBFBFBRRR', 'FFFFBBFRRR', 'BBFFFBFRLL', 'FFBBBFFLRL', 'BBFFFBBLLR', 'FBBBFBBRLR', 'FBFBFBFRRL', 'FBFBFFBRLR', 'BFBBBBBRRR', 'FBBBBBFLLL', 'FBFFBFFRLR', 'FBBFFFFRLR', 'FBFBBBBRLR', 'FFBBBBBLLR', 'BFBBFFFRRR', 'BFBBBBFLRL', 'FBFFFBBLRR', 'BFBFFBFRLL', 'FBFBBFFRRR', 'FFBFFBBRRL', 'BFBFFBBRLL', 'BFBBFFBLLR', 'BFBBFBBRLL', 'BFBBBBFRLR', 'FFBBFBFLRL', 'BFFBFFFRLL', 'FBBBFBBRRL', 'BBFFBBFRRL', 'FBBFBFFLLR', 'BFFFFBFLRL', 'FBBBBFFRRL', 'FBBBBFFLLR', 'FFBBFFFRLR', 'FBFFFBBRLL', 'BFBFFFFRRR', 'BFBBFFBLRL', 'BFBBFFBLRR', 'BBFFBFBRLL', 'FBBFFFFRLL', 'BBFFFFBLLR', 'FFFFBFFRRL', 'FFBFBFFRRR', 'FBFBBBFRRL', 'BFFFFBBRLL', 'BFFFFBBRRL', 'FBFBFFBLRR', 'FFFBBBFLLL', 'FFBBBBFRRR', 'FBBBBBFRLL', 'BBFFBBBLRR', 'FBBBBFBRRL', 'FBBBBFBRLR', 'FFBFBFFRRL', 'FBFBFBFLRL', 'BFFBFFBRRR', 'BFFBBFBLRR', 'FBBFFFFLRR', 'BFBFFBFRRL', 'FFBBBBBLRR', 'FBFFBBBLLR', 'BFBBFBBLRR', 'BFBFBBFRLL', 'FFBFBBBLLR', 'FFFBFBBRLR', 'FFBBFFBLLR', 'FFBFFBFLLL', 'FBBBFBFRRL', 'BFBBBFFLRL', 'BFBBFFFLRL', 'FBFBBFFRRL', 'FFFBFBFRLR', 'FBBBFFBRLL', 'FBBBBFBRLL', 'FBBBBBFLRR', 'BFBBFBFRLL', 'BFBBBBBLRR', 'FFFBBBBRRR', 'FBBFFBFLRL', 'FFBFBBBRLL', 'BFFBFBBRLL', 'BBFFFFFRLR', 'FFFBFBFLLR', 'FBFFBFBRRL', 'BFFFBBBLRR', 'BFBBFBBRLR', 'FBBBBBFRLR', 'FBFFFBFLRL', 'FFBBBBFRLR', 'BFFFFFBRRL', 'BFFFFFBLLL', 'BFBFBBBLLL', 'BBFFFFFLRR', 'FBBFBFBLLR', 'BFBFFFBLLR', 'FBFFFFFRRL', 'FFFFBBBRRR', 'BFBBFBFRLR', 'BFBBBFBRLL', 'BFFFFBBLRL', 'FFFFFBFRRR', 'FFBBFFBLRL', 'BFBBBFFRRL', 'BBFFBFFLLR', 'FFBBBBBLLL', 'FFFBFBBLRR', 'FBFBFFFLLL', 'FFFFBBBLLL', 'BFFBBBBRRR', 'FBFFFFFRLL', 'FBFBBBBRLL', 'BFBBBBBRLR', 'BFFBFFBLLL', 'BFFBBFFLRL', 'FBFFFFBRLL', 'FFBBFFFLLR', 'BFFBFBBRRL', 'FBBFFBFRRL', 'FBBFBFBLLL', 'BFBBFFBRLL', 'BFBBBBFLRR', 'FFBBBFFLLR', 'FBBBBFFRLL']

function day5part1(input) {

  let high = 0
  for (let i = 0; i < input.length; i++) {
    let row = input[i].split('').splice(0, 7)
    let col = input[i].split('').splice(7, 3)
    let highX = 127
    let highY = 7
    let lowX = 0
    let lowY = 0
    let x = 64
    let y = 4
    row.forEach((c, i) => {
      switch (c) {
        case 'B':
          x = highX
          lowX = (lowX / 2 + x / 2)
          break;
        case 'F':
          debugger
          x = lowX
          highX = (highX / 2 + x / 2)
          break;
      }
      // console.log(highX, lowX, x, c)
    })
    col.forEach((c, i) => {
      switch (c) {
        case 'R':
          y = highY
          lowY = (lowY / 2 + y / 2)
          break;
        case 'L':
          debugger
          y = lowY
          highY = (highY / 2 + y / 2)
          break;
      }
      // console.log(highX, lowX, x, c)
    })
    console.log(x, y, i)
    console.log("\n")

    high = Math.round(x) * 8 + Math.round(y) > high ? Math.round(x) * 8 + Math.round(y) : high
  }
  return high
}

function day5part2(input) {
  let high = 0
  let plane = []
  let IDs = []
  for (let i = 0; i < input.length; i++) {
    let seat = {}
    let row = input[i].split('').splice(0, 7)
    let col = input[i].split('').splice(7, 3)
    let highX = 127
    let highY = 7
    let lowX = 0
    let lowY = 0
    let x = 64
    let y = 4
    row.forEach((c, i) => {
      switch (c) {
        case 'B':
          x = highX
          lowX = Math.round(lowX / 2 + x / 2)
          break;
        case 'F':
          x = lowX
          highX = Math.round(highX / 2 + x / 2) - 1
          break;
      }
      console.log(highX, lowX, x, c)
    })
    col.forEach((c, i) => {
      switch (c) {
        case 'R':
          y = highY
          lowY = Math.round(lowY / 2 + y / 2)
          break;
        case 'L':
          y = lowY
          highY = Math.round(highY / 2 + y / 2) - 1
          break;
      }
      console.log(highX, lowX, x + 1, c)
    })
    // console.log(x, y, i)
    console.log("\n")
    seat = { x: x, y: y }
    plane.push(seat)
    IDs.push(x * 8 + y)
  }
  let sorted = plane.sort((a, b) => (a['x'] + a['y'] * .1) - (b['x'] + b['y'] * .1))


  let idSort = IDs.sort((a, b) => a - b)
  console.log(idSort.filter(i => i > 550 && i < 580))
  console.log(sorted)
}

// console.log(day5part2(input5))

// REVIEW Day 6

let input6 = ['onitvpuwxqczlmkabsjrgedfy epdjqbxlnimfaowtzgsyku pejglyqnwuaodzsbmfxikt ojkpytdhignxuqebzlwsfma gfadqolubinjxtkwpemszy', 'i x i i', 'nmtyqwsoglva nyvtsgwmlaoq ysgmlnwvatqo nvgdamotqyslw ylmgtaqsnvow', 'uoqwrdpbntje cqpjnou jnupyoq npojuqs', 'tbsafengq eabqsftgndmx beaintysgqhof', 'ygtdfwuaorvchpnqzjlkbs fatqvskwudbljphryogc', 'jgewimpbkdaoslr ypxzgdwqteshnau', 'vdytrl rcltq ztlmkoi tylr gtlba', 'oxgpa ogaxp pgoxa', 'edi jtm b jmug', 'deoptcxnjhrqu termcldofphxv ckgbwhedpsroxt', 'owhkn hotwknq', 'hscufpqg tfnupahqglb rqeigmxdov', 'ndvbgkctqhyia cdbnaityvghkq akyqbivhdcngt qlikvbghnctdya kgatiqyhcbdvn', 'u ue u ku u', 'oky ok ko', 'oiw zch', 'fxzpdcutqrgye fdtxqyaeuzgrnpm bpfwrkxzyhguvqjiosl', 'edgtrynxsfuojq emxulhvaqwzkd vzbucdeqxip', 'ine no gn okngv uqtsnb', 'z zyr gwblk cy', 'ujgweobsncqvkl suloibqncvweg', 'vyaqhlx uignrjlbhoa', 'jnwgzhxivb niwxzfg tgckdqiepwxzrm yzigxwnu zwihjlxgov', 'hz t kfbye hr', 'mxbjytcpdv jbtdcipmvy', 'djnzloupqgftaibhyvexkcms bkopljahvxiecdmnygzsftqu sbkefojlvmynqgzcuhpdixta gusvkbqtxemailypcdnzohfj', 'wos uscwo owzs', 'esbmgprfvaldcwxn scdxpezwvbmflagrnt', 'qimplaudwo wmiopuq', 'lrnha rhjatnl lnahru arbnhxiel frnalzhj', 'lpdusr rmpludz', 'dmqtpnaeloxshgyj syimnjqhctolapzvxdg kqagxotudlbwnhrmfpjy', 'dwjkfgmpq ijgdqtf', 'veymdkxsfuhbr xhzdyfskvirubme fubrhyvdexmks', 'pcujgseytofn tvngpoyjdsaeucf jtrgbfyhezoinkcwsp', 'mpnfcvwurqazyebxksdj esfbmwcykpdrxjqvzuan sewamfyrqpkjxncbzvdu', 'nqafy qjvpfl', 'amrvdhswyljkcfgiu mvugwaifyshrdlkcj hujmrwsfadiycgvkl ulfaijxcdwgryvsmhk gylidvcfkrwhujsma', 'uzyhklx lxkyuhz hulyxkz hyuzlkx', 'ipmq pq apq pq', 'nkvjmtseoh njortvehs', 'vdijn vjnd dejnvc jndv', 'k ku hk', 'hkdvnlzwmxsftuqjpaeboci kadusyblhgfxwcnijzqpovtm', 'uetrqkvm gerqtvkmu', 'kfhaqnluzcmsbwodyp cbzohfqyknxlajdwsum', 'gjlenkd ngkledj dgknejl', 'tjqoxpuwlvhns xzcmderkibgfy', 'cgyezvtbslamrfd ruvafyeztxgko eifznvgaypwq', 'qw qyw qw wq wq', 'dihagsqjwoceu gcqoaduwhies', 'jimcebk spdyvrqw mhfanubejt', 'vbxo xbvu', 'crdvtbnqjhwg tqvbgndrhcjw vqgtcjwrbhd sgrbtjdfqhwuocv bjlvdrthwgqxc', 'hplsrmuwevjbkxzoticg pkbajhwzqgevyf bhpdaekjgvyzwn', 'yc qpas xyu rx', 'icyorxhzfmalsj brvfamjchlxizyw zmlbxcijafyrh iahfymzxjqrpcl hcaijyrplqzmfx', 'jihyxlsepo pxyceoijlhs rlubjhemitoayxs', 'qnpfsugkcv svjidkgmrlun', 'ywzrmlcpdvbua acxjgytmfbhoq aysqmibfkjxecnh', 'inbhzjcevlwpgqtuxf mpcyvenfxszjthguaqwb nbivgwqrjhxfzcetup', 'dosgweiakxtqzvnyp anixdzlewskyqgtp eqswifhymrzpaxujktdgnb', 'uebmar abepugr bupare', 'xqieovmrhwzautbd iqrmzdwxbevoua aezmburvxidoqw', 'guhenaisrqf fheruiqgnas pqkhetasgnrufi eulrghsfanqi', 'zrdkwol dlnojk dkvzoyi yzokdjih audpbqgockxe', 'zjnirkef jknb', 'briyfaedx darnixuyfb rmafybxid jisaywdkbfgrx', 'azh qw qwar rd unmpy', 'fbs hjosrzg fs ns ys', 'nscofqwtxrejvdizpablgy pbzoasryeqcftdxwjvgl vtjfelbgyxcpzuorsdqwa afvbgxqcpdestryowljz', 'qkxsgtlfh omytrzvpe', 'ocrn kyrmhafteuwbqx sncvdr', 'dymo hgqsvywocfb ukxnejyz hpoyrwvia', 'hmilqvgzybu qvyhlzmigu vzqlgxihumy gmvilzqubyh hkqzduligymv', 'nlbgx glnb glbn bgln gbnl', 'soqgwx gqivswxdo sqaoxhwgu wxogeqs', 'jognfqazltusc osfjzucmlng cfulozgnjs', 'ajiwzbgc wagbqizjc azjbgciw gcwbaizj', 'zk zkux krz rzk zk', 'xiyjlscpkevnbwthqrg pgklxebuhysrjwnq jlxkweybdrnhspqg jnagbpxkfwrqusylhe', 'uaznwpjg cndbywxp', 'htnbgrxzfivoucyqlpdeask uaolphsrgdqkzbnefxctviy aodbyvclisqgefnzpkrthxuw apycbhdszlueonitfxkvgqr', 'r dq x', 'zjobcalmydgnhusekvqw lcvmepodnyatuhsxzjrgiwq', 'jivelthfab ilebvjtf', 'd l l l l', 'arpq qrpa qpra arqp', 'toimfp fomt moft fotm', 'mkclzvg rhubsxtydaw', 'o vk o pdat', 'cpiyjlemrubfzqaogth cfzajulomeqgyhirptb yfhieolpqcutzmrbagj reblamiyhtfkuzoqjgpc ybqotecahrmigzlufpj', 'vkze zvwke zevhk esvkhzb ezvk', 'gpqyzlomh kvwujrsbtcfei', 'pzrhvoi zipvrh vzpihr', 'tpymbsjurcafkqhe hmwaqtcbrfpksgyd ofmlticskynrpzqhba mhbscykqtepvafr vmybqfashrpktc', 'uijrscazfylboqdxnwtgmh cgirasfjznohwmqlu hogunfcswqiajlrzm wmrfqlscanjpuihzoeg izfhvkmaocqjswlngur', 'nkqtoa tnakq qknat qnakt tqjkan', 'r r r r', 'fvoxgbwtdhsculjpmaeyin iubywltmnzdhkxaqrejgscp', 'fcyozjnkersqbxlavihd lewiyqkzdousagjpnbtfcmr', 'lwiznrea bvcu', 'hrexab hpxrbka cxizabrgh', 'khugcpbyrfmqnlesidx ncdpfxsaqkevmyhlrjbug ekfqpmyxsrlvuhgbdnc qmfbplshxkdnercutyg gknlmueodxqfphrbcsy', 'd d d', 'fub vlsztofi brf kfn f', 'japfuyzrshdim fjmzudyhsopir izypruhjfsdm', 'uectrmvolnqh meqochvunrlt outlrqechnavm tcnhvolruqem hmortnlqvuce', 'xjnidhwycavrpqumtb anjwibuqymtpvchrxd vpydtrnxuwjqimbhca tpbvxcwrjauiqyhmdn gbxmanylueiwvchtqprdj', 'xbkyzapsjiqmng qoizbxkrapgmns', 'ixrmtpknofzs rpmefklhzitxs ifxlmhptkrezs', 'tdhez ldzet zde zxqde dez', 'cfgbvipxdjarhulmtsz jihxbgdlcuvrstzma bivtadrjzlcxgumsh scxhtdvgrbmauiljz', 'qakxy qrygaxl qxyar', 'hcydn xcdyhn', 'msi mi im', 'pcxmjag xagpjunk xfgpjaqlr xugbjwpyna', 'yzhurm yumehn yuhpm', 'gutifmzkaew nrxdpsv qvxn dxrcyj', 'xwycftgsnebjuhomvlrakdz thnzfjymrlaeugxdocswbkv qteafygurvnxdkzjpshomlbcw gnrfkezjbloysvdmtuhawxc', 'r r ry r', 'a i a a a', 'ibptdxrznheslmky ondzfrpjbklxtimys iyrautgpqvblxcndkswmz', 'i zked rq', 'epmks svekm', 'plzebc lepbxcz zlepbc zbaprclqe icpzbel', 'xphyvtwqojigkrencdublfa frkonpbdyavxtsheigwujlcq uipdwgytjzoxhvqfkranclbe', 'bd s qkezvgrh f fa', 'p p p', 'pij ptij ijp', 'fygbrdcukwepmno hlsvjgatiqf', 'ogflexkqdsbj yxosqbdel odwblxqspev dxbesowrlq', 'lhtiqaonj feirkvqjxlby', 'hojr rjho orhj ohrj hojr', 'anwtvc adjmtnevqw wxnastv txankvw uavnwgt', 'wdzbrt scuzt', 'w mtw w w w', 've e re', 'ehko okh', 'rdg mr ksiwurf rnabqd', 'loqz mothz oze', 'mprcz zrmuc', 'led del del dle', 'fdmwrptq rpdhfntbml', 'zmsvdjkycbfritqoxeulgpan cuztqjedfmialbkyvprxgons delvxkjcqbmyzogiftaspnur zmepnuadxfbctijqroskylgv ausvpbkzjcdxqmnlwhtoigrfye', 'jvfrtmluiks kohpgyvxuidzbqeamcnw', 'ztwk tlwzxku kltgz tjhzvk kzciqt', 'let letr citlejhm tle xslet', 'xyzteu xuetzy uxtyze qyoexutz', 'jedkqlhbxrvi xdqilevjbkrm dkirevqbjlxw', 'dizgv digzv', 'muzhqcxlasvfw shvqgaywb hvaswqiry navsehiyqjtw', 'wkpcqalunzdogirvej evyncwpqbifrl qlncvpweixrt lwhfnrqvcmpie', 'zidupyhwxqjog otfrnaycbes', 'yt tyi ty ta', 'nigzxrupcdjtvasobhwq sidgrxeofmvpwknuayt', 'x yhd z s sx', 'xdbsmwqihoutzgepjlkva hjxlsdbtwigkqpmueovza', 'kmurn mkq dkjm km', 'olhg xldfykhvg ng uemiqpag', 'bsjyltpnm mtypbslnj tmsjnyblp', 'exomfdarziwubglvqc muakbqnwdcrelviop lfqhcuveoriawbdm ehvuclmwqdiraobz', 'hy yhve g zl', 'icybqeaxgfrhwszpnl fqrdgnxpchlebysziw qyghlwxrfpzsncbie izwxresfbygjlvcnhpq', 'hjqifdbtmcl njcix pojcgik', 'dnwkpexog xfqgso brzjvyuogt lodcngw xigoda', 'lwicsbax cidxwes wshiecxv', 'vrcajmledfihkgt ikvrelatjmchgpdf', 'gmiwhofuse fgwesihumo fumioewhsg', 'mtulgwsaojic sijwoclmtaug mlatsuowgijc wglajocitsum', 'qb e va b', 'viqkzfug', 'qdgkvsenbmxwhufac gdwskcxfnqevuj yckzdsxufnvegqw qeukcdvfswxgtn wegcfqnvdulkxjs', 'z r r r r', 'ujcfxtgeiz jfuceitgxz fzceuigjxt ztufcxgjie', 'lnpquewxgaskbfhdt mzirgovcj', 'fcribz axdkwbiz', 'iuxdqygkwhrzfjn mzheixfgatqvlunk', 'clsixgjnqvphyztob njzmsxotywvhqclgp fsovchjpxntlgzyq ulycvjgsxtznfoqph sxyvzpgjomlqtuhnc', 'kmblztu etmzbk qfzktbmi nbtmzk utmzbk', 'kywjs wksjy kjwys wskjy', 'prncsbljtyxgamzvkouwhdfqe cntevaiurfxjzohlpskgyqdw kotwhepfrulyqjsdxzngacv', 'y y y y', 'zrtvjfcsidplxakh wmfknyolebhuqr', 'jselqogdxnkai ojxgnekqadlh axqoldjgnwe ondksqjalvgexy utafgeqndxojl', 'vxmbn urjmbv bmvu mbv', 'ijrdocnlpmasuhxevz ijnzyavrpxlhecuws ouenvjizlcsaxhpr jlrnxsaeivzupch iurpxnsjzamecvlh', 'qbtympkiw ibpqtmdnwyk yqbtwmkpi', 'omlxcenguahbprt srgwlxtfvzpynocqh lbjtxnapdohkgriuc nkhblrcdtogpx', 'bijzvwspuergxfykhqnot zoyksqjpuxrwinetvhfgb nkifyurjszgtvqwxbeohp nfsvrwtyjiuexbzpohgkq', 'vnbur nrbv nzrvb vnbr vrbsny', 'zrbhlpuenxygdjaowsmiv lmrvjnyqzdhsoxaguieb jrzuhsgyveldnximabo hozsixrndjbmuyalveg', 'fiynrscvz lnxricvs', 'zd dz dz rzds dz', 'ucqoi uib umbief uim', 'cjbhpyaxmsknwuqrfdvze kjczaunprhvwqbsdfxeym wuzpjkrcyehmqdvfbnsxa', 'zy yz ywvszd', 'flykisxv fdxsinvyp wyxtirvef ivhqbxfyl', 'ieyhcbozswt xymwa qyvlurwgj wdxanly', 'sdnobwuzcrepmhkjq johqkdlerincxbsazuw', 'zpngeckafjmhq pcjfzhnkmeaq eczakjhfqmpn', 'chfdiv fdsvrct kxmgfvcapyd wqdnefzvc ctbefvduw', 'jqlaf dqflja fejalq', 'vunyzasqejkcp pcjkevzsqymau vqyznpakcsjeu ksyucanqvepzj zyqacepkvsuj', 'vfgtirsalzy tuzfsgvrliqay tifsgrzylva', 'nyevhuadf unoqbyh uynhwrk bynuxh', 'twiqrp wpqi', 'votlpuzghrkewfmjs whkduvpcefqxanzjylosim', 'urlnqsfopxekw mrgqolfcuepav', 'n nh n n', 'x ga', 'yihp hiwpy yhpqid pihvey', 'brfenzw dxkybzrie', 'vywmnzepihscud msihuoypkczde upyimedhscz hyuzsopmdeci', 'tdkxzwvf jvtywi etwvi', 'ypjvrasilunbtqdx broguvayljzpdtxqs bdjtrvqlsyaxpu fjvldbtipaysmkqrxu phjxybqvtmnleursad', 'paqnxcdr xrdcjpnq qdrpxcnz dxcqeknpr', 'bacuhisopvrtjly ivuohtjspbcayl htaljobyuvsicp dvbialtyspuhcjo txjabqhcpiewuyslov', 'xqfiwaorpengbyvkujl pvewxnbjuazoikrflgyq oewnfuphibgxmydvkalrjq jflqibpgkwxuyaernsov', 'lnm jlnm lnm nmlz nlm', 'ifkvgwbux yxguqfbvi uixlwgvfeb gvbufix eifxvubgjz', 'amecyjkpf jmyecpqdn rbtjdpwack lxszhcovgp', 'ivnfl ihol fcil silyajudb ifl', 'ywtnmdfeaxqr eqyfrwntaxmd axmntrqwefyd yexqtndmroawfh xeqfwdnyvmuatr', 'xfurwyjgmh hurjgymwfx', 'hmzctpxvk pchvxtzm tchpzxmv zcpevhtmx oamchzvpkxt', 'q q q qmn', 'snfjolcvibwqah hlvqjfnciawo qcnodvhalwjiyf', 'owmzkiehgnabfpysrduj kpyehrdwqoacmiugzfjsnb', 'sqwxtuzajvibrhmc rwcbuzaxpmiht omftruldhbnace', 'zwmlydvatgrfcuqpsb yqbdmupzrtvwaf fmqepantxwvzubyr', 'xytefoikzngwd zflkxqwayb', 'g g g g g', 'wkofhpezdnjutg yhltejszpi azbpestjh zetjxhaip', 'ht h h', 'btmo mobt mgtbo bomt', 'zskl zklsf lkzs skzl', 'wnbdjeruyvslpzxmckft kmcejnuldyvhxwoiftzb', 'nigmjydoukv gjkumodvyri mgvwkfypedzosuj vymjdukoght lyckujovngmd', 'cvgusohbrn iacuyzmqpetrflx', 'gpt uefzyhb cgkvsmnl rdivwgqtlp', 'otv ltzycvxq tvfwp vtfgdwh', 'gbqzw wzhbqe bwzgq', 'shuvla quzyjhdv uhscjdey aur otipfwnbkmxug', 'ocpvhuwqdbmneykfzaj ovpyqwnefazbuckjhd ifhotawzqnkupyrbexcvjds ojlauezvknfhwydpbqc yoknplcqzfwhvbdujea', 'ghzj igy lzsv qumbofr e', 'ayhikcwbgjml jwtcgqforxsekva myzjwpkncdgua', 'vicomdrjquzshkbwtlpnfeay ejcadvbtrypzowksmqfiuhln cxypqvjksamwtdnozrflieuhb dpjacvoqenfyimbksurhtlzw kfcatrdowvpuynzejmsblqih', 'cr wacduy c', 'djv vjd', 'ogldnxqtiys elmfqcohdygkri nslduvgyaqoij', 'clymkfiwz hzkylmc', 'sakvjmyfizbcq cyzmwkivqafbs cabifmykjvzsq kcvfymzuaisqb qzehysbvmckifa', 'hditryzeu juwpvnzo', 'ufqxci qfuxicps iucqfx xcqfui iuxfcq', 'pidvxwycu zievnqjbgoyt', 'vbqmihp evcntxykjubf qhovdbm', 'jdfonaphgyxi iwynxpajhog nxogaiyhwpsj ogaxhpsniyj gjisaynpxho', 'zbrepv alqfzgtdw', 'yfsoxnqjuz xojwszfnqu onjqfsxzu', 'lgvpdmnkiurtabfhsqz zqcwafpibmu mpfeayziqbu bupfazimq cuqzmoaifbp', 'eycspolqtmgxfinhubjdrav cyahxpiqduemnstbflojgr mpqntasfhbyudloxjcegri', 'orljgtybvwqczm klrymowqtfgvjbxz vrmzwtyqbeioj bvphmtzsraywqjo', 'faylgwiq faqigywl qygawilf', 'hfywiasvurbomednlctkzxqg roxedzcisgvawtnmubyhqlkf', 'vuijyqr jqvrueiy qturvyi', 'mpbxraufws xfmsuwparb buprxashwfm wxuramsfpb rsumwxapbf', 'erkp fyugptxac wqskpv hsqkp', 'nogxpear anpgoxer rnaeogxp rnpgxaoe', 'adnvfrotiqpzwyuk bspxoalcjzyemk', 'qjzunbtcfpeka uzxcakep ukzpsace', 'kwyxcvnlqr chyrqlvfkg qjbpmosckaverydl utvrzkhqiclyn', 'riahbufynqtdlmpvcgwo pehyarlosbfdtnivwgmu mjorpdwgnflhbtuaviy lqpifrbndahtgyvumow rmvpdnlbgwyohaifut', 'gpavjibrknhcqlm qcvmghripabjknl jqtbglpvanmichkr cimhlvjgnarkbqp', 'ymacz maycz myazc amczy zmbyucak', 'agpsur wuxgha', 'rzuhgywcpiso wyrdvgziumco cxgarwbziytuo', 'lpdzmx dplmz lzmpd zdlmp lmzpd', 'frdoayezvpsktjnmbg rmacqnotwlfgxksbjvpy', 'wfqrzcyal fyazqc ykaqfbzct fxzapqscvdge afqzc', 'jhgfwptyqxkivucbzmslanodre htbepirmlaksfncgvxyqudojzw', 'tw wt wt', 'iqzpnoyek eqyzkmpnoi gxwqzpekinyot zndoiekypq zyqeonfikp', 'yq qy qy qy qy', 'wips ykwp fhrjauwd wiles', 'dxvsrgqwaouphlbct rtpvolcbagshdxquw tdrvoqacpbslwguhx', 'oif oxfisdj fio foi ifo', 'huizasogdpx zuki kzrtui', 'd d d d d', 'donxvciuf tfcvnuldqaox', 'x x x l x', 'plnakucoyzxit legpvwuhxzfr', 'lvmjdfwynebaqhstrp sbayepvdjltnqcfmwrh vejtmbnywsfqhrdlp fjxetdpsylmhwrqbnv', 'makszcoungtfb bztoacmguknsf ugowhxdqanbtmijpvfsckel', 'wmbhjfrx twbramjf vyjswufdbpk lbifqtjnw jowbxif', 'irfpwxjenl ewnfpxril xwkrfnepil', 'dpwjzq xjdszl djz eydknjzv qzdj', 'duwmogcekjaixlhv jkdovumgeihlcxa gvpiaxlzuoejcfdmkh lhgmvtxcwkjuaioed meghjviuakodlxc', 'xoelhpvztacqdwyusrmgf hscyfqwztglikpaduoxebnr pgacfzqxtdjurseowyhl', 'xbcjsif jcxbisf xfjscbi jcsxfbi cjbixfs', 'gehfpztbindcma zhitnefadcbmygp mnedhbgfzaiypct zpibghtmoeadnfc', 'oaypzsngw ygpnouawxzsc ypsoawgnz', 'pkfmshoulytcb lpmsdtacyobhfu dlyhusbtwomfcp lymutphbcfsdo fpsmctbhuoly', 'hyiaronfpjx ypjnhixrofa', 'rlz zlr lrz lrz zlr', 'uztaxcpbngj wkfngj nsgj egnjik', 'kzprnhav ekrgafzvd kvzaer rfzvka', 'hmzesytalnxoidpqkucrvjw kiwxhsetqrujzodcavlmn', 'fzpcawsbnhmrg bganrmwhtcpfzs qngcawipbhrmsfz acrphnzbwsgfm hnzsgbwrmapfc', 'tgsbymldoazj zmbwkdyaostpj szjdtmobqka thebzvsrxidjmoan', 'lfamv ljbamxf', 'r f', 'lmpqfbsuxcagowh nrucpjgwhba ruakcdtngwhbvp', 'bdirz rmnv cidr kuyxewtfhr azrl', 'rshfoiwdcjyzktaqulnbepmg rpkmtozysqifechajlnbgwdu hafwblznqsuiecpgdomykrjt efqyidlogkbjzapcrmswnhtu dsaciglerwjuknfzmhotpqby', 'd dt ltd cmd', 'wfktqjrhoul pjtrhlqwkuf tlrjuhfowqk ktcmhnujrwlfq', 'xysfd wok t', 'ckbxnjyolfdawize yefwxjbzoinpkcdl cdyhkzfjiboexlnw wfjdyebvrngcliokxz', 'nwmaljtku wlminujkat tjflnmukaw wkcjnlumta mjukonlwta', 'ydlsqjrekwicu sidelwyx yibwtloshde lwuydesi', 'ygmh myfdh', 'rftdqabxkunzgm kbxnaufmqghtzd', 'u f f vma i', 'hxgncyiudjvkszl lzsxkajufyighcd yilkujgcdxzsh ixdhzvjykufslgc swymbpzdkecjguxrilho', 'p egpf p', 'iqec ecqi', 'zubeh huez uhze uhez zehu', 'evtip tvpei htpvie tievp vtiep', 'zqydx xzkqn', 'akfrplijmcdwbv hgucpnykxtimfsa paqklbemrcif', 'zqxdnfkgmursvpwh emblatjicyo', 'efkobr oefrbk bfroek ebofkr', 'sgpwbkcztuxflro zopatwxrucfgbl wkurcxbiglpztfy xzurgntwbpcflh ftrwulzbxcpg', 'zldgofcmki zkhmlfiu iekzdma vikyrmzbpxqjt wsimkz', 'qzjapnus pnfjqzusa pnjuqasz funsqzjap wqayjzusnp', 'akqhvfipw hwkpiafvq', 'vqwrumak aruvyqwkl urkvawqf', 'tzmonhcwsdxy keiutlpaqf tpvfbru etbgj', 'txq tn teli tvl lt', 'zgtsjdlk tjgzs ztjsg ztsybgj gzstj', 'zinaqxudyplvbmf furbycpzvixlnam ulpmbnvyizxajf bauqplnvztixyfmo soumpbfeixnyvazl', 'a ai a a', 'kaolnziybtxrd xdslyktbicrwomn', 'fybupjseqcmt yjufempcbstq tpyjuecvbqgslzxf', 'nfvxry vx vx xv xav', 'bycphurqtofvzmejg scthbufvmyergqp ypvucorhtxfegnqkbwm', 'fpgciebqjo eftqgjpcibo bczoqpfgiej jobpcfeigq', 'ikflzmrobax byoklfiazmxr aolpmgxzfbrki tauviflxkmhjznrsbo rlzbmkafpwoiqx', 'zxgrsheoqvmand jgkivfhmaxo', 'qrhwlmfoiakcxbnu mizvykdfwnqegpu', 'tqghprcaowsxemivljzbn bwrlnqgijzckdtovmphxsf gvtnixcrjlhszqpbowm ntrljwxzvmpgsobihqc', 'vnrtyixgah tmwyihanvbf ytahvinp sarntyhvi', 'igj ij j nj', 'cenajyhz lkfsutaic jyormceba', 'qoarlzhbpjsfdw tbecnyv gbcu myxkcbv nbig', 'cvh uza ysqmw ukga', 'ckvohwuq mfdgtbovclji ovaryuec cvqszxro okuvrcse', 'cslo loicw clo', 'eibdaftnpkvozslur tnvaeskduolfzqbri frebanpdsovilztuk baokzvdfnrutlesi', 'scqhtlwkxodgvmfjaebunry qcvsihbjdrgwxezaoulmn', 'nkzlugqfheivcmtbdp tghqkribvfpunlemc jqlbpyouetmihxwkvanfs', 'emsjdnqwakiflxc lkfdiejnwaxcmqs', 'opcsalzm wazjl fkapslzw ilqabntz czjalrv', 'evolyu vrseo ztuvoe', 'r r c', 'kcyva kcvay ykcva', 'vpfyshuxjl jsxubvhyli uhxylwsiajv', 'qoaxbgipkj qpixolgykajw kqcxnagpojhil gzjmpuxtkfqodia igqekojxap', 'tqgkxizfral zxkgftqd dkhqzgxfts', 'di lt', 'zqapsde uezarpg zeap', 'vynpzifqelhdc fnykpqdcvi dpyvfncseqiz', 'ivcfyqpuzn lyprisgjzb', 'omecvljytrqdhsizbnaku udqhsrwziecvontbjyalmk rziounkxcyhsetbdvljamq dcvbnoeifhmujztykrqals oyjivrleknaqutzcdsbmh', 'ojahsn jcsnhoa jxdnagle rcnpbhja', 'zqt zsqt ztq', 'vhz otkn', 'arvqefczkdbyptwhn izhcpyvadbrtsfnkwqe bwhzqckerydvnpfta', 'lega gael gjlae lega elga', 'sagqpktolcjnbxduvif jraphlikcvofdtbngsxuq', 'ueapyvcxjzkmdtofwhbi kxfntzweyojaudbhvcmip', 'esqtdbwny ktihlxyozbepr', 'kptwgyqjlshinzcmfraoue ecqfgzrmsnjoyuwbhptiak fesyrhanczkopgiuqmwtj htszfijegmapynoquwkcr gpvuwrtoeqscxhfdnjkizyam', 'jupyabtgzqkenwxmdov khpzbtidyxevwnfjqragmuo', 'nrjpulko snepoclyku', 'lizpwtmqu bsvrkjhdancye noxyegsdcfvk', 'sbg k cz', 'a a a', 'xriamvkljbzeyqpg lwbxpmygjizeavqkh vaqizxjbkypglem iybvglmzpekaxqj plyqrzibjevgxakm', 'vuksrmtnxypfhqjd rsnkhjydpxvmtqfu', 'kwzxnla eibgtvqrpof', 'rlcvxobkwaigdtynu trincuyxalmkowvgbd gtwnuicvyloaxerkbd ultgindkaevxrbcoyw', 'zeixf zxeif', 'vxdztljhormq mvjodztlrkx orxdlvzjmt ltoxvsmzdrj lzpomjrdxtv', 'mdjpnelh dhmpjeln pedjhmln epmnjlhd', 'l e g k egl', 'ntbzqkajovmluxfiwrhc zlwjvhonifkqmtxcruba twbckuareohvlzqmxfnj lzhkrxudbmfvjtwnaopgcq', 'qtfswx ftwsxq wxtqfs', 'jdfrbvegyaxnkpzuqc fxvrplchsnjzquig', 'ncdwaxzjpurlhvogiyk iuyzanjhlkwgcvtpodx njkvwoulacgdyphzxiq oluejdmzhxvknfwgbapciy wkuydhvzjlagpcniox', 'hwzt htw twenp', 'zyeaxcopib mjygholnrwzxcp', 'hlcyaim clmhya lahmcyu yalhmc lhmcay', 'twiyljbdfpz xwlzbfdyj eybldmjfwz bdezljnfwy', 'beokvws bokevs svkoxlbfe emovtsbkyq bxkovse', 'v viczk nv vo', 'wioycgnlvb gnzivbwl bilvxgnmwt', 'tfryxampokhneblv oyhmpbvknjlwtax atcphobxykvlmn lkyvnxpbamtho', 'lfq mzfloh flr rtfkdlx', 'zob ztobplj', 'agfhdxkitvezqupcmo dmqfevwiacspouxzgkht izchgpefqamtkvxduo', 'jshdzpmqy psdyh dshyp sdhpy', 'wf fw', 'obtyelgzwunkramj ogzwbjtkauenrlmy lratujbnowgkmeyz', 'kymsg gnhw', 'zlwhvaxn kciabjwq', 'fvupikynhtdzwcgomebjqras raxifvbdpyuosjwhmtncekqzg', 'ifsz waek', 'iyjeknxqbc xkqibpyeac', 'ln oln ln nl', 'nldwurygtea hfkenyl sfckenylvhq xylqnce lzpyevn', 'mrqjwyzdfpsk szfrjpdqym', 'vqowkpxziunbrdhfgat fblonvrwithaugpz iwnaohtprvumzefgb rfcaopswtjuhgnbivz rfngzabviowtphu', 'uenzqimokwrcaxt otemwixzrcguqa qiufamzerotwxc mropxcziqwtaeu', 'lbqtschfuxdo bfcvdhqxtslgio fchtzbxolsdq xqldtfcsoheb leocutxdhbqsf', 'ldoeanfmyprbujqgztsixwvhk ahnflzogxyitbdwvmsqekpjru ujeqmnofkltvryibsxwgdzpha', 'gjzm gmvzj zgjm zgjm jmzg', 'vtcadkes nvyzpas asdkv fatsvd vsa', 'esxdcznpbqfl szdfplcvnbwrea cxdnobpfezls', 'kfqazixnrcmep xwdkquriylohfb kruiqlhdvgfx rqktxofviby qkrdisxftlwb', 'uxbvmtedijgfq rxwcnasiyvluzjgq', 'qryboljcgs klsyqjmg qfgytjsl qkavjystelg', 'ihwaotvbldgjxp wqcipsukoynfrez', 'f j f f', 'dxky dxyk dxky xdyk ykdx', 'mfoswjcylnuqxzvtdgahr ovwznrdhptsbxckuly', 'brxojtnefkhdqp imwshgcuzyvjel', 'cyrzobudkxh hixnbwkudzcpjr gsqvhextflabdrm', 'ya sfti g', 'fezqityovsnbpglcwjx jvxwdmtrspglykez', 'dizgh ufvzlxsdah ykpzirhdg rzdgyjh', 'slgb bgsl kybwlg bgl', 'ejknlhwxsmqvdizburay khbvdusqrnmlzwjeia jknvwrqzbhaisuelmd ulivmajzknedqwsbrh dzvbejqwlatkhnrimsu', 'c iesu myvr', 'zw iphg', 'b b b', 'uvgqi vgqui uivgq', 'rapwh wahpr haprw awhrp', 'nyhmewt wemykn wnmey', 'mwgtdrpha yeorucslfkvxbqni', 'wb xju', 'xvhibjznw vmzhygtfiq', 'iklqa qaliz aqli', 'rjgvinpzwtumc invuwpjtgzrmc tpuijngovwmrz mtcnwivgzrjup', 'yimhdz ocgmjnvbaxdhq mrhzd rhmd hymldz', 'xcsebkmal bxefamks', 'fcahqgr xaqg', 'ayiwouqbekslfmpx sbilmeoxpyqkuaf olyfiubapqemxsk qiexlfpombayuks poaxysfulmbieqk', 'clsjyio jiozy axjkoniy', 'uwzbjkct ujkcwzbif', 'cdkguobtlpyjwfrzhem zmtkjwdnohercvblaf rdjhocwbltkzfme tairjewbfhxdqlcmzko rzkfocjmwthedibl', 'm u fie', 'hryqbcnxvtg xeazwsumq', 'jmiaz mbjzia zmwaji', 'ajm amj autemjh maj pmja', 'qfpietdhbxy qdahtybepzxi ixqyhftpde ihmywkrucjstdexqopl', 'enktj vqgxdrs', 'gnkcevrabxsdlzoq rqogvsbeladxcznk kdscagezlorvxbqn obnxaervsgzqlcdk rnkzvxgesoqcdlab', 'kfngqdutbvxiaemc dxmqecbauivnftg udxaqicmvtnbgef', 'ranvgxdpe ngvpde epnxvgr ywepngvu']

function day6part1(input) {
  let count = 0
  for (let i = 0; i < input.length; i++) {
    let groupArr = input[i].split(" ")
    let answers = []
    groupArr.forEach(person => {
      for (let j = 0; j < person.length; j++) {
        let q = person[j]
        if (!answers.includes(q)) {
          answers.push(q)
        }
      }
    })
    count = count + answers.length
  }
  return count
}

function day6part2(input) {
  let count = 0
  for (let i = 0; i < input.length; i++) {
    let groupArr = input[i].split(" ")
    let answers = {}
    groupArr.forEach(person => {
      for (let j = 0; j < person.length; j++) {
        let q = person[j]
        if (!answers[q]) {
          answers[q] = 1
        } else {
          answers[q]++
        }
      }
    })
    for (let a in answers) {
      let num = answers[a]
      if (num == groupArr.length) {
        count++
      }
    }
  }
  return count
}

// console.log(day6part1(input6))
// console.log(day6part2(input6))

// DAY 7
let input7 = ['muted white bags contain 4 dark orange bags, 3 bright white bags.', 'bright salmon bags contain 5 light indigo bags.', 'drab brown bags contain 2 dark green bags, 2 plaid fuchsia bags, 1 muted tomato bag, 5 light tan bags.', 'dark salmon bags contain 1 posh white bag, 4 light violet bags.', 'mirrored gray bags contain 4 mirrored turquoise bags.', 'posh turquoise bags contain 3 mirrored magenta bags, 1 muted red bag, 4 dim gray bags, 5 dull tan bags.', 'posh coral bags contain 4 dark purple bags, 5 drab teal bags.', 'light violet bags contain 2 striped magenta bags, 5 light lime bags, 5 posh cyan bags.', 'dull brown bags contain 1 vibrant silver bag, 3 dotted beige bags.', 'dim salmon bags contain no other bags.', 'light bronze bags contain 1 bright maroon bag, 3 faded olive bags, 2 shiny beige bags, 4 striped orange bags.', 'pale plum bags contain 3 muted white bags, 3 striped magenta bags.', 'shiny tomato bags contain 4 vibrant chartreuse bags.', 'dark gray bags contain 5 dim bronze bags.', 'plaid tan bags contain 4 light coral bags, 2 dim fuchsia bags, 3 mirrored coral bags.', 'bright blue bags contain 4 muted gold bags, 4 striped aqua bags.', 'faded cyan bags contain 4 drab teal bags, 2 faded black bags, 1 posh cyan bag.', 'clear purple bags contain 4 posh lavender bags, 4 dim green bags, 2 dull white bags, 5 pale crimson bags.', 'faded chartreuse bags contain 2 wavy orange bags, 5 vibrant red bags, 5 pale salmon bags, 2 vibrant plum bags.', 'dull plum bags contain 2 posh gray bags, 1 bright aqua bag, 3 faded lavender bags, 3 dull salmon bags.', 'dull magenta bags contain 3 shiny violet bags, 2 posh tan bags.', 'pale lime bags contain 2 vibrant plum bags, 5 striped crimson bags.', 'shiny cyan bags contain 5 plaid black bags, 4 muted lime bags, 3 posh black bags.', 'posh lime bags contain 5 light lavender bags, 1 dim green bag, 3 dull purple bags, 5 muted tomato bags.', 'dotted tomato bags contain 2 bright lavender bags, 5 muted white bags, 5 pale maroon bags, 4 dotted tan bags.', 'muted teal bags contain 5 shiny brown bags, 1 drab olive bag, 2 shiny black bags, 3 posh white bags.', 'mirrored violet bags contain 1 striped gold bag, 4 drab lavender bags, 4 mirrored blue bags, 4 bright gold bags.', 'dim crimson bags contain 1 pale bronze bag, 2 pale turquoise bags, 5 striped aqua bags, 1 light lavender bag.', 'wavy chartreuse bags contain 2 shiny violet bags, 2 striped white bags, 1 vibrant silver bag.', 'mirrored red bags contain 3 clear maroon bags, 4 dim indigo bags, 5 drab brown bags, 1 shiny white bag.', 'mirrored maroon bags contain 4 drab maroon bags, 1 mirrored teal bag, 5 faded coral bags.', 'clear teal bags contain 4 dim orange bags, 4 mirrored bronze bags, 3 faded beige bags.', 'muted lime bags contain 4 faded indigo bags, 2 muted olive bags, 2 mirrored chartreuse bags.', 'faded fuchsia bags contain 5 dim bronze bags, 3 muted tan bags, 3 drab teal bags, 5 faded bronze bags.', 'dull blue bags contain 5 shiny beige bags, 2 shiny silver bags, 5 dull fuchsia bags.', 'drab white bags contain 1 dotted aqua bag.', 'dark chartreuse bags contain 2 mirrored magenta bags, 3 wavy yellow bags.', 'bright gold bags contain 4 faded fuchsia bags, 1 plaid olive bag, 5 muted tomato bags, 4 drab bronze bags.', 'drab chartreuse bags contain 1 vibrant lime bag, 2 dark teal bags.', 'muted plum bags contain 5 light yellow bags, 4 drab lime bags.', 'shiny lime bags contain 4 dull brown bags, 5 dark brown bags.', 'pale white bags contain 2 dull aqua bags, 5 muted tan bags, 1 drab bronze bag.', 'dim violet bags contain 1 wavy red bag, 2 striped brown bags.', 'posh gold bags contain 4 wavy blue bags, 3 dotted aqua bags, 5 wavy maroon bags, 5 striped indigo bags.', 'light indigo bags contain 3 striped teal bags, 2 wavy blue bags, 5 shiny brown bags, 3 plaid fuchsia bags.', 'posh tan bags contain 4 bright aqua bags, 5 clear gold bags.', 'muted bronze bags contain 4 drab fuchsia bags, 3 bright brown bags, 2 dull brown bags, 3 plaid red bags.', 'shiny turquoise bags contain 2 muted purple bags, 2 striped green bags, 1 clear tomato bag, 5 bright plum bags.', 'pale tan bags contain 4 dark brown bags, 1 clear tomato bag, 1 mirrored black bag, 4 bright red bags.', 'faded yellow bags contain 3 drab purple bags.', 'striped black bags contain 1 clear lavender bag.', 'dotted indigo bags contain 4 striped plum bags.', 'dull black bags contain 5 posh crimson bags, 5 shiny bronze bags, 5 posh salmon bags, 4 bright salmon bags.', 'plaid beige bags contain 3 drab turquoise bags, 4 striped lavender bags.', 'striped gray bags contain 5 vibrant bronze bags, 4 bright chartreuse bags.', 'wavy bronze bags contain 2 clear teal bags, 2 light orange bags, 1 striped beige bag.', 'mirrored green bags contain 5 plaid lavender bags, 2 mirrored purple bags, 1 dark silver bag.', 'posh maroon bags contain 2 faded blue bags, 5 light tan bags, 4 clear brown bags.', 'plaid chartreuse bags contain 2 posh white bags, 3 striped orange bags, 5 light beige bags, 3 drab lime bags.', 'muted tomato bags contain 3 striped teal bags.', 'drab magenta bags contain 3 bright brown bags, 2 muted white bags, 4 shiny silver bags, 1 shiny indigo bag.', 'light gray bags contain 3 striped turquoise bags, 1 light purple bag.', 'pale violet bags contain 3 posh olive bags, 2 drab green bags.', 'light chartreuse bags contain 2 dull silver bags, 5 faded maroon bags, 5 drab purple bags, 5 shiny gold bags.', 'dull gold bags contain 2 shiny indigo bags, 5 bright orange bags, 4 faded bronze bags, 1 shiny tan bag.', 'dark black bags contain 1 faded lavender bag, 1 faded gold bag, 5 clear blue bags.', 'clear blue bags contain 3 dull teal bags, 3 wavy violet bags.', 'vibrant violet bags contain 3 dark purple bags, 3 bright aqua bags, 2 light indigo bags, 2 vibrant lime bags.', 'pale gray bags contain 3 plaid green bags, 2 dull beige bags.', 'plaid teal bags contain 1 wavy gold bag.', 'dotted maroon bags contain 2 shiny green bags, 5 wavy magenta bags, 5 posh fuchsia bags.', 'pale coral bags contain 1 plaid chartreuse bag, 1 dark bronze bag, 3 wavy blue bags.', 'shiny plum bags contain 2 dark yellow bags, 2 plaid gold bags.', 'light plum bags contain 2 light olive bags, 1 clear yellow bag.', 'drab aqua bags contain 4 wavy gray bags, 5 bright beige bags, 1 drab plum bag, 2 posh coral bags.', 'posh brown bags contain 4 dim blue bags, 3 shiny tan bags.', 'pale tomato bags contain 4 light olive bags, 2 shiny olive bags, 3 posh lavender bags.', 'dim orange bags contain 3 posh tan bags.', 'dull olive bags contain 5 dim turquoise bags, 3 dotted blue bags, 1 dotted plum bag, 5 mirrored bronze bags.', 'dim gray bags contain 3 shiny blue bags, 3 striped aqua bags, 2 bright tomato bags.', 'posh gray bags contain 1 plaid crimson bag, 1 mirrored yellow bag.', 'wavy silver bags contain 5 mirrored black bags, 5 clear gray bags.', 'muted salmon bags contain 1 clear indigo bag.', 'clear gold bags contain no other bags.', 'dotted cyan bags contain 2 dotted turquoise bags.', 'light crimson bags contain 2 shiny turquoise bags, 3 plaid fuchsia bags, 2 shiny yellow bags.', 'plaid lime bags contain 1 dim silver bag.', 'dim beige bags contain 3 clear green bags, 3 mirrored gray bags, 4 dotted lavender bags, 5 muted bronze bags.', 'dark coral bags contain 4 bright tomato bags, 3 shiny brown bags, 3 light magenta bags.', 'dull orange bags contain 5 striped red bags, 3 pale coral bags, 5 vibrant green bags, 5 muted indigo bags.', 'vibrant gold bags contain 4 dull crimson bags, 2 dark yellow bags.', 'mirrored coral bags contain 2 bright green bags, 3 shiny orange bags, 3 clear aqua bags, 3 dull salmon bags.', 'pale purple bags contain 2 bright tomato bags, 3 light beige bags, 5 plaid bronze bags, 4 dull beige bags.', 'bright olive bags contain 1 shiny beige bag, 3 mirrored crimson bags, 5 striped orange bags, 3 plaid fuchsia bags.', 'clear black bags contain 2 dull green bags.', 'bright red bags contain 5 posh cyan bags, 1 clear black bag, 2 plaid turquoise bags, 4 muted yellow bags.', 'mirrored tan bags contain 3 light cyan bags, 2 vibrant red bags.', 'muted orange bags contain 1 clear lavender bag, 4 posh bronze bags, 3 dim bronze bags.', 'plaid orange bags contain 3 shiny silver bags.', 'shiny teal bags contain 4 light chartreuse bags, 2 dull crimson bags.', 'striped crimson bags contain 2 dotted tomato bags, 5 dim fuchsia bags.', 'dotted tan bags contain 3 drab purple bags, 2 mirrored bronze bags, 3 shiny beige bags, 3 posh tan bags.', 'posh olive bags contain 1 clear tomato bag.', 'faded silver bags contain 4 drab blue bags, 5 dull yellow bags, 4 dim red bags.', 'plaid violet bags contain 3 dull tan bags, 1 dim yellow bag.', 'muted violet bags contain 4 clear violet bags, 2 mirrored teal bags, 1 plaid violet bag.', 'dull lavender bags contain 2 dotted silver bags, 4 striped coral bags, 5 striped indigo bags.', 'faded crimson bags contain 2 drab red bags.', 'striped coral bags contain 5 dull brown bags, 3 vibrant red bags.', 'shiny tan bags contain 1 shiny fuchsia bag, 2 plaid gray bags.', 'plaid coral bags contain 4 muted brown bags, 3 faded indigo bags, 5 wavy white bags, 3 mirrored blue bags.', 'bright white bags contain no other bags.', 'dark green bags contain 2 mirrored lime bags, 4 wavy maroon bags.', 'mirrored yellow bags contain 3 posh white bags.', 'bright magenta bags contain 1 drab lime bag, 4 mirrored black bags, 4 dark yellow bags, 1 light indigo bag.', 'shiny aqua bags contain 4 drab tan bags, 3 muted gray bags.', 'dim olive bags contain 4 dotted lavender bags, 4 plaid green bags, 1 posh lavender bag, 5 dim tan bags.', 'posh magenta bags contain 3 posh white bags, 1 clear plum bag.', 'light aqua bags contain 4 dim salmon bags.', 'muted indigo bags contain 5 plaid purple bags.', 'clear chartreuse bags contain 2 mirrored bronze bags.', 'dim teal bags contain 4 striped orange bags, 4 posh tan bags, 2 wavy maroon bags, 3 bright turquoise bags.', 'dim lime bags contain 5 faded coral bags, 2 muted aqua bags, 4 faded maroon bags, 3 mirrored bronze bags.', 'faded black bags contain 1 wavy maroon bag, 1 light aqua bag, 2 muted gray bags.', 'striped violet bags contain 3 drab olive bags, 3 clear purple bags.', 'plaid silver bags contain 4 wavy violet bags, 4 dotted beige bags, 4 dull bronze bags.', 'dull salmon bags contain 4 light bronze bags, 1 drab fuchsia bag.', 'posh salmon bags contain 4 dim bronze bags.', 'dim plum bags contain 4 pale maroon bags, 2 dim yellow bags, 4 dim turquoise bags.', 'faded maroon bags contain 1 shiny blue bag, 4 striped lavender bags, 2 bright aqua bags, 4 posh white bags.', 'plaid white bags contain 1 dark coral bag, 4 drab salmon bags, 5 muted blue bags.', 'pale red bags contain 3 dim aqua bags, 3 shiny lavender bags.', 'plaid gold bags contain 3 dotted brown bags, 5 clear tomato bags.', 'dim white bags contain 4 bright olive bags, 4 vibrant maroon bags, 5 pale brown bags.', 'bright brown bags contain 3 dark green bags, 3 dim gold bags, 2 bright aqua bags, 2 pale indigo bags.', 'mirrored bronze bags contain 5 striped orange bags, 1 dim bronze bag, 2 clear gold bags.', 'plaid plum bags contain 3 dotted tan bags, 5 dim salmon bags.', 'dim maroon bags contain 5 light aqua bags.', 'striped brown bags contain 3 vibrant beige bags, 2 dim indigo bags.', 'vibrant yellow bags contain 2 plaid black bags.', 'shiny white bags contain 2 dim maroon bags, 1 posh lavender bag, 5 dim gray bags.', 'striped tomato bags contain 2 pale plum bags, 2 wavy lime bags, 3 dim lime bags, 5 dark teal bags.', 'drab tan bags contain 5 dark brown bags.', 'pale beige bags contain 4 dim teal bags, 3 dim silver bags.', 'faded aqua bags contain 1 muted black bag, 1 light bronze bag.', 'dim green bags contain 3 vibrant lime bags, 2 drab fuchsia bags.', 'dim lavender bags contain 3 dotted beige bags, 1 dim green bag, 1 faded coral bag, 1 shiny teal bag.', 'pale blue bags contain 4 plaid fuchsia bags, 2 dark purple bags, 5 bright crimson bags.', 'faded lavender bags contain 1 mirrored black bag, 4 muted blue bags.', 'plaid aqua bags contain 2 clear maroon bags, 4 shiny teal bags, 2 posh fuchsia bags.', 'dotted violet bags contain 2 pale indigo bags, 2 muted red bags, 3 light lavender bags, 3 shiny yellow bags.', 'dotted olive bags contain 4 dim aqua bags, 5 striped maroon bags, 1 pale red bag.', 'drab lime bags contain 3 dotted aqua bags, 4 posh tan bags, 2 faded black bags.', 'dim yellow bags contain 2 faded maroon bags, 5 light teal bags.', 'dull maroon bags contain 5 drab purple bags, 1 pale maroon bag, 2 light gold bags, 1 faded salmon bag.', 'wavy tan bags contain 2 vibrant maroon bags, 3 muted white bags, 2 shiny brown bags, 4 light chartreuse bags.', 'dull violet bags contain 4 bright beige bags, 2 vibrant maroon bags, 5 dim gold bags, 4 drab violet bags.', 'drab cyan bags contain 1 light olive bag, 3 dark turquoise bags, 3 dark yellow bags, 2 light black bags.', 'wavy coral bags contain 3 posh lavender bags, 2 pale indigo bags, 2 striped green bags, 5 light beige bags.', 'clear white bags contain 5 dull purple bags, 2 wavy red bags.', 'shiny gray bags contain 3 striped teal bags.', 'shiny indigo bags contain 4 clear gold bags, 3 dark teal bags.', 'light blue bags contain 1 muted coral bag, 5 dark cyan bags.', 'bright cyan bags contain 5 drab brown bags, 1 pale teal bag, 2 posh cyan bags, 5 shiny indigo bags.', 'plaid yellow bags contain 1 vibrant gray bag.', 'dotted brown bags contain 3 mirrored silver bags.', 'dotted bronze bags contain 1 light indigo bag, 5 mirrored crimson bags.', 'bright purple bags contain 3 posh teal bags, 3 dim orange bags, 4 dark gold bags, 1 striped purple bag.', 'striped lavender bags contain 5 dim salmon bags, 2 posh indigo bags.', 'dark gold bags contain 5 faded brown bags, 1 faded magenta bag, 4 drab lavender bags, 1 dull tan bag.', 'clear beige bags contain 3 drab violet bags, 2 dim crimson bags.', 'drab orange bags contain 1 clear blue bag.', 'wavy teal bags contain 4 plaid green bags, 5 light bronze bags, 5 shiny indigo bags, 4 drab violet bags.', 'muted maroon bags contain 1 bright plum bag, 1 dim teal bag.', 'wavy violet bags contain 2 striped green bags, 5 striped brown bags, 4 muted bronze bags.', 'clear brown bags contain 2 wavy lime bags, 2 mirrored red bags.', 'plaid magenta bags contain 3 vibrant gold bags, 2 striped green bags, 4 striped maroon bags.', 'vibrant blue bags contain 2 light beige bags, 5 mirrored cyan bags, 4 dark blue bags, 5 drab yellow bags.', 'mirrored brown bags contain 2 dotted white bags.', 'light gold bags contain 3 vibrant silver bags.', 'mirrored silver bags contain 4 faded maroon bags, 5 faded coral bags.', 'bright indigo bags contain 1 clear salmon bag, 4 dim turquoise bags, 2 mirrored black bags, 1 striped indigo bag.', 'mirrored olive bags contain 2 drab olive bags, 4 vibrant gray bags.', 'dark silver bags contain 4 bright chartreuse bags, 1 shiny indigo bag, 2 dull brown bags.', 'drab salmon bags contain 3 dotted plum bags, 2 bright gold bags, 2 plaid beige bags.', 'dotted white bags contain 3 bright plum bags, 5 dotted beige bags, 1 dotted silver bag.', 'light olive bags contain 1 muted aqua bag, 2 striped brown bags, 1 mirrored bronze bag.', 'dotted blue bags contain 3 drab red bags, 2 mirrored bronze bags.', 'muted lavender bags contain 4 clear chartreuse bags, 4 striped brown bags, 3 mirrored tan bags, 5 shiny indigo bags.', 'dotted chartreuse bags contain 3 clear maroon bags, 5 clear turquoise bags, 4 mirrored aqua bags, 5 plaid aqua bags.', 'posh crimson bags contain 5 plaid plum bags, 1 wavy blue bag.', 'vibrant olive bags contain 3 wavy silver bags, 1 shiny blue bag.', 'wavy yellow bags contain 3 dim teal bags, 1 light brown bag, 4 dull chartreuse bags, 5 striped red bags.', 'dark olive bags contain 5 bright maroon bags, 4 dim tan bags, 3 bright aqua bags, 2 pale turquoise bags.', 'bright plum bags contain 1 light yellow bag, 4 muted aqua bags.', 'drab plum bags contain 1 dim gray bag, 5 light chartreuse bags.', 'striped salmon bags contain 4 drab lavender bags.', 'bright coral bags contain 4 clear tomato bags.', 'drab silver bags contain 2 shiny orange bags, 2 muted coral bags.', 'posh violet bags contain 3 wavy red bags, 3 shiny blue bags, 4 pale brown bags, 1 light yellow bag.', 'mirrored black bags contain 3 wavy white bags, 4 dotted tan bags, 3 shiny purple bags, 3 dim bronze bags.', 'faded green bags contain 2 drab brown bags.', 'posh yellow bags contain 3 striped gold bags, 4 light purple bags.', 'drab lavender bags contain 5 pale brown bags, 4 striped aqua bags.', 'clear magenta bags contain 4 dull beige bags, 2 wavy red bags.', 'wavy fuchsia bags contain 4 dull fuchsia bags, 1 bright beige bag.', 'bright maroon bags contain 2 striped orange bags, 2 muted white bags, 4 vibrant beige bags.', 'mirrored chartreuse bags contain 2 bright plum bags.', 'mirrored lavender bags contain 4 clear magenta bags.', 'light lime bags contain 4 vibrant cyan bags, 2 mirrored yellow bags, 5 light teal bags, 4 muted plum bags.', 'pale green bags contain 3 vibrant coral bags.', 'dark plum bags contain 3 shiny lavender bags, 1 light plum bag, 5 drab gold bags.', 'faded purple bags contain 2 wavy lime bags, 5 drab teal bags, 1 dark green bag.', 'dim silver bags contain 5 striped white bags, 5 drab coral bags.', 'faded bronze bags contain 1 bright white bag, 5 posh fuchsia bags, 2 mirrored teal bags.', 'pale indigo bags contain 1 dull brown bag, 4 muted red bags, 3 vibrant chartreuse bags, 5 drab teal bags.', 'dark tan bags contain 2 dim blue bags, 3 plaid indigo bags, 1 vibrant indigo bag, 5 dull salmon bags.', 'bright silver bags contain 4 vibrant black bags, 5 clear salmon bags, 5 dull violet bags.', 'striped aqua bags contain 1 pale brown bag, 5 shiny silver bags, 1 dim salmon bag, 3 dull chartreuse bags.', 'light beige bags contain 1 posh lavender bag, 2 muted gold bags, 5 light tan bags, 5 striped magenta bags.', 'faded gold bags contain 1 posh brown bag, 5 dull salmon bags, 5 faded olive bags, 2 posh coral bags.', 'drab violet bags contain 3 vibrant gray bags, 1 light silver bag, 5 posh gold bags, 1 vibrant lime bag.', 'striped beige bags contain 5 shiny yellow bags, 5 striped magenta bags, 1 shiny gold bag, 2 dotted tan bags.', 'muted beige bags contain 4 wavy lavender bags, 2 light beige bags, 4 vibrant tan bags, 5 dark plum bags.', 'shiny salmon bags contain 4 muted aqua bags, 3 dark olive bags, 5 shiny blue bags, 3 wavy maroon bags.', 'dotted crimson bags contain 5 mirrored cyan bags, 2 light black bags, 2 faded lavender bags, 3 drab indigo bags.', 'vibrant red bags contain 3 light silver bags, 1 shiny purple bag, 1 shiny blue bag, 4 dotted lavender bags.', 'striped yellow bags contain 4 clear red bags, 2 dim violet bags.', 'posh bronze bags contain 3 clear salmon bags, 1 dull salmon bag, 3 drab turquoise bags.', 'mirrored plum bags contain 1 bright plum bag, 5 striped tan bags, 4 shiny magenta bags, 1 shiny coral bag.', 'plaid gray bags contain 4 dim teal bags, 2 plaid green bags, 5 muted green bags.', 'bright orange bags contain 5 muted gray bags, 3 dim violet bags, 1 dark turquoise bag.', 'dim purple bags contain 3 dark brown bags, 3 dark cyan bags, 5 faded indigo bags, 1 light coral bag.', 'muted magenta bags contain 2 muted white bags.', 'vibrant white bags contain 2 wavy lime bags, 2 vibrant gold bags, 1 dim silver bag.', 'dull lime bags contain 3 dark salmon bags, 1 mirrored yellow bag, 5 clear salmon bags, 4 light white bags.', 'dark fuchsia bags contain 2 wavy salmon bags, 4 bright lavender bags.', 'bright bronze bags contain 3 dark turquoise bags, 3 dim maroon bags.', 'faded beige bags contain 5 wavy gold bags.', 'dotted green bags contain 4 muted red bags, 4 light black bags, 5 wavy cyan bags, 4 mirrored aqua bags.', 'light salmon bags contain 4 dim plum bags, 3 dark bronze bags, 3 dotted turquoise bags.', 'light red bags contain 4 vibrant gold bags, 5 drab red bags.', 'mirrored orange bags contain 5 drab lavender bags, 2 drab aqua bags, 5 mirrored aqua bags, 2 posh blue bags.', 'light coral bags contain 3 posh magenta bags, 3 dim maroon bags, 2 light aqua bags.', 'dotted purple bags contain 2 plaid purple bags, 3 light chartreuse bags.', 'light cyan bags contain 1 dotted magenta bag, 1 drab lime bag, 2 clear magenta bags.', 'shiny green bags contain 4 drab silver bags, 4 wavy blue bags.', 'dull yellow bags contain 4 wavy maroon bags, 4 bright white bags, 3 wavy white bags.', 'vibrant gray bags contain 1 wavy maroon bag, 5 dark yellow bags, 1 wavy silver bag, 1 vibrant silver bag.', 'plaid purple bags contain 1 dark yellow bag, 1 faded maroon bag, 1 muted coral bag, 2 clear yellow bags.', 'light orange bags contain 1 vibrant black bag, 4 striped brown bags.', 'vibrant tomato bags contain 4 plaid cyan bags, 5 dim salmon bags, 1 pale lime bag, 1 dim teal bag.', 'shiny coral bags contain 5 shiny blue bags, 1 shiny beige bag, 2 drab silver bags.', 'dark aqua bags contain 4 plaid magenta bags, 2 dull cyan bags, 3 dim red bags.', 'dotted aqua bags contain 4 pale turquoise bags.', 'clear gray bags contain 2 vibrant salmon bags, 4 dim salmon bags, 2 shiny silver bags.', 'striped purple bags contain 2 muted salmon bags, 2 posh green bags.', 'dark indigo bags contain 1 muted lime bag, 3 posh cyan bags, 2 dull brown bags.', 'wavy crimson bags contain 5 pale purple bags, 1 pale black bag, 5 plaid gold bags, 2 dull red bags.', 'faded gray bags contain 1 plaid maroon bag, 2 muted red bags, 1 drab turquoise bag, 3 clear maroon bags.', 'drab indigo bags contain 1 faded olive bag, 2 pale plum bags, 3 muted aqua bags, 3 muted white bags.', 'light green bags contain 3 plaid gray bags.', 'posh white bags contain 3 dim salmon bags.', 'shiny bronze bags contain 3 pale brown bags.', 'light tomato bags contain 4 dim tan bags, 4 dull crimson bags, 4 dark coral bags, 3 mirrored gold bags.', 'shiny crimson bags contain 1 vibrant gray bag.', 'muted blue bags contain 1 light magenta bag, 4 drab indigo bags, 1 vibrant salmon bag, 4 dim tomato bags.', 'wavy maroon bags contain 4 mirrored bronze bags, 3 clear gray bags, 3 muted white bags.', 'wavy white bags contain 5 dim salmon bags, 3 striped lavender bags, 3 faded olive bags.', 'striped plum bags contain 1 drab purple bag.', 'bright lavender bags contain 2 posh white bags.', 'posh red bags contain 5 vibrant salmon bags, 3 dark yellow bags, 1 dotted tan bag.', 'dark violet bags contain 5 vibrant beige bags, 3 drab lime bags, 1 dull plum bag.', 'mirrored aqua bags contain 4 posh orange bags, 4 mirrored fuchsia bags, 1 shiny chartreuse bag.', 'dark crimson bags contain 4 dim cyan bags, 2 wavy magenta bags.', 'striped cyan bags contain 3 mirrored teal bags, 5 light turquoise bags.', 'posh blue bags contain 3 posh indigo bags, 4 clear maroon bags, 5 pale salmon bags, 1 faded yellow bag.', 'mirrored tomato bags contain 1 dim silver bag, 3 bright purple bags, 3 clear lavender bags, 2 drab gold bags.', 'plaid green bags contain 5 drab indigo bags, 4 vibrant gray bags, 1 vibrant chartreuse bag, 5 mirrored lavender bags.', 'clear maroon bags contain 2 shiny beige bags.', 'faded turquoise bags contain 4 vibrant crimson bags.', 'striped magenta bags contain 3 vibrant salmon bags, 4 dull chartreuse bags, 3 faded olive bags, 2 striped aqua bags.', 'dark magenta bags contain 4 mirrored purple bags, 1 dull beige bag, 2 plaid chartreuse bags.', 'drab turquoise bags contain 2 dark olive bags, 4 pale plum bags.', 'faded tan bags contain 5 dull crimson bags, 3 wavy gray bags.', 'muted tan bags contain no other bags.', 'dull tan bags contain 2 plaid maroon bags, 3 dark green bags, 3 shiny orange bags.', 'striped red bags contain 1 striped maroon bag, 4 clear red bags.', 'faded magenta bags contain 3 shiny teal bags, 4 bright crimson bags.', 'dull aqua bags contain 5 pale turquoise bags, 5 bright tomato bags, 4 drab lime bags, 3 drab brown bags.', 'bright lime bags contain 2 light red bags, 2 shiny olive bags, 4 posh white bags, 2 dotted white bags.', 'clear tomato bags contain 1 shiny beige bag, 2 bright lavender bags.', 'faded indigo bags contain 5 muted tan bags, 4 dim bronze bags.', 'bright yellow bags contain 2 wavy blue bags.', 'striped bronze bags contain 3 muted gold bags.', 'mirrored fuchsia bags contain 5 faded yellow bags, 5 light cyan bags, 4 striped crimson bags.', 'wavy gray bags contain 3 dull chartreuse bags, 2 drab black bags.', 'muted coral bags contain 1 light aqua bag, 1 striped lavender bag.', 'vibrant lime bags contain 5 posh lavender bags, 2 dim bronze bags, 1 dull silver bag.', 'shiny gold bags contain 1 plaid orange bag, 2 striped lavender bags, 4 pale brown bags, 5 wavy blue bags.', 'plaid red bags contain 1 light aqua bag, 2 mirrored salmon bags.', 'dark brown bags contain 1 dull maroon bag.', 'pale fuchsia bags contain 5 striped coral bags, 5 dim tomato bags.', 'dull green bags contain 3 mirrored yellow bags, 2 bright lavender bags, 2 faded coral bags, 4 light bronze bags.', 'clear coral bags contain 1 mirrored black bag, 5 light chartreuse bags.', 'clear fuchsia bags contain 1 clear plum bag, 3 faded maroon bags.', 'drab gray bags contain 1 wavy tomato bag, 3 dark cyan bags.', 'wavy lavender bags contain 1 dim lavender bag, 3 clear turquoise bags.', 'dark tomato bags contain 3 dark red bags, 4 mirrored red bags, 1 plaid plum bag, 2 dark turquoise bags.', 'shiny maroon bags contain 2 plaid tomato bags, 2 posh magenta bags.', 'plaid bronze bags contain 3 light beige bags.', 'dim magenta bags contain 1 clear gold bag, 5 dark orange bags, 3 striped red bags.', 'pale aqua bags contain 1 vibrant beige bag, 3 vibrant maroon bags.', 'dim red bags contain 1 vibrant silver bag, 3 dark teal bags, 4 muted olive bags, 3 shiny beige bags.', 'shiny lavender bags contain 4 dim indigo bags, 4 muted brown bags, 4 dim tan bags, 3 dull white bags.', 'wavy turquoise bags contain 5 dim salmon bags, 1 light aqua bag, 3 vibrant salmon bags.', 'posh green bags contain 1 drab purple bag.', 'dim fuchsia bags contain 3 muted white bags, 3 pale bronze bags, 4 bright aqua bags.', 'wavy orange bags contain 5 muted tomato bags.', 'dark turquoise bags contain 2 plaid bronze bags.', 'shiny silver bags contain no other bags.', 'pale gold bags contain 5 posh turquoise bags, 3 posh gray bags, 1 wavy magenta bag, 2 posh beige bags.', 'dull chartreuse bags contain no other bags.', 'vibrant crimson bags contain 4 striped red bags, 3 light aqua bags, 5 shiny purple bags.', 'clear olive bags contain 3 shiny violet bags, 5 posh coral bags, 2 vibrant beige bags, 2 shiny salmon bags.', 'vibrant magenta bags contain 2 shiny blue bags, 2 dark brown bags, 5 dim teal bags, 5 pale purple bags.', 'faded orange bags contain 2 clear maroon bags, 4 posh tomato bags, 5 vibrant white bags, 3 shiny tan bags.', 'drab yellow bags contain 5 wavy maroon bags, 4 dotted fuchsia bags.', 'wavy purple bags contain 2 pale lavender bags, 4 faded indigo bags, 5 dotted lavender bags, 3 dim tomato bags.', 'drab beige bags contain 4 dark yellow bags, 5 drab indigo bags, 4 faded yellow bags.', 'wavy tomato bags contain 3 dim tan bags.', 'vibrant beige bags contain 2 bright aqua bags, 2 dull chartreuse bags.', 'dull bronze bags contain 3 dotted lavender bags, 3 shiny violet bags, 5 bright blue bags.', 'striped gold bags contain 3 dim white bags, 3 drab aqua bags, 4 dotted indigo bags, 5 vibrant black bags.', 'shiny yellow bags contain 1 dotted fuchsia bag.', 'mirrored salmon bags contain 3 wavy blue bags, 2 striped green bags, 3 dull beige bags, 5 light tan bags.', 'clear red bags contain 5 vibrant lime bags, 1 faded maroon bag, 2 striped lavender bags.', 'pale black bags contain 4 mirrored crimson bags, 3 drab lavender bags, 4 drab blue bags.', 'wavy green bags contain 2 drab lavender bags, 4 light teal bags, 1 mirrored chartreuse bag.', 'muted crimson bags contain 3 dim aqua bags.', 'dull red bags contain 2 pale cyan bags, 5 dotted indigo bags, 4 drab violet bags.', 'dull purple bags contain 2 dull gray bags, 3 dim turquoise bags.', 'dull beige bags contain 3 bright white bags, 2 dark orange bags, 3 dull chartreuse bags.', 'light silver bags contain 2 muted gold bags, 2 clear chartreuse bags, 1 faded maroon bag, 2 pale plum bags.', 'mirrored turquoise bags contain 3 faded black bags, 4 light teal bags, 2 striped plum bags.', 'wavy blue bags contain 3 faded indigo bags, 2 wavy white bags, 2 bright aqua bags, 5 light yellow bags.', 'faded lime bags contain 2 drab black bags, 4 shiny indigo bags, 2 light black bags, 1 dim green bag.', 'plaid brown bags contain 5 light turquoise bags.', 'drab gold bags contain 1 mirrored silver bag, 3 dark coral bags, 2 muted green bags.', 'vibrant aqua bags contain 5 muted salmon bags, 2 clear gray bags.', 'clear turquoise bags contain 4 dark coral bags.', 'dark cyan bags contain 2 mirrored silver bags, 1 wavy blue bag, 5 vibrant purple bags.', 'striped indigo bags contain 3 dim violet bags, 2 bright aqua bags, 5 shiny orange bags.', 'wavy red bags contain 4 dim indigo bags, 5 light gold bags.', 'clear cyan bags contain 1 muted cyan bag, 1 muted magenta bag, 2 faded cyan bags.', 'shiny violet bags contain 1 mirrored bronze bag, 3 wavy red bags.', 'wavy indigo bags contain 1 vibrant cyan bag.', 'posh fuchsia bags contain 1 dotted silver bag.', 'mirrored white bags contain 2 shiny fuchsia bags, 5 drab indigo bags.', 'dotted black bags contain 4 clear magenta bags, 2 dim plum bags, 5 dim red bags.', 'vibrant turquoise bags contain 3 dim aqua bags.', 'bright green bags contain 3 drab black bags, 3 light magenta bags, 3 dark purple bags.', 'bright crimson bags contain 5 faded indigo bags, 2 dim indigo bags, 4 pale purple bags.', 'posh beige bags contain 5 dim orange bags, 2 vibrant chartreuse bags, 2 bright crimson bags.', 'faded white bags contain 5 drab fuchsia bags, 4 faded cyan bags.', 'striped turquoise bags contain 1 muted olive bag.', 'bright chartreuse bags contain 5 plaid turquoise bags, 1 muted tomato bag, 1 bright gold bag.', 'muted red bags contain 2 faded maroon bags, 2 light chartreuse bags, 5 dark olive bags.', 'dull turquoise bags contain 1 striped lavender bag, 5 dark purple bags, 3 dim coral bags.', 'pale yellow bags contain 5 muted indigo bags, 2 dull black bags.', 'dim indigo bags contain 5 bright aqua bags, 1 shiny silver bag, 2 drab purple bags, 1 muted aqua bag.', 'faded blue bags contain 1 pale maroon bag, 3 faded maroon bags.', 'plaid olive bags contain 2 plaid cyan bags, 3 dim plum bags, 2 bright salmon bags.', 'drab black bags contain 1 faded black bag, 4 light yellow bags, 4 dim bronze bags, 4 drab indigo bags.', 'vibrant plum bags contain 5 mirrored lime bags, 4 dim yellow bags, 4 posh tomato bags, 3 light gold bags.', 'dotted lime bags contain 5 posh lavender bags, 5 faded purple bags, 4 dim salmon bags, 3 clear tomato bags.', 'pale turquoise bags contain 1 muted tan bag, 5 dark orange bags, 4 vibrant salmon bags, 5 dim bronze bags.', 'drab blue bags contain 2 posh white bags, 1 muted aqua bag, 2 light fuchsia bags.', 'faded olive bags contain no other bags.', 'posh black bags contain 2 faded bronze bags, 5 mirrored red bags, 3 dim gray bags.', 'shiny orange bags contain 5 dark olive bags, 5 drab indigo bags, 3 faded indigo bags, 3 striped brown bags.', 'mirrored blue bags contain 3 posh crimson bags, 2 striped lavender bags, 2 mirrored yellow bags.', 'drab purple bags contain 2 light teal bags, 5 striped magenta bags, 3 striped aqua bags.', 'bright gray bags contain 2 striped tan bags, 4 bright coral bags.', 'dim gold bags contain 2 dull brown bags, 5 mirrored crimson bags, 2 bright tomato bags.', 'posh aqua bags contain 2 bright magenta bags, 5 posh orange bags, 2 wavy silver bags, 1 posh plum bag.', 'wavy gold bags contain 2 drab purple bags, 5 posh plum bags.', 'wavy lime bags contain 4 drab teal bags, 5 drab bronze bags, 1 wavy maroon bag, 4 wavy silver bags.', 'muted black bags contain 5 drab gray bags, 3 pale salmon bags, 3 dull indigo bags, 3 pale brown bags.', 'bright aqua bags contain 3 dim salmon bags, 1 dark orange bag.', 'vibrant brown bags contain 3 dim gray bags.', 'striped teal bags contain 1 muted tan bag, 2 pale plum bags.', 'drab olive bags contain 2 dotted lavender bags, 1 muted green bag, 4 wavy gray bags.', 'shiny blue bags contain 1 pale turquoise bag, 3 faded olive bags.', 'dotted yellow bags contain 5 dim blue bags, 2 vibrant silver bags.', 'vibrant lavender bags contain 3 posh fuchsia bags, 4 mirrored crimson bags, 5 posh gray bags.', 'bright black bags contain 2 striped blue bags.', 'pale salmon bags contain 5 bright maroon bags.', 'dull white bags contain 2 striped salmon bags, 4 wavy turquoise bags.', 'faded teal bags contain 3 vibrant brown bags.', 'shiny olive bags contain 3 muted tomato bags, 5 light cyan bags.', 'shiny chartreuse bags contain 3 pale olive bags, 2 vibrant chartreuse bags, 3 striped cyan bags.', 'muted turquoise bags contain 3 light white bags, 4 pale maroon bags.', 'bright tomato bags contain 2 mirrored bronze bags, 3 light aqua bags, 4 bright aqua bags.', 'light black bags contain 4 mirrored chartreuse bags.', 'bright turquoise bags contain 4 shiny silver bags, 4 wavy blue bags.', 'dim coral bags contain 2 dull coral bags, 1 shiny yellow bag, 2 dark lavender bags, 3 light magenta bags.', 'clear indigo bags contain 2 faded maroon bags.', 'vibrant coral bags contain 3 mirrored teal bags.', 'dark red bags contain 3 drab lavender bags.', 'posh chartreuse bags contain 3 posh bronze bags, 1 posh crimson bag, 5 dark gray bags, 4 dark silver bags.', 'shiny purple bags contain 2 dull silver bags, 4 light aqua bags, 4 posh white bags, 1 clear chartreuse bag.', 'dull crimson bags contain 4 bright blue bags.', 'vibrant cyan bags contain 4 pale maroon bags, 4 mirrored yellow bags, 4 dark teal bags.', 'pale magenta bags contain 1 bright lavender bag, 5 wavy gray bags, 2 dark bronze bags.', 'shiny black bags contain 2 striped blue bags, 3 shiny brown bags.', 'pale lavender bags contain 3 dark gray bags, 4 vibrant beige bags, 1 dull coral bag.', 'dark beige bags contain 2 vibrant tomato bags, 1 shiny chartreuse bag, 4 light coral bags, 1 light violet bag.', 'bright violet bags contain 3 plaid lavender bags, 2 faded white bags.', 'pale silver bags contain 5 faded maroon bags, 5 clear coral bags, 3 light beige bags.', 'clear tan bags contain 4 wavy tan bags.', 'striped white bags contain 2 drab indigo bags, 1 faded olive bag, 3 dull chartreuse bags, 3 dotted beige bags.', 'muted chartreuse bags contain 4 bright crimson bags, 1 dull bronze bag, 1 dark aqua bag.', 'plaid black bags contain 2 striped brown bags, 5 wavy crimson bags, 4 plaid olive bags.', 'muted olive bags contain 1 posh white bag, 2 plaid plum bags.', 'dim brown bags contain 3 wavy lime bags, 2 bright orange bags, 4 striped aqua bags, 3 bright teal bags.', 'striped silver bags contain 2 wavy tan bags, 1 light coral bag.', 'drab tomato bags contain 2 dotted fuchsia bags, 4 plaid aqua bags.', 'dim chartreuse bags contain 5 pale beige bags, 5 bright brown bags, 1 dull lavender bag.', 'clear lavender bags contain 5 wavy maroon bags, 5 drab coral bags, 5 muted tan bags.', 'light magenta bags contain 4 wavy white bags, 2 pale salmon bags, 5 muted gold bags, 2 pale cyan bags.', 'pale crimson bags contain 5 striped blue bags, 4 pale lavender bags.', 'plaid crimson bags contain 5 mirrored black bags, 5 pale magenta bags, 4 wavy plum bags, 3 bright green bags.', 'pale cyan bags contain 5 light tan bags, 1 drab purple bag.', 'pale teal bags contain 4 wavy magenta bags.', 'wavy salmon bags contain 3 muted aqua bags, 1 dull purple bag, 1 drab teal bag, 2 dull gray bags.', 'plaid blue bags contain 4 plaid gray bags, 4 dim fuchsia bags, 3 muted purple bags.', 'dotted magenta bags contain 3 dotted lavender bags, 4 striped magenta bags.', 'striped olive bags contain 3 striped teal bags, 5 faded maroon bags, 4 plaid maroon bags, 4 muted gold bags.', 'dotted turquoise bags contain 3 dull cyan bags, 3 shiny yellow bags, 1 striped maroon bag.', 'dotted plum bags contain 5 bright plum bags, 4 shiny yellow bags.', 'pale bronze bags contain 3 faded salmon bags, 5 muted gray bags, 5 shiny beige bags.', 'mirrored beige bags contain 1 vibrant gold bag, 2 posh plum bags, 1 plaid purple bag.', 'vibrant purple bags contain 4 bright crimson bags, 3 faded coral bags, 2 striped lavender bags, 3 wavy turquoise bags.', 'dim tan bags contain 4 posh indigo bags.', 'faded violet bags contain 3 clear silver bags, 5 faded salmon bags.', 'dim turquoise bags contain 5 light beige bags.', 'faded salmon bags contain 5 shiny purple bags, 3 dim bronze bags, 2 light aqua bags, 5 posh indigo bags.', 'dull gray bags contain 4 dotted magenta bags.', 'dark purple bags contain 4 striped magenta bags, 4 faded maroon bags.', 'muted silver bags contain 5 posh lavender bags.', 'drab green bags contain 3 dotted tomato bags, 4 muted gray bags, 1 dim maroon bag, 1 plaid chartreuse bag.', 'mirrored indigo bags contain 4 shiny crimson bags.', 'muted purple bags contain 4 plaid plum bags, 4 dull gray bags.', 'plaid indigo bags contain 5 drab bronze bags, 3 light turquoise bags, 1 dull chartreuse bag, 5 bright blue bags.', 'drab bronze bags contain 5 light cyan bags, 1 faded yellow bag.', 'clear violet bags contain 5 bright silver bags, 3 mirrored yellow bags.', 'faded brown bags contain 5 wavy red bags, 3 muted aqua bags.', 'dotted red bags contain 4 clear chartreuse bags.', 'drab teal bags contain 5 striped aqua bags, 3 pale salmon bags.', 'wavy beige bags contain 3 bright brown bags.', 'striped green bags contain 3 wavy blue bags, 5 light aqua bags, 4 light tan bags, 3 mirrored lime bags.', 'dark blue bags contain 2 bright crimson bags, 3 striped salmon bags.', 'dark bronze bags contain 3 plaid yellow bags, 2 wavy white bags.', 'clear crimson bags contain 5 dull white bags, 5 plaid crimson bags, 3 mirrored yellow bags, 3 wavy lime bags.', 'dark lavender bags contain 1 striped green bag.', 'light maroon bags contain 1 faded fuchsia bag.', 'dull coral bags contain 1 mirrored lavender bag.', 'plaid cyan bags contain 5 faded maroon bags, 2 light indigo bags, 4 light brown bags.', 'drab fuchsia bags contain 4 drab turquoise bags, 2 bright white bags, 3 vibrant chartreuse bags, 2 posh white bags.', 'clear orange bags contain 5 clear red bags.', 'posh plum bags contain 4 dim indigo bags, 4 muted coral bags, 1 light aqua bag, 5 muted tomato bags.', 'dotted salmon bags contain 5 drab aqua bags, 2 faded cyan bags, 4 light red bags, 2 shiny aqua bags.', 'clear aqua bags contain 2 shiny red bags, 2 pale white bags.', 'clear yellow bags contain 2 dark orange bags, 4 light silver bags, 1 plaid fuchsia bag.', 'striped lime bags contain 1 drab lime bag.', 'posh silver bags contain 4 posh yellow bags, 4 light orange bags, 3 striped fuchsia bags, 5 dull silver bags.', 'wavy black bags contain 5 dim crimson bags, 3 muted violet bags.', 'dull silver bags contain 4 vibrant silver bags, 4 dim salmon bags, 4 drab lavender bags.', 'light lavender bags contain 4 bright lavender bags, 3 dim gray bags, 4 drab lime bags.', 'posh tomato bags contain 4 dark bronze bags, 4 dull silver bags, 5 dull bronze bags.', 'wavy brown bags contain 2 clear lime bags, 3 mirrored tan bags, 2 dull coral bags.', 'clear salmon bags contain 5 dull white bags, 4 drab purple bags, 3 shiny violet bags, 3 plaid chartreuse bags.', 'bright beige bags contain 2 dull tomato bags, 2 drab chartreuse bags.', 'dull cyan bags contain 5 bright plum bags, 5 light lavender bags.', 'light turquoise bags contain 4 muted green bags, 4 wavy maroon bags, 5 dotted beige bags.', 'dark maroon bags contain 2 bright fuchsia bags, 5 dull crimson bags, 5 plaid crimson bags.', 'vibrant black bags contain 3 muted red bags.', 'wavy aqua bags contain 3 pale plum bags, 5 shiny lime bags.', 'plaid turquoise bags contain 3 shiny red bags, 5 bright tomato bags, 3 muted olive bags, 5 pale maroon bags.', 'dull tomato bags contain 3 dim yellow bags, 4 posh violet bags, 4 plaid yellow bags.', 'drab maroon bags contain 4 drab olive bags.', 'dark orange bags contain 2 clear gold bags, 1 striped aqua bag, 2 muted aqua bags, 2 striped magenta bags.', 'vibrant chartreuse bags contain 1 dim indigo bag, 1 drab purple bag, 2 shiny gold bags, 3 faded salmon bags.', 'striped chartreuse bags contain 3 drab gray bags, 1 drab red bag.', 'plaid tomato bags contain 2 dark gray bags, 5 dim bronze bags.', 'drab red bags contain 4 light silver bags, 2 drab turquoise bags, 1 striped lavender bag.', 'clear green bags contain 1 vibrant magenta bag, 3 plaid beige bags, 2 mirrored tan bags.', 'dull teal bags contain 1 vibrant green bag.', 'vibrant fuchsia bags contain 2 dull purple bags, 1 drab gold bag, 5 light aqua bags.', 'vibrant salmon bags contain no other bags.', 'posh teal bags contain 2 light magenta bags, 4 dotted fuchsia bags.', 'mirrored gold bags contain 1 posh crimson bag, 5 dull beige bags, 3 plaid salmon bags.', 'pale orange bags contain 2 plaid violet bags.', 'vibrant maroon bags contain 3 drab teal bags.', 'faded coral bags contain 4 muted gold bags, 2 posh white bags, 5 plaid plum bags, 4 mirrored lime bags.', 'vibrant teal bags contain 3 faded black bags, 2 posh green bags, 3 plaid fuchsia bags.', 'shiny red bags contain 2 striped orange bags, 2 light purple bags.', 'mirrored cyan bags contain 4 muted bronze bags, 1 shiny green bag.', 'dotted silver bags contain 2 striped indigo bags, 2 dotted magenta bags, 3 striped plum bags, 2 faded brown bags.', 'mirrored purple bags contain 2 plaid red bags, 3 dotted beige bags, 3 drab black bags.', 'clear lime bags contain 5 faded salmon bags.', 'muted fuchsia bags contain 2 dim gold bags, 2 clear gray bags, 1 posh red bag, 2 drab indigo bags.', 'mirrored lime bags contain 1 drab turquoise bag, 4 dark yellow bags.', 'bright teal bags contain 3 wavy plum bags, 3 plaid red bags, 2 bright tomato bags.', 'dark teal bags contain 2 muted coral bags, 1 light tan bag, 5 dotted tan bags.', 'faded plum bags contain 4 pale indigo bags, 1 bright plum bag, 2 shiny crimson bags.', 'vibrant tan bags contain 3 muted violet bags.', 'shiny magenta bags contain 4 posh tan bags, 4 mirrored tan bags, 3 plaid chartreuse bags.', 'vibrant orange bags contain 1 vibrant crimson bag, 3 shiny tan bags, 4 dark crimson bags, 1 dotted silver bag.', 'muted aqua bags contain no other bags.', 'clear silver bags contain 2 faded olive bags, 5 vibrant purple bags.', 'plaid fuchsia bags contain 4 vibrant beige bags, 1 mirrored bronze bag.', 'muted gold bags contain 2 striped aqua bags, 1 light yellow bag.', 'posh cyan bags contain 2 vibrant gold bags, 2 light lavender bags, 5 striped green bags.', 'bright tan bags contain 3 pale maroon bags, 4 dim coral bags.', 'drab crimson bags contain 3 mirrored chartreuse bags, 5 faded maroon bags, 3 dotted magenta bags, 4 bright brown bags.', 'dotted coral bags contain 4 muted aqua bags, 1 striped white bag, 1 dim bronze bag.', 'dotted gray bags contain 1 mirrored white bag.', 'shiny beige bags contain 2 dim tan bags.', 'light brown bags contain 1 dim violet bag.', 'shiny fuchsia bags contain 3 dark teal bags, 4 drab purple bags, 2 mirrored bronze bags, 2 dim salmon bags.', 'wavy magenta bags contain 4 vibrant gray bags, 5 clear salmon bags.', 'light teal bags contain 1 dull beige bag.', 'dark yellow bags contain 1 clear chartreuse bag, 4 mirrored bronze bags, 4 dim salmon bags, 4 wavy white bags.', 'bright fuchsia bags contain 1 pale magenta bag, 5 muted plum bags.', 'muted cyan bags contain 2 shiny tan bags, 5 mirrored blue bags, 1 mirrored chartreuse bag, 2 plaid chartreuse bags.', 'dim aqua bags contain 4 pale bronze bags, 2 muted blue bags, 3 clear red bags, 3 light lavender bags.', 'pale brown bags contain no other bags.', 'plaid salmon bags contain 3 posh coral bags, 3 dim white bags, 2 drab olive bags, 4 shiny violet bags.', 'dull fuchsia bags contain 5 striped red bags, 1 pale black bag.', 'light purple bags contain 3 plaid orange bags, 5 vibrant red bags.', 'dotted lavender bags contain 2 light gold bags, 3 shiny gold bags, 3 dim tan bags.', 'dotted gold bags contain 1 muted gray bag.', 'wavy cyan bags contain 1 drab teal bag, 2 wavy yellow bags, 1 striped blue bag, 3 dull blue bags.', 'striped orange bags contain 1 striped lavender bag, 1 posh white bag, 5 bright aqua bags, 2 shiny silver bags.', 'clear bronze bags contain 2 striped gold bags, 3 light tomato bags.', 'mirrored teal bags contain 1 bright lavender bag, 4 dim green bags, 4 bright brown bags.', 'vibrant green bags contain 4 vibrant violet bags, 5 pale bronze bags.', 'muted gray bags contain 5 pale brown bags, 5 mirrored bronze bags, 3 dim tan bags, 3 bright white bags.', 'shiny brown bags contain 3 light chartreuse bags.', 'pale maroon bags contain 3 drab lavender bags, 1 bright turquoise bag, 1 dim tan bag.', 'light fuchsia bags contain 4 plaid bronze bags.', 'pale olive bags contain 4 striped teal bags.', 'plaid lavender bags contain 5 posh gold bags.', 'light yellow bags contain 4 striped aqua bags, 1 dotted aqua bag, 2 dark orange bags, 4 faded olive bags.', 'dull indigo bags contain 2 bright indigo bags, 2 dotted plum bags, 3 pale black bags, 5 pale turquoise bags.', 'light white bags contain 2 bright brown bags, 3 pale brown bags, 1 faded olive bag.', 'mirrored crimson bags contain 2 faded maroon bags, 2 dim maroon bags, 5 faded indigo bags, 2 striped aqua bags.', 'dim black bags contain 1 muted silver bag, 4 plaid magenta bags, 3 muted fuchsia bags, 4 dim olive bags.', 'dotted fuchsia bags contain 3 mirrored salmon bags, 3 drab purple bags.', 'faded tomato bags contain 4 dim gold bags, 4 light olive bags.', 'vibrant bronze bags contain 5 mirrored turquoise bags.', 'faded red bags contain 1 bright bronze bag, 2 dotted aqua bags.', 'vibrant silver bags contain 2 dull chartreuse bags, 3 faded olive bags, 1 shiny blue bag.', 'muted green bags contain 2 posh lavender bags, 2 faded indigo bags, 2 mirrored black bags, 5 clear magenta bags.', 'pale chartreuse bags contain 2 wavy olive bags, 5 faded orange bags, 1 pale indigo bag, 4 bright plum bags.', 'dim bronze bags contain 4 striped magenta bags, 5 faded olive bags, 4 pale brown bags, 4 muted tan bags.', 'posh purple bags contain 3 posh indigo bags, 4 faded white bags, 1 dull salmon bag, 2 pale aqua bags.', 'drab coral bags contain 5 posh red bags, 4 clear plum bags, 1 faded tomato bag, 5 wavy maroon bags.', 'striped fuchsia bags contain 3 pale brown bags.', 'striped blue bags contain 4 drab lavender bags, 2 plaid gray bags.', 'posh indigo bags contain 2 muted white bags, 5 striped aqua bags.', 'mirrored magenta bags contain 4 posh tan bags, 1 light magenta bag.', 'dim blue bags contain 4 vibrant purple bags.', 'striped maroon bags contain 5 drab black bags, 2 bright beige bags, 5 posh tomato bags, 3 plaid red bags.', 'dark lime bags contain 3 drab indigo bags, 1 bright teal bag.', 'clear plum bags contain 1 pale cyan bag, 3 wavy white bags.', 'muted brown bags contain 3 light indigo bags, 3 light olive bags, 1 light lavender bag.', 'posh lavender bags contain 2 striped magenta bags.', 'striped tan bags contain 4 pale bronze bags, 3 dull aqua bags.', 'dim cyan bags contain 3 dark violet bags, 2 dull brown bags.', 'dotted teal bags contain 5 posh gray bags, 2 posh purple bags, 1 vibrant gray bag.', 'muted yellow bags contain 1 plaid red bag, 3 faded black bags.', 'dotted beige bags contain 2 dotted tan bags.', 'wavy plum bags contain 2 mirrored black bags.', 'wavy olive bags contain 4 shiny silver bags.', 'dotted orange bags contain 2 faded indigo bags, 3 posh lavender bags, 5 plaid fuchsia bags, 1 bright magenta bag.', 'dim tomato bags contain 2 faded olive bags, 3 posh tan bags.', 'light tan bags contain 5 drab lavender bags, 2 striped lavender bags, 3 posh indigo bags, 3 shiny silver bags.', 'posh orange bags contain 3 vibrant green bags, 1 dim orange bag, 5 dull silver bags, 5 wavy orange bags.', 'plaid maroon bags contain 5 dim gray bags, 3 muted red bags, 5 posh violet bags, 3 dark green bags.', 'dark white bags contain 4 drab chartreuse bags, 2 striped lavender bags, 4 dull aqua bags.', 'vibrant indigo bags contain 1 clear plum bag.']

let testInput7 = ['light red bags contain 1 bright white bag, 2 muted yellow bags.',
  'dark orange bags contain 3 bright white bags, 4 muted yellow bags.',
  'bright white bags contain 1 shiny gold bag.',
  'muted yellow bags contain 2 shiny gold bags, 9 faded blue bags.',
  'shiny gold bags contain 1 dark olive bag, 2 vibrant plum bags.',
  'dark olive bags contain 3 faded blue bags, 4 dotted black bags.',
  'vibrant plum bags contain 5 faded blue bags, 6 dotted black bags.',
  'faded blue bags contain no other bags.',
  'dotted black bags contain no other bags.']

let testInput72 = ['shiny gold bags contain 2 dark red bags.',
  'dark red bags contain 2 dark orange bags.',
  'dark orange bags contain 2 dark yellow bags.',
  'dark yellow bags contain 2 dark green bags.',
  'dark green bags contain 2 dark blue bags.',
  'dark blue bags contain 2 dark violet bags.',
  'dark violet bags contain no other bags.']

function day7part1(input) {
  let count = 0
  let dict = {}
  for (let i = 0; i < input.length; i++) {
    let rule = input[i].split(" contain ")
    let topBag = rule[0].split(' bags')[0]
    dict[topBag] = {}
    rule[1].split(', ').forEach(e => {
      let num = +e[0]
      let bag = e.split(' ').splice(1, 2).join(' ')
      dict[topBag][bag] = num
      dict[topBag]['containsGold'] = false
    });
  }
  let bags = []
  for (let key in dict) {
    if (!dict[key].containsGold) {
      dict[key].containsGold = bagfinder(dict, dict[key])
      // dict[key].containsGold ? console.log(dict[key]) : "nothing"
      dict[key].containsGold ? bags.push(key) : "nothing"
    } else {
      bags.push(key)
    }
  }
  console.log(Object.keys(dict).length)
  return bags
}

function bagfinder(dict, bag) {
  let gold = false
  if (bag.hasOwnProperty('shiny gold') || bag.containsGold) {
    return true
  }
  for (let key in bag) {
    if (key != 'other bags.') {
      if (key != 'containsGold') {
        gold = bagfinder(dict, dict[key])
        if (gold) {
          break;
        }
      }
    }
  }
  return gold
}


// console.log("result test", day7part1(testInput7))
// console.log("result", day7part1(input7))


function day7part2(input) {
  let count = 0
  let dict = {}
  for (let i = 0; i < input.length; i++) {
    let rule = input[i].split(" contain ")
    let topBag = rule[0].split(' bags')[0]
    dict[topBag] = {}
    rule[1].split(', ').forEach(e => {
      let num = +e[0]
      let bag = e.split(' ').splice(1, 2).join(' ')
      dict[topBag][bag] = num
    });
  }
  let bags = 0
  for (let key in dict["shiny gold"]) {
    for (let i = 0; i < dict['shiny gold'][key]; i++) {
      bags++
      bags += bagfinder(dict, dict[key])
    }
  }
  return bags
}

function bagfinder(dict, bag) {
  let bags = 0
  for (let key in bag) {
    if (key != "other bags.") {
      for (let i = 0; i < bag[key]; i++) {
        debugger
        bags++
        bags += bagfinder(dict, dict[key])
      }
    }
  }
  return bags
}


// console.log("result", day7part2(testInput72))
// console.log("result", day7part2(input7))



// REVIEW day 8

let input8 = ['acc +37', 'acc -4', 'nop +405', 'jmp +276', 'acc +39', 'acc +40', 'acc -3', 'jmp +231', 'acc +44', 'acc +12', 'jmp +505', 'acc +35', 'jmp +282', 'acc +23', 'jmp +598', 'nop +392', 'acc +18', 'acc +44', 'acc +18', 'jmp +297', 'nop +460', 'jmp +152', 'nop +541', 'acc +33', 'jmp -11', 'acc -5', 'acc +9', 'jmp +327', 'acc +30', 'acc -1', 'acc -3', 'jmp +50', 'acc +22', 'acc +18', 'acc +33', 'acc +37', 'jmp +57', 'acc -17', 'acc -6', 'acc -2', 'jmp +535', 'acc -15', 'jmp +279', 'acc +34', 'acc +44', 'acc +41', 'jmp +349', 'acc +2', 'acc +6', 'nop +351', 'nop +252', 'jmp +505', 'jmp +1', 'jmp +1', 'nop +61', 'jmp +524', 'nop +351', 'jmp +399', 'acc +1', 'nop +397', 'acc +39', 'nop +141', 'jmp +134', 'acc +46', 'acc +14', 'acc +26', 'jmp +236', 'acc +7', 'acc -6', 'acc +35', 'jmp +397', 'acc +15', 'jmp +140', 'acc +3', 'acc -4', 'acc +37', 'acc +12', 'jmp +86', 'jmp +416', 'jmp +1', 'jmp +55', 'acc -19', 'jmp +536', 'jmp +1', 'acc -11', 'acc +15', 'jmp -61', 'acc +25', 'jmp -25', 'acc +50', 'acc +43', 'jmp +1', 'jmp +140', 'acc +46', 'nop -53', 'acc +1', 'nop +440', 'jmp +488', 'jmp +396', 'nop +443', 'acc +41', 'jmp +168', 'acc +25', 'nop +383', 'acc +12', 'acc -19', 'jmp +21', 'acc +29', 'acc +30', 'jmp +497', 'jmp +502', 'jmp +417', 'nop +351', 'acc -15', 'jmp +243', 'acc +21', 'acc +16', 'jmp +332', 'acc +28', 'acc +22', 'acc +38', 'jmp +476', 'acc +8', 'acc -11', 'jmp +458', 'acc +9', 'jmp +246', 'acc +40', 'acc +31', 'acc +26', 'jmp +218', 'acc +27', 'acc +9', 'nop +347', 'jmp +478', 'nop +28', 'nop +106', 'acc +25', 'acc -15', 'jmp +397', 'acc +31', 'jmp +231', 'acc -4', 'nop +136', 'acc +14', 'jmp +181', 'jmp +361', 'acc +16', 'acc +11', 'jmp -108', 'nop +299', 'acc +21', 'acc -2', 'jmp -106', 'jmp +246', 'acc +31', 'jmp +407', 'jmp +377', 'acc +43', 'acc -12', 'nop +142', 'acc +8', 'jmp -91', 'jmp +1', 'acc +34', 'acc +5', 'acc +31', 'jmp +12', 'acc +34', 'acc +7', 'acc +34', 'acc +20', 'jmp -45', 'acc -11', 'acc +41', 'acc +10', 'jmp +310', 'nop -106', 'jmp -36', 'acc +23', 'acc +46', 'acc +46', 'jmp +112', 'acc +41', 'nop +179', 'acc +17', 'nop +356', 'jmp +147', 'acc +42', 'nop +49', 'jmp +119', 'acc +0', 'acc +7', 'acc -18', 'acc -8', 'jmp +11', 'acc +12', 'acc +38', 'acc +39', 'jmp +281', 'nop +186', 'jmp +162', 'acc +44', 'acc +20', 'jmp +153', 'jmp +395', 'acc +49', 'jmp +1', 'acc +2', 'jmp +1', 'jmp -31', 'jmp +301', 'nop +97', 'jmp -102', 'jmp +262', 'acc +28', 'acc -15', 'acc +44', 'acc -13', 'jmp +191', 'jmp +281', 'acc +36', 'acc +1', 'nop +15', 'jmp +211', 'acc +6', 'acc -4', 'jmp +42', 'acc +34', 'acc +0', 'jmp +104', 'jmp +311', 'jmp +84', 'acc +43', 'acc -8', 'acc -10', 'acc +38', 'jmp -90', 'acc +49', 'jmp +303', 'nop +132', 'jmp +301', 'nop +60', 'acc +37', 'nop +96', 'jmp +182', 'acc +16', 'acc +18', 'nop +152', 'acc +19', 'jmp +325', 'jmp -63', 'acc +28', 'jmp +56', 'acc +18', 'acc +29', 'acc +33', 'jmp -115', 'acc +47', 'acc +19', 'jmp +1', 'nop +41', 'jmp +1', 'jmp -207', 'nop -62', 'acc -9', 'acc +42', 'acc -12', 'jmp -56', 'acc +28', 'jmp -163', 'acc +25', 'acc +17', 'jmp -217', 'acc +7', 'jmp +272', 'acc +43', 'acc +22', 'jmp +70', 'acc -17', 'jmp -117', 'acc +24', 'acc +26', 'nop -275', 'jmp -46', 'nop +87', 'acc +19', 'acc +28', 'jmp -34', 'acc +4', 'acc +9', 'acc +6', 'jmp +1', 'jmp +28', 'acc -6', 'nop -67', 'acc -10', 'jmp +271', 'acc +40', 'acc +25', 'acc -4', 'jmp -63', 'acc +46', 'jmp +78', 'acc +41', 'nop -126', 'nop +70', 'jmp +1', 'jmp +172', 'nop +270', 'jmp +30', 'jmp +1', 'acc +38', 'nop +68', 'acc +29', 'jmp +253', 'acc -18', 'jmp -89', 'acc +18', 'acc +30', 'jmp +147', 'acc +24', 'acc +11', 'acc +50', 'jmp -225', 'jmp -210', 'acc -18', 'acc +1', 'acc +38', 'jmp +1', 'jmp -79', 'acc +45', 'acc +12', 'jmp +209', 'jmp -207', 'acc +32', 'acc +4', 'acc +32', 'acc +14', 'jmp +83', 'acc +13', 'acc +1', 'acc +46', 'acc +38', 'jmp +28', 'nop +153', 'acc -17', 'jmp -73', 'acc +11', 'jmp +248', 'acc +29', 'acc +45', 'acc +16', 'jmp +96', 'jmp -273', 'acc +34', 'jmp +87', 'nop +99', 'acc -3', 'jmp -74', 'acc +12', 'nop -119', 'jmp -141', 'acc -18', 'nop -79', 'acc +1', 'acc +6', 'jmp +9', 'acc +3', 'acc +44', 'acc +39', 'jmp -165', 'acc +6', 'jmp +44', 'acc +25', 'jmp -133', 'acc +0', 'jmp +14', 'jmp +1', 'acc +1', 'jmp -223', 'jmp +71', 'nop -1', 'acc +22', 'acc +11', 'jmp -274', 'jmp -330', 'acc +45', 'jmp +1', 'acc +15', 'jmp -158', 'jmp -128', 'acc +50', 'acc +26', 'jmp -73', 'nop +99', 'jmp +71', 'acc +35', 'acc +7', 'jmp +192', 'acc +13', 'jmp +190', 'acc +4', 'acc -1', 'acc +40', 'acc -15', 'jmp +50', 'acc +29', 'jmp -337', 'jmp -75', 'acc +41', 'jmp +1', 'jmp -387', 'acc +28', 'acc +18', 'acc +19', 'jmp -62', 'nop -196', 'jmp -410', 'jmp +1', 'acc -17', 'jmp -267', 'acc +22', 'jmp -301', 'nop -98', 'acc -15', 'jmp -124', 'acc +45', 'acc -18', 'acc +15', 'acc +42', 'jmp -296', 'nop -10', 'acc +29', 'jmp -371', 'acc +3', 'jmp +1', 'nop +61', 'acc +5', 'jmp -361', 'acc -5', 'nop -326', 'jmp -379', 'acc -10', 'jmp +1', 'acc +44', 'jmp -231', 'acc +3', 'jmp -94', 'acc +1', 'jmp +113', 'jmp -336', 'acc +4', 'jmp -299', 'acc -13', 'jmp +1', 'acc +13', 'jmp +143', 'acc -11', 'acc -19', 'acc +18', 'nop -390', 'jmp -27', 'acc +42', 'jmp -232', 'acc +15', 'jmp -228', 'acc +21', 'acc +39', 'acc +47', 'acc +6', 'jmp +57', 'acc +28', 'acc +27', 'acc +50', 'jmp -397', 'acc +12', 'jmp -445', 'acc +30', 'jmp -352', 'acc -4', 'acc +26', 'acc +48', 'jmp +1', 'jmp -205', 'jmp +22', 'nop -284', 'acc -1', 'nop -361', 'acc +0', 'jmp -368', 'acc -17', 'nop -223', 'jmp -41', 'acc +4', 'acc +46', 'jmp +79', 'jmp -370', 'jmp -260', 'acc +42', 'jmp -14', 'acc +30', 'acc +50', 'acc +13', 'jmp -61', 'acc +46', 'jmp -63', 'nop -55', 'nop -320', 'jmp -11', 'acc +10', 'jmp -424', 'jmp -11', 'acc +3', 'jmp -71', 'acc +42', 'acc -13', 'jmp +4', 'nop -155', 'nop -138', 'jmp +62', 'acc +11', 'acc +19', 'acc +15', 'acc +17', 'jmp -73', 'acc -11', 'jmp -273', 'acc +8', 'acc +6', 'acc -7', 'acc +41', 'jmp -311', 'jmp -111', 'jmp -260', 'jmp +50', 'jmp -60', 'jmp +1', 'nop -89', 'acc +36', 'acc +14', 'jmp -220', 'nop -415', 'acc +28', 'jmp -402', 'acc +41', 'jmp -165', 'acc +9', 'acc -13', 'acc -18', 'acc +18', 'jmp -504', 'acc -9', 'acc +29', 'acc +44', 'jmp -444', 'acc +5', 'acc +47', 'jmp -545', 'acc +23', 'acc +7', 'nop -240', 'jmp -320', 'jmp -141', 'jmp +1', 'acc +28', 'nop -287', 'jmp -118', 'acc +44', 'acc -7', 'jmp -550', 'acc +10', 'acc +20', 'acc -3', 'jmp -401', 'acc +45', 'acc +36', 'jmp -375', 'jmp -485', 'acc +9', 'jmp -338', 'jmp -510', 'jmp -196', 'acc -16', 'jmp -372', 'acc +0', 'jmp -380', 'acc -3', 'nop -473', 'nop -361', 'jmp -311', 'acc +0', 'nop +20', 'jmp -436', 'acc +9', 'jmp +1', 'jmp -215', 'acc +19', 'jmp -451', 'jmp -43', 'acc -13', 'acc -10', 'acc -5', 'jmp -208', 'acc -11', 'jmp -156', 'acc +11', 'acc -2', 'nop -357', 'jmp -73', 'acc +21', 'jmp -159', 'acc +28', 'acc -16', 'acc +12', 'acc +1', 'jmp -282', 'jmp -131', 'acc -11', 'acc +45', 'acc +0', 'acc +28', 'jmp +1']


function day8part1(input) {
  let list = []
  let acc = 0
  for (let i = 0; i < input.length; i = i) {
    let ins = input[i].split(' ')[0]
    let value = +input[i].split(' ')[1]
    if (!list.includes(i)) {
      switch (ins) {
        case 'nop':
          list.push(i)
          i++
          break;
        case 'acc':
          list.push(i)
          acc += value
          i++
          break;
        case 'jmp':
          list.push(i)
          i += value
          break;
      }
    } else {
      return acc
    }
  }
}

function day8part2(input) {
  let arr = input
  let list = []
  let acc = 0
  for (let i = 0; i < arr.length; i = i) {
    if (list.length == 0) {
      debugger
    }
    let ins = arr[i].split(' ')[0]
    let value = +arr[i].split(' ')[1]
    if (!list.includes(i)) {
      switch (ins) {
        case 'nop':
          list.push(i)
          i++
          break;
        case 'acc':
          list.push(i)
          acc += value
          i++
          break;
        case 'jmp':
          list.push(i)
          i += value
          break;
      }
    } else {
      switch (arr[list[list.length - 1]].split(" ")[0]) {
        // nop / jmp reverse
        case 'nop':
          let jmp = 'jmp ' + arr[list[list.length - 1]].split(" ")[1]
          arr.splice(list[list.length - 1], 1, jmp)
          debugger
          i = 0
          acc = 0
          list = []
          break;

        case 'jmp':
          let nop = 'nop ' + arr[list[list.length - 1]].split(" ")[1]
          arr.splice(list[list.length - 1], 1, nop)
          debugger
          i = 0
          acc = 0
          list = []
          break;
      }
    }
  }
  return acc
}

// console.log("result", day8part2(input8))

// REVIEW Day 9
let input9 = ['38', '18', '28', '41', '37', '17', '24', '45', '50', '35', '9', '30', '11', '8', '40', '43', '46', '36', '33', '19', '14', '32', '3', '7', '16', '42', '10', '12', '13', '25', '52', '15', '21', '18', '29', '17', '20', '22', '11', '51', '23', '24', '34', '30', '26', '33', '14', '50', '27', '28', '31', '36', '44', '32', '35', '25', '37', '38', '40', '59', '39', '41', '42', '43', '70', '55', '45', '57', '46', '47', '58', '80', '52', '68', '53', '56', '60', '95', '62', '63', '72', '75', '77', '79', '109', '174', '83', '139', '96', '91', '92', '98', '93', '99', '100', '254', '120', '428', '161', '162', '154', '149', '195', '153', '232', '334', '581', '156', '170', '175', '176', '189', '197', '187', '183', '190', '191', '199', '219', '220', '309', '269', '302', '372', '345', '751', '305', '323', '410', '331', '326', '332', '339', '346', '374', '359', '370', '769', '382', '373', '381', '419', '418', '439', '489', '592', '571', '607', '651', '669', '628', '665', '685', '709', '657', '658', '1068', '792', '705', '1151', '729', '1060', '754', '763', '791', '1010', '1342', '857', '928', '1146', '1163', '1178', '1297', '1515', '1648', '1285', '1438', '1315', '1362', '1363', '1387', '1434', '1459', '1468', '1483', '1492', '1517', '1926', '1620', '1719', '2091', '2003', '2020', '3237', '2309', '2341', '2475', '3011', '2927', '4242', '3640', '2821', '2893', '2846', '4540', '2917', '2902', '4305', '2985', '6130', '3009', '4728', '4094', '3339', '3722', '4023', '4312', '4329', '5294', '4650', '4816', '5296', '8142', '5667', '5714', '5723', '5902', '6707', '8625', '5819', '8708', '8067', '5994', '6324', '6348', '10231', '9006', '9608', '11115', '11625', '10653', '8641', '8979', '9466', '10112', '10483', '10963', '11437', '11381', '11533', '11542', '12672', '14635', '16106', '19949', '17046', '28483', '15814', '22914', '17647', '17620', '17985', '19604', '18107', '18445', '39446', '18753', '19091', '19578', '30985', '34091', '33726', '27251', '24053', '23075', '24214', '27307', '30449', '36137', '36430', '36092', '41861', '33434', '36860', '38669', '66586', '42679', '37198', '36552', '54997', '79211', '37844', '42166', '42653', '47128', '47289', '51360', '48267', '50382', '59505', '51521', '60741', '63883', '69526', '88558', '74396', '80523', '69986', '75221', '148063', '73750', '79851', '88719', '80010', '89294', '99788', '80497', '84819', '102158', '94417', '98649', '131211', '168409', '101903', '148702', '112262', '149996', '137633', '143276', '252154', '143736', '184607', '182248', '148971', '217026', '175653', '164829', '160507', '165316', '259246', '186722', '179236', '272769', '193066', '196320', '200552', '255998', '375556', '364416', '249895', '347564', '292707', '280909', '309478', '309052', '304243', '314287', '342037', '354889', '325336', '530804', '339743', '365958', '526800', '648795', '554792', '435234', '465835', '389386', '859035', '493259', '604784', '542602', '554138', '941502', '573616', '780122', '885693', '613295', '1376736', '963002', '669176', '1047397', '665079', '691294', '1567786', '1222411', '755344', '824620', '928493', '855221', '901069', '882645', '931988', '1334260', '1147386', '1096740', '1207681', '1127754', '1282471', '1186911', '1304589', '1278374', '1334255', '1446638', '1356373', '1360470', '1420423', '2010399', '1579964', '1610565', '1951961', '1656413', '2011531', '1737866', '1756290', '2660962', '1814633', '2214459', '2224494', '3076836', '3804458', '2628104', '2314665', '3184504', '2638844', '2915154', '2612629', '2690628', '4208068', '3531925', '2780893', '3000387', '5691015', '3190529', '3266978', '4537183', '3394279', '5315052', '3552499', '3570923', '4029092', '4039127', '4438953', '4539159', '5708944', '4927294', '5527783', '6661257', '5251473', '7833232', '5781280', '5303257', '5471521', '8718312', '8505581', '5971422', '7610050', '7229656', '6457507', '11162549', '6946778', '11385731', '7123422', '7581591', '8478080', '8068219', '8578286', '8978112', '9466453', '10779256', '10554730', '13849499', '11222895', '13084705', '10774778', '11084537', '11274679', '15841734', '12428929', '12918200', '21777625', '13404285', '14525726', '15601502', '14070200', '14528369', '19752759', '19532842', '15649810', '16546299', '20550990', '22870738', '18444565', '20021183', '21329508', '21639267', '21859315', '31251312', '26488990', '26926271', '26988400', '23703608', '25347129', '25833214', '26322485', '44200246', '53248756', '22406676', '47692529', '28598569', '32196109', '34094375', '38185566', '34990864', '36567482', '38465748', '43188823', '40083832', '41350691', '61082775', '43498582', '51005245', '64298962', '46110284', '47753805', '48239890', '48729161', '60824078', '52155699', '86425456', '56501051', '79888638', '67186973', '60794678', '62692944', '66290484', '69085239', '71558346', '73456612', '105881767', '78549580', '81434523', '123487622', '84849273', '98265983', '91738472', '93864089', '148239523', '94350174', '99909504', '96969051', '100884860', '123688024', '145014958', '117295729', '119193995', '142581582', '127085162', '128983428', '135375723', '139747096', '166054290', '159984103', '195235034', '163398853', '173172995', '175298612', '176587745', '178713362', '185602561', '186088646', '302401386', '191319225', '194259678', '196878555', '260868963', '243466442', '236489724', '244380891', '246279157', '248177423', '262460885', '256068590', '411576276', '321464369', '299731199', '323382956', '430469537', '494966233', '420054187', '351886357', '354011974', '355301107', '607954947', '371691207', '377407871', '668231610', '385578903', '757270110', '433368279', '479956166', '623114155', '480870615', '490660048', '494456580', '562192084', '651617556', '579451546', '621195568', '644847325', '675269313', '677394930', '723577564', '705898331', '707187464', '725703181', '862351255', '726992314', '749099078', '1108637592', '818947182', '971530663', '1430765028', '1371839639', '913324445', '970616214', '1146074136', '1322242255', '985116628', '1200647114', '1513968811', '1286639010', '1224298871', '2430879847', '1320116638', '1352664243', '1383293261', '1450569878', '1413085795', '1432890645', '1719715292', '2559207470', '1568046260', '2415881656', '1732271627', '1790477845', '2131190764', '2920362406', '1883940659', '1898441073', '1955732842', '2185763742', '3415996475', '2209415499', '3241047723', '2510937881', '3905479034', '4386612689', '2672780881', '2703409899', '4056074142', '6336358881', '3018616138', '2845976440', '3000936905', '3358524105', '3300317887', '3451986919', '3616212286', '6204500545', '4069704401', '3782381732', '3839673501', '4917057211', '3854173915', '4141496584', '7441814471', '7310752124', '5450463222', '5214347780', '5376190780', '6526954796', '5673717786', '5518757321', '6844906483', '7757708870', '5846913345', '5864592578', '6146294327', '11360642107', '9504818432', '8369044130', '7068199205', '7398594018', '12444389985', '7622055233', '7636555647', '7693847416', '7995670499', '17126873665', '9355844364', '13155312968', '10590538560', '14881009212', '11192475107', '10894948101', '11365670666', '22973787010', '11383349899', '11711505923', '11993207672', '12010886905', '12932791783', '18781943917', '14466793223', '14690254438', '15063869704', '14704754852', '15020649251', '25585202539', '19059518082', '19019905546', '25958817805', '18586209059', '20739194263', '24866818891', '21973888459', '21485486661', '22087423208', '25897229959', '22905835006', '22749020565', '23094855822', '23376557571', '23704713595', '29395009290', '24943678688', '29171548075', '29710903689', '35803063967', '34040554797', '39798712345', '29725404103', '37108072459', '37606114605', '48784922185', '39325403322', '43488214828', '40071695720', '60746742655', '43572909869', '44722909024', '44234507226', '92357832054', '45654855571', '52144029855', '46453734160', '46471413393', '47081271166', '48648392283', '54115226763', '62549793293', '58882451764', '91315778392', '73298313972', '63765958900', '66833476562', '76433475781', '90377764595', '89750144460', '79397099042', '97798885426', '83559910548', '94186922483', '89889362797', '87807417095', '114693823148', '112997678527', '92108589731', '92126268964', '98597764015', '227691501675', '100586640156', '95729663449', '152927557888', '116665020056', '121432245057', '159469091920', '130599435462', '140199434681', '143163057942', '156583621022', '243749698098', '183537080544', '167204516137', '247276509015', '171367327643', '173449273345', '177696779892', '179916006826', '235271647673', '184234858695', '187838253180', '222018885213', '187855932413', '395468158558', '307403950818', '320132074025', '535667593239', '238097265113', '371393012957', '261631679738', '297803951599', '270798870143', '545501215931', '365181943155', '323788137159', '351439374832', '573164938450', '338571843780', '351146053237', '448495650035', '353365280171', '365552712305', '364150865521', '375694185593', '449469932918', '739845051114', '559435631337', '511644069572', '569035630556', '499728944851', '568602821742', '642191883100', '508896135256', '532430549881', '600203523518', '662985894754', '594587007302', '662359980939', '907607474336', '1008905564255', '689717897017', '702722709301', '995557163271', '1564592793827', '815022645223', '717516145692', '729703577826', '887338255165', '825164118511', '1442567760415', '1008625080107', '1324290585128', '1214366778873', '1685275060288', '1032159494732', '1231588716496', '1041326685137', '1103483142558', '1948934159473', '1194790530820', '1256946988241', '1365082690240', '2880065591108', '2240213796603', '1392440606318', '2379615439050', '1420238854993', '1544726223049', '1447219723518', '2812302413758', '1542680264203', '1554867696337', '3705229709619', '1833789198618', '2298273673378', '2040784574839', '2550702866076', '2812679461311', '2811814684578', '2678808440014', '2272915401633', '2615029385813', '5426844070391', '2677185843234', '3376469462821', '2839660329836', '4259899184829', '2867458578511', '3853141369715', '5397867592764', '6320259095432', '3281008922136', '2989899987721', '5679760992269', '3097547960540', '3583464839042', '8593174497065', '3874573773457', '9554334765726', '5321793496975', '7636368647650', '5292215229047', '4887944787446', '5829560317557', '6864473761178', '4950101244867', '5454689715649', '8707852992527', '5516846173070', '6742032351968', '6573364826763', '5965006539051', '5857358566232', '6087447948261', '11208203882878', '8954906526772', '8614394133610', '6972121733997', '8047649205407', '6681012799582', '9166789002504', '8824675018324', '17781183136114', '9838046032313', '10180160016493', '10404790960516', '10242316473914', '10342634503095', '10466947417937', '12197858972652', '14812265093004', '10971535888719', '11374204739302', '11481852712121', '11822365105283', '11944806514493', '17214438207911', '12538371365814', '12768460747843', '13653134533579', '20709263891851', '21554364755795', '17085803760098', '14728662004989', '21724169186035', '18662721050637', '19004835034817', '20018206048806', '20080362506227', '24908822021482', '20809581921032', '20584950977009', '21314170391814', '21438483306656', '39472302971669', '32291434633153', '22345740628021', '42309120163044', '23304217817404', '23767171619776', '36219273242728', '38743083556864', '25306832113657', '26421595281422', '28381796538568', '35538243926021', '31814465765087', '33391383055626', '45387194619884', '39023041083623', '38680927099443', '39085197541044', '45649958445425', '78108238624667', '41394532898041', '42023434283665', '41899121368823', '42752653698470', '87044491343466', '70495392864530', '47071389437180', '59986444862504', '49725813098826', '48611049931061', '59812978337048', '51728427395079', '67352709691108', '75032645212483', '54803391819990', '67062723638011', '81433580797913', '88465922335221', '75414817339291', '77766124640487', '84735155986469', '80984318909867', '80479730439085']

let testInput9 = ['35', '20', '15', '25', '47', '40', '62', '55', '65', '95', '102', '117', '150', '182', '127', '219', '299', '277', '309', '576']

function day9Part1(input, preamble) {
  let arr = input.slice(preamble)
  let pre = arr.slice(0, preamble + 1)
  let count = 0
  for (let i = 0; i < arr.length; i++) {
    let num = arr[i]
    let check = input.slice(i, preamble + i + 1)
    let valid = false
    console.log(num, check)
    check.forEach(x => {
      check.forEach(y => {
        debugger
        if (+x + +y == +num) {
          valid = true
          return
        }
      })
    })
    if (!valid) {
      return num
    }
  }
  return count
}

// console.log(day9Part2(input9, 25))
// console.log(day9Part1(testInput9, 5))

function day9Part2(input, preamble) {
  let arr = input.slice(preamble)
  // let pre = arr.slice(0, preamble + 1)
  let code = 0
  for (let i = 0; i < arr.length; i++) {
    let num = arr[i]
    let check = input.slice(i, preamble + i + 1)
    let valid = false
    // console.log(num, check)
    check.forEach(x => {
      check.forEach(y => {
        if (+x + +y == +num) {
          valid = true
          return
        }
      })
    })
    if (!valid) {
      code = num
    }
    if (code > 0) {
      break;
    }
  }
  console.log(code)
  let count = 0
  let nums = []
  for (let x = 0; x < input.length; x++) {
    let num1 = +input[x]
    count += num1
    nums.push(num1)
    for (let y = x + 1; y < input.length; y++) {
      let num2 = +input[y]
      debugger
      count += num2
      nums.push(num2)
      if (count == code) {
        let minMax = nums.sort((a, b) => a - b)
        console.log(minMax[0], minMax[minMax.length - 1])
        return minMax[0] + minMax[minMax.length - 1]
      }
      if (count > code) {
        break;
      }
    }
    count = 0
    nums = []
  }
}

// console.log(day9Part2(input9, 25))
// console.log(day9Part2(testInput9, 5))
// REVIEW day 10
let input10 = ['126', '38', '162', '123', '137', '97', '92', '67', '136', '37', '146', '2', '139', '74', '101', '163', '128', '127', '13', '111', '30', '117', '3', '93', '29', '152', '80', '21', '7', '54', '69', '40', '48', '104', '110', '142', '57', '116', '31', '70', '28', '151', '108', '20', '157', '121', '47', '75', '94', '39', '73', '77', '129', '41', '24', '44', '132', '87', '114', '58', '64', '4', '10', '19', '138', '45', '76', '147', '59', '155', '156', '83', '118', '109', '107', '160', '61', '91', '102', '115', '68', '150', '34', '16', '27', '135', '161', '46', '122', '90', '1', '164', '100', '103', '84', '145', '51', '60']


// REVIEW day 11

let input11 = ['LLLLLLLL.LLL.LLLLLLLLLLLLL.LL.LLLLLL.LL.LLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLL.LLLLLLLL', 'LLLLLLLL.LLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLL.LL.LLLLLLL.LLLLLL.LLLLLLLLL.LLLL.LLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.LLL.LLLLLLLLLLLL.LLL..LLLLLL.LLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LL.L.LLLLLLLLLLLLLLLL..LLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL', 'LLLLLLL.LLLLLLLLLLL.LLLLLLLLL.L.LLLLLLLLLLLLL..LLLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLL.LL.LLLLL', '..L.L...L....L......LL.LLL..L.L.L.L...L.........LLLL..L..L...LL..L.L.L.....LLLLL..L..L..L..', 'LLLLLLLL..LLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLL.LLLLLLLLLLLLLLLL.LLL.LLLLLL.LLLLLLLL', 'LLLLLLLLLLLLLLLLLL..LLLLLLLLL.LLLLLLLLLL.LL.LLLLL.LLL..LLLLLLLLLLL..LLLL.LLLLLLLLL.LLLLLLLL', 'LLLLLLLLLLLLLL.L.LL.LLLLLLLLL.LLLLLL.LLLLLLLLL.LLLLL.L.LLLLLL.LLLLLLLLLLLLLLLLL.LL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.LLLLLLL.L..LLLLLLLLLL.LLLLL.LLLLLL.LLLLLL.L.LLLLLLLLLLLL.LLLLL.LLL.LLLL', 'LLL.LLLL.LLLLL.LLLL.LLLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLLLLLLLLL.LL.LL.LLLLLLLLLLLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLLLLLL.LLLLL.LLLLLL.L.LLLLLLL..LLLL.L.LLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL', 'LLLLLLL.LLLLLL.LL.L.LLLLLLLL..LLLLLLLLLLLLL.LLLLLLLLLL.LL.LLL.LLLLL.LLLLLL.L.LLLL..LLLLLLLL', 'LLLLLLLL.LLLLL.LLLL..LLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLL.LLLLLL.LLLLLLLLLLL.LL..LLLL.LLLLLLLL', 'LLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLL.LLLLLLL..L.LLLLLLLLLLLL.LLLLL.LLLLLL.L.LLLLL.LLLLLLLL', '.L.LL....LLL..L.......L...LLLL..LLL....L..L...L.....L...L...LL......L.....L......L........L', 'LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL...LLLLLLLL.LL.LLLL.LLLLL..LLL.L.LLLLLLLL.LLLLLLLLLLLL.L', 'LLLLLLLL.LLLL.LLLLL.LLLLLLLLL.LL.L.LLLLLLLLLL..LLLLLLLLLLLLLL.LLLLL.LLLLLLLL.LLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLLLL.LLLLLLL.LL.LLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.LLLLLLLLL..LLLLL.LLLLLLLLLLLLLLLLL.LLLLLL.LL.LLLLLLLL.LL.LLLLL.LLLLLL.L', '.LLLLLLLL.LLLL.LLLL.LLLLLLLLL.L.LLLL.LLLLLLLL..LL.L.LL.LLLLLL.L.LLL.L.LL.LL..LLLLL.LLLLLLLL', 'LLLLL.LLLLLLLL.LLLL.LLLLLLLLL.LLLLL.LLLLLLLLLL.LLL.LLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLLLLLL.LLL', 'L..L.L..L....L....L.....LL.L.LL.L...L.L.LL..LL.L.....L.L...L....LL.L....LL........L..LL...L', 'LLLLLLLL.LLLLL.LLLLLLL.LLLLLL.LLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLLLLLLL..LLLL.LL.LLLLLLLLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.LLLLL.L.LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL..LLLLL.LLLLLLLL.LLLL..L.LLLLLL', 'LLLLLLLL...LLL.LLLL..LLLLLLL..LLLLLL.L.LLLLLLLLLLL.LLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLLLLLLLLLL', 'LLL.LLLL.LLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLL.LL.LLLLLLLLLLLL.LLLLLLLL.LLLLL.LLL..LLL', 'LLLLLLLLLLLLLL.LLLL.LLLLL.LLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLL', 'LL.LL.LLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLL.LLLLLLLLLLL', 'LLLL.LLL.L.LLL.LLLL.LLLLLLLLL.L.LLLL.LLLLL.LLL.LLLLL.L.LLLLLL.LLLLL.LLLLLLLL.LLLLLLLLLLLLLL', '.L........L...L.....LL..L..L......L.L.LLL.L.LL..LL....LLL..L.L..LLLL...LLLL...L..........LL', 'LLLLLLL.LLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLL.LLLL.LLLLLL.LLLLL.LLLLLLLL.LLLLL.LLLLLLL.', 'LLLLLLLL.LLLLL..LLL.LLLLLLLLL.LLLLLL.LLLLLLLL..LLLLLLL.LLLLLL.LLLLLLLLLLLLLLLL.LLL.LLLLLLLL', 'LLLLLLLL.LLLLLLL.LL.LLLLLLLLLLLLLLLLLLLLLL.LLL.LLLLLLL.LLLLLL.LLLLL.LLLLLLLLL.LLLL.LLLLLLLL', '.LLLLLLL.LLLLL.LLLL.LLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLL.LL.LLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL', 'LLL.LLLL.LLLLL.LLLL.LLLLLLLLL.LLLLLL.LLLLLLL.L.LLLLLLL.LLLLL...LLLL.LLLLLLLL.LLLLL.LLLLLLLL', 'LLLLLLLL.LLL.L.LLLLLLLLLLLLLL.LLLLLLLLLLL.LLLL.LLLLLLL.LLLLLL.LLLLL.LLLLLLLLLL.LLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.L.LLLLLLLLLLLLLL.LLL.LLLLL.LLLL.LL.LLLLLLL.LL.L.LLLLLLLL.LLL.L.LLLLLLLL', '.LLLLLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLL.L.LLLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLLLLLLLLLLL', 'LLLLLLLL.LLLLLLLLLL.LLLLLLL.LLL.LLLLLLLLLLLLLLLLLLL.LL.LLLLLLLLLLLL.LLLL.LLL.LL.LL.LLLLLLLL', '.L....L........L.L.L......LL..L.L.L...LLLL.....L...L..........LL.LLLL.L...L.L.LL.LL.L...L.L', 'LLLLLLLL.LLLL.LLL.L..L.LLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.L.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL', 'LLLL.LLL.LLLL..LLLL.LL.LLLL.LLLLLLLL.LLL.LLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLL..LLLL.LLL.LLLLL', 'LLLLLLLL..LLLLLL.LL.LLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLL.LLLL.LLL.LLLLL.LLLLLLLL', 'LLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLL.LLL.LL..LLLLLLLLLLLLL.LLL.L.LL.L.LLL', 'LLLLLLLLLLLLL..LL.LLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLL.LLLLLL.LLLLL.LLLLLLLL.LLLLLLLLLLLLLL', 'LLL.LLLL.LLLLL.LLLL..LLLLL.LLLLLLLLL.LLLL..LLLLLLLLLL..LLLLLLLLLLLL.LLLLLLLLLLLLLL.LLL.LLLL', 'LLLLLLLL.LLLLL.LLLL.LLLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL', 'L.L.LLLL.LLLLL.LL.L.LLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLL.LLLLLLLLL.LLL.LLLLLLLLLLLLLLLLLLLLLL', '..LLLL.........L.LL.LL....L.LL...LLLL....L...L........LL...L.L......L.LLL.L.L...LL....L...L', 'LLLLLLLL.LL.LL.LLLL.LLLL.LLLLLLL.LLL.LLLLLLLLL.LLLLLL.LLLLLL..LLLLL.LLLLL.LLLLLLLLLLLLLLLLL', 'LLLLLL.LLLLLLL.LLLL.LLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLL..LLLLLL.L.L.L.LLL.LLLLLLLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LL.L.LLLLLLLLLLLLLLLLLLLLLLLL.L.LLLL.LL.LLLLLL.LLLLL.LLLLLLLL..LLLL.LLLLLLLL', 'LLLLL.LL.LLLLL.LLLLLLLLLLLLLLLLLLLLL.L.LLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL', 'LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLL.LLLL.LLLLL..LLLLL.L.LLLLLL.LLLLL.LLLLLLLL', 'LLLLLLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLL.LLL', 'LLLLLLLL.LLLLL.LLLL.LLLLLLLLL.LLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL', 'L.....LL..L..L.L..L....L.L......LL..L......L.LL..L..L..L...L..L...L.....L......LLLLLL......', 'LLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLL..LLLLLLLLLLLLLLLL.LLLLL.L.LLLL.LLLLLLLL.LLLLL.LLLLLLL.', 'LLLLLLLL.LLLLL.LLLL.LLLLLL.LL.LLLLLL.LLLLLLLLL.LLLLL.L.LLLLLL.LLLLL.LLLL.LLL.LLLLLLLLLLLLL.', 'LL.LLLLL.LLLLL.LLLL.LLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLL..LLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL', '.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLL.LLLLL.LLLLLLLL.LLLLLLLLLLLLLL', 'L....L.LL.LLL.L...LL.L....LL..........L.L..L.....LL...L.....LL......L...LLLL.L.....L.LL.L..', 'LLLLLLLL.LLL.LLLL.L.LLLLLL.LL.LLLLLL.LLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL.LLL.LLLL', 'LL.LLLL..LLLLL..LLL.LLLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLL..LLLLLLLLLLLL.LLLLLLLL.LLLLL.LLLL.LLL', 'LLLLLL.L.LLL.L.L.LL.LLLLLLLLLLLLLLLL.LLLL.LLLL.L..L.LL.LLLLLL.LLLLLL.LLLLLLL.LLLLL..LLLL.LL', 'LLLLLLLL.LLLLL.LLLLLLLLLLLLLLLLLLLLL..LLLLLLLL...LLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL', 'LLLLLLLL.LLLLL.LL.L.LLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLL.LLLLL.LLLLLLL..LLLLL.LLLLLLLL', 'LLLLLL.LLLLLLL..LLLLLLLLLL.LLLLLLLLL.LLLLLL.LL.LLLLLLL.LLLLLL.LLLLLLLLLL.LLLLLLLLLL.LLLLLLL', 'L......L....L...L..L...L..L.LLL.LLLL....L...L.L.L....L..L...LLL.LLL...L......LL....L...L.LL', 'LLLLLLLL.LLLLL.LLL..LL.LLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL..L.LLLLLLLLLL.LLLLLLLL.LLLLLLL', 'LLLLLLLL.LLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.LLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLL..LLLLLLLL', 'LLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL', 'LLLL.LLL.LLLL..LLLL.L.L.LLLLL.LL.L.L.LLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLL', 'LLLLLLLLLLLLLLLLLL..L.LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLL', 'LL.LLLLL.LLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LL.LLLLLLLLLLLL..LLLLL.LLLLLLLL.LLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLLLLLLLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLL.LL.LLLLL.LLLLLLLL', 'LLLLLLLL.LLLLL.LLL.LLLLLLLLLL.LLLLLLLLLLLLLLL..LLLLLLL.LLLLLL.LLLLL.LLLLLLLL.LLLLL.LLLLLLLL', '.LLL.L..L...L.L...L...LL.L..LL.L...LLL.L.L...L...L.LLL..L.......L....L..L......LL..........', 'LLLLLLLL.LLLLL.LLLL.LL.LLLLLLLLLLLLL.LLLLLLLLL.L.LLLLL.LLLLLL.LLLLL.LLLLLLLL.LLLLL.LLLLLLLL', 'LLLLLLLL.LLLLLLLL.LLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLL..LLLL.LL.', 'LLLLLLLL.L.LLLLLLLLLLLLLLLLLLLLL.LLL..LLLLLLLL.LLLLLLL.LLL.LLLLLLLL.LLLLLLLL.LLLL..LLLLLLLL', 'LLLLLLLL.LLLLL.LLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LL.LLLLLLLLLLLLLLLLLLL.L..LLLL.LLLLLLLL', 'LLL.LLLL.LLLLL.LLLL.LLLLLLL.LLLLLLLL.LL.LLLLLL.LLLLLLL.LLLLLL.LLLLL.LLLLLL.L.LLLLLLLLLLLLLL', 'LL.LLLLL.L.LLL.LLLL.L.LLLLLLLLLLLLLL..LLLLLLLL.LLLLLLL.L.LLLL.LLL.L.LLLLLLLLLLLLLL.LLLLLLLL', 'LLLLLLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLLLLLLLLLLLLLLLLL', 'LL.LLLLL.LL.LLLLLLL.LLLLLLLLL.LLLL.L.LLLLLLLLL.LLLLLLL..LLLLL.LLLLL.LLLLLLLLLLLLLL.LLL.LLLL', 'LLLLLLLL.LLLLLLLLLL.LLLLLLLLL.LLLL.L.LLLLLLLLL.LLLL.LLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLL']

let inputTest11 = ['L.LL.LL.LL', 'LLLLLLL.LL', 'L.L.L..L..', 'LLLL.LL.LL', 'L.LL.LL.LL', 'L.LLLLL.LL', '..L.L.....', 'LLLLLLLLLL', 'L.LLLLLL.L', 'L.LLLLL.LL']

function day11Part1(input) {
  let previous = []
  let count = 0
  for (let i = 0; i < 1000; i++) {
    previous = input.map(i => i)
    let seats = previous.map(i => i)
    for (let r = 0; r < input.length; r++) {
      let row = input[r]
      for (let col = 0; col < row.length; col++) {
        let chair = row[col]
        let crowd = 0
        if (chair != '.') {
          // above check
          if (input[r - 1]) {
            if (input[r - 1][col - 1] == "#") {
              crowd++
            }
            if (input[r - 1][col] == '#') {
              crowd++
            }
            if (input[r - 1][col + 1] == '#') {
              crowd++
            }
          }
          // bellow check
          if (input[r + 1]) {
            if (input[r + 1][col - 1] == "#") {
              crowd++
            }
            if (input[r + 1][col] == '#') {
              crowd++
            }
            if (input[r + 1][col + 1] == '#') {
              crowd++
            }
          }
          // same level checks
          if (input[r][col - 1]) {
            if (input[r][col - 1] == '#') {
              crowd++
            }
          }
          if (input[r][col + 1]) {
            if (input[r][col + 1] == '#') {
              crowd++
            }
          }
          // change checks
          if (chair == '#') {
            if (crowd > 3) {
              let el = seats[r].split('')
              el.splice(col, 1, "L")
              count--
              seats.splice(r, 1, el.join(""))
              crowd = 0
            }
          } else if (chair == 'L') {
            if (crowd < 1) {
              let hash = seats[r].split('')
              hash.splice(col, 1, "#")
              count++
              seats.splice(r, 1, hash.join(""))
              crowd = 0
            }
          }
        }
      }
    }
    input = seats.map(i => i)
  }
  console.log(input)
  return count
}

// console.log(day11Part1(inputTest11))
// console.log(day11Part1(input11))

function day11Part2(input) {
  let previous = []
  let count = 0
  for (let i = 0; i < 1000; i++) {
    previous = input.map(i => i)
    let seats = previous.map(i => i)
    for (let r = 0; r < input.length; r++) {
      let row = input[r]
      for (let col = 0; col < row.length; col++) {
        let chair = row[col]
        let crowd = 0
        if (chair != '.') {
          // above check
          if (input[r - 1]) {
            if (input[r - 1][col - 1] == "#") {
              crowd++
            }
            if (input[r - 1][col] == '#') {
              crowd++
            }
            if (input[r - 1][col + 1] == '#') {
              crowd++
            }
          }
          // bellow check
          if (input[r + 1]) {
            if (input[r + 1][col - 1] == "#") {
              crowd++
            }
            if (input[r + 1][col] == '#') {
              crowd++
            }
            if (input[r + 1][col + 1] == '#') {
              crowd++
            }
          }
          // same level checks
          if (input[r][col - 1]) {
            if (input[r][col - 1] == '#') {
              crowd++
            }
          }
          if (input[r][col + 1]) {
            if (input[r][col + 1] == '#') {
              crowd++
            }
          }
          // change checks
          if (chair == '#') {
            if (crowd > 3) {
              let el = seats[r].split('')
              el.splice(col, 1, "L")
              count--
              seats.splice(r, 1, el.join(""))
              crowd = 0
            }
          } else if (chair == 'L') {
            if (crowd < 1) {
              let hash = seats[r].split('')
              hash.splice(col, 1, "#")
              count++
              seats.splice(r, 1, hash.join(""))
              crowd = 0
            }
          }
        }
      }
    }
    input = seats.map(i => i)
  }
  console.log(input)
  return count
}

// console.log(day11Part2(inputTest11))
console.log(day11Part2(input11))